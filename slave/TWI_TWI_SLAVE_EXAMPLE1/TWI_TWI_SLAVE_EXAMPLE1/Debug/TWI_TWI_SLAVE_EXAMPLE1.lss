
TWI_TWI_SLAVE_EXAMPLE1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003b7c  00400000  00400000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00403b7c  00403b7c  0000bb7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     0000086c  20000000  00403b84  00010000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          0000026c  2000086c  004043f0  0001086c  2**2
                  ALLOC
  4 .stack        00003000  20000ad8  0040465c  0001086c  2**0
                  ALLOC
  5 .ARM.attributes 0000002e  00000000  00000000  0001086c  2**0
                  CONTENTS, READONLY
  6 .comment      0000005b  00000000  00000000  0001089a  2**0
                  CONTENTS, READONLY
  7 .debug_info   00007c85  00000000  00000000  000108f5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001920  00000000  00000000  0001857a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00002c0c  00000000  00000000  00019e9a  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000700  00000000  00000000  0001caa6  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000638  00000000  00000000  0001d1a6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0000f108  00000000  00000000  0001d7de  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000958e  00000000  00000000  0002c8e6  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0003ff9f  00000000  00000000  00035e74  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  0000190c  00000000  00000000  00075e14  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <_sfixed>:
  400000:	20003ad8 	.word	0x20003ad8
  400004:	00400489 	.word	0x00400489
  400008:	00400485 	.word	0x00400485
  40000c:	00400485 	.word	0x00400485
  400010:	00400485 	.word	0x00400485
  400014:	00400485 	.word	0x00400485
  400018:	00400485 	.word	0x00400485
	...
  40002c:	00400485 	.word	0x00400485
  400030:	00400485 	.word	0x00400485
  400034:	00000000 	.word	0x00000000
  400038:	00400485 	.word	0x00400485
  40003c:	00400485 	.word	0x00400485
  400040:	00400485 	.word	0x00400485
  400044:	00400485 	.word	0x00400485
  400048:	00400485 	.word	0x00400485
  40004c:	00400485 	.word	0x00400485
  400050:	00400485 	.word	0x00400485
  400054:	00400485 	.word	0x00400485
  400058:	00400485 	.word	0x00400485
  40005c:	00400485 	.word	0x00400485
  400060:	00400485 	.word	0x00400485
  400064:	00400485 	.word	0x00400485
  400068:	00400485 	.word	0x00400485
  40006c:	00400485 	.word	0x00400485
  400070:	00400485 	.word	0x00400485
  400074:	00400485 	.word	0x00400485
  400078:	00400485 	.word	0x00400485
  40007c:	00400485 	.word	0x00400485
  400080:	00400485 	.word	0x00400485
  400084:	00400485 	.word	0x00400485
  400088:	00400485 	.word	0x00400485
  40008c:	00400485 	.word	0x00400485
  400090:	00400485 	.word	0x00400485
  400094:	00400485 	.word	0x00400485
  400098:	004007c9 	.word	0x004007c9
  40009c:	00400485 	.word	0x00400485
  4000a0:	00400485 	.word	0x00400485
  4000a4:	00400485 	.word	0x00400485
  4000a8:	00400485 	.word	0x00400485
  4000ac:	00400485 	.word	0x00400485
  4000b0:	00400485 	.word	0x00400485
  4000b4:	00400485 	.word	0x00400485
  4000b8:	00400485 	.word	0x00400485
  4000bc:	00400485 	.word	0x00400485
  4000c0:	00400485 	.word	0x00400485
  4000c4:	00400485 	.word	0x00400485
  4000c8:	00400485 	.word	0x00400485
  4000cc:	00400485 	.word	0x00400485
  4000d0:	00400485 	.word	0x00400485
  4000d4:	00400485 	.word	0x00400485
  4000d8:	00400485 	.word	0x00400485
  4000dc:	00400485 	.word	0x00400485
  4000e0:	00400485 	.word	0x00400485
  4000e4:	00400485 	.word	0x00400485
  4000e8:	00400485 	.word	0x00400485
  4000ec:	00400485 	.word	0x00400485
  4000f0:	00400485 	.word	0x00400485
  4000f4:	00400485 	.word	0x00400485
  4000f8:	00400485 	.word	0x00400485

004000fc <__do_global_dtors_aux>:
  4000fc:	b510      	push	{r4, lr}
  4000fe:	4c05      	ldr	r4, [pc, #20]	; (400114 <__do_global_dtors_aux+0x18>)
  400100:	7823      	ldrb	r3, [r4, #0]
  400102:	b933      	cbnz	r3, 400112 <__do_global_dtors_aux+0x16>
  400104:	4b04      	ldr	r3, [pc, #16]	; (400118 <__do_global_dtors_aux+0x1c>)
  400106:	b113      	cbz	r3, 40010e <__do_global_dtors_aux+0x12>
  400108:	4804      	ldr	r0, [pc, #16]	; (40011c <__do_global_dtors_aux+0x20>)
  40010a:	f3af 8000 	nop.w
  40010e:	2301      	movs	r3, #1
  400110:	7023      	strb	r3, [r4, #0]
  400112:	bd10      	pop	{r4, pc}
  400114:	2000086c 	.word	0x2000086c
  400118:	00000000 	.word	0x00000000
  40011c:	00403b84 	.word	0x00403b84

00400120 <frame_dummy>:
  400120:	b508      	push	{r3, lr}
  400122:	4b06      	ldr	r3, [pc, #24]	; (40013c <frame_dummy+0x1c>)
  400124:	b11b      	cbz	r3, 40012e <frame_dummy+0xe>
  400126:	4806      	ldr	r0, [pc, #24]	; (400140 <frame_dummy+0x20>)
  400128:	4906      	ldr	r1, [pc, #24]	; (400144 <frame_dummy+0x24>)
  40012a:	f3af 8000 	nop.w
  40012e:	4806      	ldr	r0, [pc, #24]	; (400148 <frame_dummy+0x28>)
  400130:	6803      	ldr	r3, [r0, #0]
  400132:	b113      	cbz	r3, 40013a <frame_dummy+0x1a>
  400134:	4b05      	ldr	r3, [pc, #20]	; (40014c <frame_dummy+0x2c>)
  400136:	b103      	cbz	r3, 40013a <frame_dummy+0x1a>
  400138:	4798      	blx	r3
  40013a:	bd08      	pop	{r3, pc}
  40013c:	00000000 	.word	0x00000000
  400140:	00403b84 	.word	0x00403b84
  400144:	20000870 	.word	0x20000870
  400148:	00403b84 	.word	0x00403b84
  40014c:	00000000 	.word	0x00000000

00400150 <sysclk_init>:

	SystemCoreClockUpdate();
}

void sysclk_init(void)
{
  400150:	b510      	push	{r4, lr}
	uint32_t unique_id[32];
	uint32_t trim_value;
#endif

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  400152:	480e      	ldr	r0, [pc, #56]	; (40018c <sysclk_init+0x3c>)
  400154:	4b0e      	ldr	r3, [pc, #56]	; (400190 <sysclk_init+0x40>)
  400156:	4798      	blx	r3
		osc_enable(e_src);
		osc_wait_ready(e_src);
		break;

	case PLL_SRC_SLCK_XTAL:
		SUPC->SUPC_CR |= SUPC_CR_KEY_PASSWD | SUPC_CR_XTALSEL;
  400158:	4a0e      	ldr	r2, [pc, #56]	; (400194 <sysclk_init+0x44>)
  40015a:	6813      	ldr	r3, [r2, #0]
  40015c:	f043 4325 	orr.w	r3, r3, #2768240640	; 0xa5000000
  400160:	f043 0308 	orr.w	r3, r3, #8
  400164:	6013      	str	r3, [r2, #0]
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400166:	4b0c      	ldr	r3, [pc, #48]	; (400198 <sysclk_init+0x48>)
  400168:	4798      	blx	r3
		PMC->CKGR_PLLAR = p_cfg->ctrl;
  40016a:	4a0c      	ldr	r2, [pc, #48]	; (40019c <sysclk_init+0x4c>)
  40016c:	4b0c      	ldr	r3, [pc, #48]	; (4001a0 <sysclk_init+0x50>)
  40016e:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
  400170:	4c0c      	ldr	r4, [pc, #48]	; (4001a4 <sysclk_init+0x54>)
  400172:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  400174:	2800      	cmp	r0, #0
  400176:	d0fc      	beq.n	400172 <sysclk_init+0x22>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400178:	2000      	movs	r0, #0
  40017a:	4b0b      	ldr	r3, [pc, #44]	; (4001a8 <sysclk_init+0x58>)
  40017c:	4798      	blx	r3
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  40017e:	4b0b      	ldr	r3, [pc, #44]	; (4001ac <sysclk_init+0x5c>)
  400180:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  400182:	480b      	ldr	r0, [pc, #44]	; (4001b0 <sysclk_init+0x60>)
  400184:	4b02      	ldr	r3, [pc, #8]	; (400190 <sysclk_init+0x40>)
  400186:	4798      	blx	r3
  400188:	bd10      	pop	{r4, pc}
  40018a:	bf00      	nop
  40018c:	02dc6c00 	.word	0x02dc6c00
  400190:	00400659 	.word	0x00400659
  400194:	400e1410 	.word	0x400e1410
  400198:	0040036d 	.word	0x0040036d
  40019c:	05b83f01 	.word	0x05b83f01
  4001a0:	400e0400 	.word	0x400e0400
  4001a4:	00400379 	.word	0x00400379
  4001a8:	00400309 	.word	0x00400309
  4001ac:	00400571 	.word	0x00400571
  4001b0:	02dc8000 	.word	0x02dc8000

004001b4 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  4001b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4001b8:	460c      	mov	r4, r1
  4001ba:	4690      	mov	r8, r2
	int nChars = 0;

	if (file != 0) {
  4001bc:	b960      	cbnz	r0, 4001d8 <_read+0x24>
		return -1;
	}

	for (; len > 0; --len) {
  4001be:	2a00      	cmp	r2, #0
  4001c0:	dd0e      	ble.n	4001e0 <_read+0x2c>
  4001c2:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
  4001c4:	4e09      	ldr	r6, [pc, #36]	; (4001ec <_read+0x38>)
  4001c6:	4d0a      	ldr	r5, [pc, #40]	; (4001f0 <_read+0x3c>)
  4001c8:	6830      	ldr	r0, [r6, #0]
  4001ca:	4621      	mov	r1, r4
  4001cc:	682b      	ldr	r3, [r5, #0]
  4001ce:	4798      	blx	r3
		ptr++;
  4001d0:	3401      	adds	r4, #1

	if (file != 0) {
		return -1;
	}

	for (; len > 0; --len) {
  4001d2:	42bc      	cmp	r4, r7
  4001d4:	d1f8      	bne.n	4001c8 <_read+0x14>
  4001d6:	e006      	b.n	4001e6 <_read+0x32>
_read (int file, char * ptr, int len)
{
	int nChars = 0;

	if (file != 0) {
		return -1;
  4001d8:	f04f 30ff 	mov.w	r0, #4294967295
  4001dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	}

	for (; len > 0; --len) {
  4001e0:	2000      	movs	r0, #0
  4001e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		ptr_get(stdio_base, ptr);
		ptr++;
		nChars++;
  4001e6:	4640      	mov	r0, r8
	}
	return nChars;
}
  4001e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4001ec:	200008c8 	.word	0x200008c8
  4001f0:	200008c0 	.word	0x200008c0

004001f4 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len);

int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
  4001f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4001f8:	460e      	mov	r6, r1
  4001fa:	4615      	mov	r5, r2
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
  4001fc:	3801      	subs	r0, #1
  4001fe:	2802      	cmp	r0, #2
  400200:	d80f      	bhi.n	400222 <_write+0x2e>
		return -1;
	}

	for (; len != 0; --len) {
  400202:	b192      	cbz	r2, 40022a <_write+0x36>
  400204:	2400      	movs	r4, #0
		if (ptr_put(stdio_base, *ptr++) < 0) {
  400206:	f8df 803c 	ldr.w	r8, [pc, #60]	; 400244 <_write+0x50>
  40020a:	4f0d      	ldr	r7, [pc, #52]	; (400240 <_write+0x4c>)
  40020c:	f8d8 0000 	ldr.w	r0, [r8]
  400210:	5d31      	ldrb	r1, [r6, r4]
  400212:	683b      	ldr	r3, [r7, #0]
  400214:	4798      	blx	r3
  400216:	2800      	cmp	r0, #0
  400218:	db0a      	blt.n	400230 <_write+0x3c>
			return -1;
		}
		++nChars;
  40021a:	3401      	adds	r4, #1

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
	}

	for (; len != 0; --len) {
  40021c:	42a5      	cmp	r5, r4
  40021e:	d1f5      	bne.n	40020c <_write+0x18>
  400220:	e00a      	b.n	400238 <_write+0x44>
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
  400222:	f04f 30ff 	mov.w	r0, #4294967295
  400226:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	}

	for (; len != 0; --len) {
  40022a:	2000      	movs	r0, #0
  40022c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		if (ptr_put(stdio_base, *ptr++) < 0) {
			return -1;
  400230:	f04f 30ff 	mov.w	r0, #4294967295
  400234:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		}
		++nChars;
  400238:	4620      	mov	r0, r4
	}
	return nChars;
}
  40023a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40023e:	bf00      	nop
  400240:	200008c4 	.word	0x200008c4
  400244:	200008c8 	.word	0x200008c8

00400248 <system_board_init>:
void board_init(void);
#  pragma weak board_init=system_board_init
#endif

void system_board_init(void)
{
  400248:	b510      	push	{r4, lr}

#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	WDT->WDT_MR = WDT_MR_WDDIS;
  40024a:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  40024e:	4b2b      	ldr	r3, [pc, #172]	; (4002fc <system_board_init+0xb4>)
  400250:	605a      	str	r2, [r3, #4]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  400252:	200b      	movs	r0, #11
  400254:	4c2a      	ldr	r4, [pc, #168]	; (400300 <system_board_init+0xb8>)
  400256:	47a0      	blx	r4
  400258:	200c      	movs	r0, #12
  40025a:	47a0      	blx	r4
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  40025c:	4b29      	ldr	r3, [pc, #164]	; (400304 <system_board_init+0xbc>)
  40025e:	f44f 3280 	mov.w	r2, #65536	; 0x10000
  400262:	611a      	str	r2, [r3, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400264:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400268:	631a      	str	r2, [r3, #48]	; 0x30
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  40026a:	2204      	movs	r2, #4
  40026c:	615a      	str	r2, [r3, #20]
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  40026e:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		ioport_port_mask_t mask, ioport_mode_t mode)
{
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
  400272:	665a      	str	r2, [r3, #100]	; 0x64

#if defined(IOPORT_MODE_PULLDOWN)
	if (mode & IOPORT_MODE_PULLDOWN) {
		base->PIO_PPDER = mask;
	} else {
		base->PIO_PPDDR = mask;
  400274:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
  400278:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
  40027a:	625a      	str	r2, [r3, #36]	; 0x24
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
#else
		base->PIO_IFSCDR = mask;
  40027c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	}
#else
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABCDSR[0] |= mask;
	} else {
		base->PIO_ABCDSR[0] &= ~mask;
  400280:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  400282:	f022 0204 	bic.w	r2, r2, #4
  400286:	671a      	str	r2, [r3, #112]	; 0x70
	}

	if (mode & IOPORT_MODE_MUX_BIT1) {
		base->PIO_ABCDSR[1] |= mask;
	} else {
		base->PIO_ABCDSR[1] &= ~mask;
  400288:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  40028a:	f022 0204 	bic.w	r2, r2, #4
  40028e:	675a      	str	r2, [r3, #116]	; 0x74
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
  400290:	f44f 62c0 	mov.w	r2, #1536	; 0x600
  400294:	661a      	str	r2, [r3, #96]	; 0x60

#if defined(IOPORT_MODE_PULLDOWN)
	if (mode & IOPORT_MODE_PULLDOWN) {
		base->PIO_PPDER = mask;
	} else {
		base->PIO_PPDDR = mask;
  400296:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
  40029a:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
  40029c:	625a      	str	r2, [r3, #36]	; 0x24
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
#else
		base->PIO_IFSCDR = mask;
  40029e:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	}
#else
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABCDSR[0] |= mask;
	} else {
		base->PIO_ABCDSR[0] &= ~mask;
  4002a2:	6f19      	ldr	r1, [r3, #112]	; 0x70
  4002a4:	f421 61c0 	bic.w	r1, r1, #1536	; 0x600
  4002a8:	6719      	str	r1, [r3, #112]	; 0x70
	}

	if (mode & IOPORT_MODE_MUX_BIT1) {
		base->PIO_ABCDSR[1] |= mask;
	} else {
		base->PIO_ABCDSR[1] &= ~mask;
  4002aa:	6f59      	ldr	r1, [r3, #116]	; 0x74
  4002ac:	f421 61c0 	bic.w	r1, r1, #1536	; 0x600
  4002b0:	6759      	str	r1, [r3, #116]	; 0x74
}

__always_inline static void arch_ioport_disable_port(ioport_port_t port,
		ioport_port_mask_t mask)
{
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  4002b2:	605a      	str	r2, [r3, #4]
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
  4002b4:	f503 7300 	add.w	r3, r3, #512	; 0x200
  4002b8:	2201      	movs	r2, #1
  4002ba:	661a      	str	r2, [r3, #96]	; 0x60

#if defined(IOPORT_MODE_PULLDOWN)
	if (mode & IOPORT_MODE_PULLDOWN) {
		base->PIO_PPDER = mask;
	} else {
		base->PIO_PPDDR = mask;
  4002bc:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
  4002c0:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
  4002c2:	625a      	str	r2, [r3, #36]	; 0x24
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
#else
		base->PIO_IFSCDR = mask;
  4002c4:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	} else {
		base->PIO_ABSR &= ~mask;
	}
#else
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABCDSR[0] |= mask;
  4002c8:	6f19      	ldr	r1, [r3, #112]	; 0x70
  4002ca:	4311      	orrs	r1, r2
  4002cc:	6719      	str	r1, [r3, #112]	; 0x70
	}

	if (mode & IOPORT_MODE_MUX_BIT1) {
		base->PIO_ABCDSR[1] |= mask;
	} else {
		base->PIO_ABCDSR[1] &= ~mask;
  4002ce:	6f59      	ldr	r1, [r3, #116]	; 0x74
  4002d0:	f021 0101 	bic.w	r1, r1, #1
  4002d4:	6759      	str	r1, [r3, #116]	; 0x74
}

__always_inline static void arch_ioport_disable_port(ioport_port_t port,
		ioport_port_mask_t mask)
{
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  4002d6:	605a      	str	r2, [r3, #4]
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
	} else {
		base->PIO_PUDR = mask;
  4002d8:	2202      	movs	r2, #2
  4002da:	661a      	str	r2, [r3, #96]	; 0x60

#if defined(IOPORT_MODE_PULLDOWN)
	if (mode & IOPORT_MODE_PULLDOWN) {
		base->PIO_PPDER = mask;
	} else {
		base->PIO_PPDDR = mask;
  4002dc:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
  4002e0:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
  4002e2:	625a      	str	r2, [r3, #36]	; 0x24
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
#else
		base->PIO_IFSCDR = mask;
  4002e4:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	} else {
		base->PIO_ABSR &= ~mask;
	}
#else
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABCDSR[0] |= mask;
  4002e8:	6f19      	ldr	r1, [r3, #112]	; 0x70
  4002ea:	4311      	orrs	r1, r2
  4002ec:	6719      	str	r1, [r3, #112]	; 0x70
	}

	if (mode & IOPORT_MODE_MUX_BIT1) {
		base->PIO_ABCDSR[1] |= mask;
	} else {
		base->PIO_ABCDSR[1] &= ~mask;
  4002ee:	6f59      	ldr	r1, [r3, #116]	; 0x74
  4002f0:	f021 0102 	bic.w	r1, r1, #2
  4002f4:	6759      	str	r1, [r3, #116]	; 0x74
}

__always_inline static void arch_ioport_disable_port(ioport_port_t port,
		ioport_port_mask_t mask)
{
	arch_ioport_port_to_base(port)->PIO_PDR = mask;
  4002f6:	605a      	str	r2, [r3, #4]
  4002f8:	bd10      	pop	{r4, pc}
  4002fa:	bf00      	nop
  4002fc:	400e1450 	.word	0x400e1450
  400300:	00400389 	.word	0x00400389
  400304:	400e0e00 	.word	0x400e0e00

00400308 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400308:	4b17      	ldr	r3, [pc, #92]	; (400368 <pmc_switch_mck_to_pllack+0x60>)
  40030a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  40030c:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  400310:	4310      	orrs	r0, r2
  400312:	6318      	str	r0, [r3, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400314:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  400316:	f013 0f08 	tst.w	r3, #8
  40031a:	d109      	bne.n	400330 <pmc_switch_mck_to_pllack+0x28>
  40031c:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400320:	4911      	ldr	r1, [pc, #68]	; (400368 <pmc_switch_mck_to_pllack+0x60>)
  400322:	e001      	b.n	400328 <pmc_switch_mck_to_pllack+0x20>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400324:	3b01      	subs	r3, #1
  400326:	d019      	beq.n	40035c <pmc_switch_mck_to_pllack+0x54>
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400328:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  40032a:	f012 0f08 	tst.w	r2, #8
  40032e:	d0f9      	beq.n	400324 <pmc_switch_mck_to_pllack+0x1c>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400330:	4b0d      	ldr	r3, [pc, #52]	; (400368 <pmc_switch_mck_to_pllack+0x60>)
  400332:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  400334:	f022 0203 	bic.w	r2, r2, #3
  400338:	f042 0202 	orr.w	r2, r2, #2
  40033c:	631a      	str	r2, [r3, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  40033e:	6e98      	ldr	r0, [r3, #104]	; 0x68
  400340:	f010 0008 	ands.w	r0, r0, #8
  400344:	d10c      	bne.n	400360 <pmc_switch_mck_to_pllack+0x58>
  400346:	f44f 6300 	mov.w	r3, #2048	; 0x800
  40034a:	4907      	ldr	r1, [pc, #28]	; (400368 <pmc_switch_mck_to_pllack+0x60>)
  40034c:	e001      	b.n	400352 <pmc_switch_mck_to_pllack+0x4a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  40034e:	3b01      	subs	r3, #1
  400350:	d008      	beq.n	400364 <pmc_switch_mck_to_pllack+0x5c>
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400352:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400354:	f012 0f08 	tst.w	r2, #8
  400358:	d0f9      	beq.n	40034e <pmc_switch_mck_to_pllack+0x46>
  40035a:	4770      	bx	lr

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
  40035c:	2001      	movs	r0, #1
  40035e:	4770      	bx	lr
		if (ul_timeout == 0) {
			return 1;
		}
	}

	return 0;
  400360:	2000      	movs	r0, #0
  400362:	4770      	bx	lr
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
  400364:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  400366:	4770      	bx	lr
  400368:	400e0400 	.word	0x400e0400

0040036c <pmc_disable_pllack>:
 * \brief Disable PLLA clock.
 */
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
  40036c:	2200      	movs	r2, #0
  40036e:	4b01      	ldr	r3, [pc, #4]	; (400374 <pmc_disable_pllack+0x8>)
  400370:	629a      	str	r2, [r3, #40]	; 0x28
  400372:	4770      	bx	lr
  400374:	400e0400 	.word	0x400e0400

00400378 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400378:	4b02      	ldr	r3, [pc, #8]	; (400384 <pmc_is_locked_pllack+0xc>)
  40037a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  40037c:	f000 0002 	and.w	r0, r0, #2
  400380:	4770      	bx	lr
  400382:	bf00      	nop
  400384:	400e0400 	.word	0x400e0400

00400388 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  400388:	282f      	cmp	r0, #47	; 0x2f
  40038a:	d80f      	bhi.n	4003ac <pmc_enable_periph_clk+0x24>
		return 1;
	}

	if (ul_id < 32) {
  40038c:	281f      	cmp	r0, #31
  40038e:	d80f      	bhi.n	4003b0 <pmc_enable_periph_clk+0x28>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  400390:	4b09      	ldr	r3, [pc, #36]	; (4003b8 <pmc_enable_periph_clk+0x30>)
  400392:	699a      	ldr	r2, [r3, #24]
  400394:	2301      	movs	r3, #1
  400396:	4083      	lsls	r3, r0
  400398:	401a      	ands	r2, r3
  40039a:	4293      	cmp	r3, r2
  40039c:	d00a      	beq.n	4003b4 <pmc_enable_periph_clk+0x2c>
			PMC->PMC_PCER0 = 1 << ul_id;
  40039e:	2301      	movs	r3, #1
  4003a0:	fa03 f000 	lsl.w	r0, r3, r0
  4003a4:	4b04      	ldr	r3, [pc, #16]	; (4003b8 <pmc_enable_periph_clk+0x30>)
  4003a6:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  4003a8:	2000      	movs	r0, #0
  4003aa:	4770      	bx	lr
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
		return 1;
  4003ac:	2001      	movs	r0, #1
  4003ae:	4770      	bx	lr
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  4003b0:	2000      	movs	r0, #0
  4003b2:	4770      	bx	lr
  4003b4:	2000      	movs	r0, #0
}
  4003b6:	4770      	bx	lr
  4003b8:	400e0400 	.word	0x400e0400

004003bc <twi_enable_interrupt>:
 * \param ul_sources Interrupts to be enabled.
 */
void twi_enable_interrupt(Twi *p_twi, uint32_t ul_sources)
{
	/* Enable the specified interrupts */
	p_twi->TWI_IER = ul_sources;
  4003bc:	6241      	str	r1, [r0, #36]	; 0x24
  4003be:	4770      	bx	lr

004003c0 <twi_disable_interrupt>:
 * \param ul_sources Interrupts to be disabled.
 */
void twi_disable_interrupt(Twi *p_twi, uint32_t ul_sources)
{
	/* Disable the specified interrupts */
	p_twi->TWI_IDR = ul_sources;
  4003c0:	6281      	str	r1, [r0, #40]	; 0x28
	/* Dummy read */
	p_twi->TWI_SR;
  4003c2:	6a03      	ldr	r3, [r0, #32]
  4003c4:	4770      	bx	lr
  4003c6:	bf00      	nop

004003c8 <twi_get_interrupt_status>:
 *
 * \retval TWI interrupt status.
 */
uint32_t twi_get_interrupt_status(Twi *p_twi)
{
	return p_twi->TWI_SR;
  4003c8:	6a00      	ldr	r0, [r0, #32]
}
  4003ca:	4770      	bx	lr

004003cc <twi_read_byte>:
 *
 * \return The byte read.
 */
uint8_t twi_read_byte(Twi *p_twi)
{
	return p_twi->TWI_RHR;
  4003cc:	6b00      	ldr	r0, [r0, #48]	; 0x30
}
  4003ce:	b2c0      	uxtb	r0, r0
  4003d0:	4770      	bx	lr
  4003d2:	bf00      	nop

004003d4 <twi_write_byte>:
 * \param p_twi Pointer to a TWI instance.
 * \param byte The byte to send.
 */
void twi_write_byte(Twi *p_twi, uint8_t uc_byte)
{
	p_twi->TWI_THR = uc_byte;
  4003d4:	6341      	str	r1, [r0, #52]	; 0x34
  4003d6:	4770      	bx	lr

004003d8 <twi_slave_init>:
 * \param ul_device_addr Device address of the SAM slave device on the I2C bus.
 */
void twi_slave_init(Twi *p_twi, uint32_t ul_device_addr)
{
	/* Disable TWI interrupts */
	p_twi->TWI_IDR = ~0UL;
  4003d8:	f04f 33ff 	mov.w	r3, #4294967295
  4003dc:	6283      	str	r3, [r0, #40]	; 0x28
	p_twi->TWI_SR;
  4003de:	6a03      	ldr	r3, [r0, #32]
 * \param p_twi Pointer to a TWI instance.
 */
void twi_reset(Twi *p_twi)
{
	/* Set SWRST bit to reset TWI peripheral */
	p_twi->TWI_CR = TWI_CR_SWRST;
  4003e0:	2380      	movs	r3, #128	; 0x80
  4003e2:	6003      	str	r3, [r0, #0]
	p_twi->TWI_RHR;
  4003e4:	6b03      	ldr	r3, [r0, #48]	; 0x30

	/* Reset TWI */
	twi_reset(p_twi);

	/* Set slave address in slave mode */
	p_twi->TWI_SMR = TWI_SMR_SADR(ul_device_addr);
  4003e6:	0409      	lsls	r1, r1, #16
  4003e8:	f401 01fe 	and.w	r1, r1, #8323072	; 0x7f0000
  4003ec:	6081      	str	r1, [r0, #8]
 * \param p_twi Pointer to a TWI instance.
 */
void twi_enable_slave_mode(Twi *p_twi)
{
	/* Set Master Disable bit and Slave Disable bit */
	p_twi->TWI_CR = TWI_CR_MSDIS;
  4003ee:	2308      	movs	r3, #8
  4003f0:	6003      	str	r3, [r0, #0]
	p_twi->TWI_CR = TWI_CR_SVDIS;
  4003f2:	2320      	movs	r3, #32
  4003f4:	6003      	str	r3, [r0, #0]

	/* Set Slave Enable bit */
	p_twi->TWI_CR = TWI_CR_SVEN;
  4003f6:	2310      	movs	r3, #16
  4003f8:	6003      	str	r3, [r0, #0]
  4003fa:	4770      	bx	lr

004003fc <uart_init>:
 *
 * \retval 0 Success.
 * \retval 1 Bad baud rate generator value.
 */
uint32_t uart_init(Uart *p_uart, const sam_uart_opt_t *p_uart_opt)
{
  4003fc:	b410      	push	{r4}
	uint32_t cd = 0;

	/* Reset and disable receiver & transmitter */
	p_uart->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX
  4003fe:	23ac      	movs	r3, #172	; 0xac
  400400:	6003      	str	r3, [r0, #0]
			| UART_CR_RXDIS | UART_CR_TXDIS;

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
  400402:	680a      	ldr	r2, [r1, #0]
  400404:	684b      	ldr	r3, [r1, #4]
  400406:	fbb2 f3f3 	udiv	r3, r2, r3
  40040a:	091b      	lsrs	r3, r3, #4
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
  40040c:	1e5c      	subs	r4, r3, #1
  40040e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
  400412:	4294      	cmp	r4, r2
  400414:	d80a      	bhi.n	40042c <uart_init+0x30>
		return 1;

	p_uart->UART_BRGR = cd;
  400416:	6203      	str	r3, [r0, #32]
	/* Configure mode */
	p_uart->UART_MR = p_uart_opt->ul_mode;
  400418:	688b      	ldr	r3, [r1, #8]
  40041a:	6043      	str	r3, [r0, #4]

	/* Disable PDC channel */
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
  40041c:	f240 2302 	movw	r3, #514	; 0x202
  400420:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
  400424:	2350      	movs	r3, #80	; 0x50
  400426:	6003      	str	r3, [r0, #0]

	return 0;
  400428:	2000      	movs	r0, #0
  40042a:	e000      	b.n	40042e <uart_init+0x32>

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
		return 1;
  40042c:	2001      	movs	r0, #1

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;

	return 0;
}
  40042e:	f85d 4b04 	ldr.w	r4, [sp], #4
  400432:	4770      	bx	lr

00400434 <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
  400434:	6943      	ldr	r3, [r0, #20]
  400436:	f013 0f02 	tst.w	r3, #2
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
  40043a:	bf1a      	itte	ne
  40043c:	61c1      	strne	r1, [r0, #28]
	return 0;
  40043e:	2000      	movne	r0, #0
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
		return 1;
  400440:	2001      	moveq	r0, #1

	/* Send character */
	p_uart->UART_THR = uc_data;
	return 0;
}
  400442:	4770      	bx	lr

00400444 <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
  400444:	6943      	ldr	r3, [r0, #20]
  400446:	f013 0f01 	tst.w	r3, #1
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
  40044a:	bf1d      	ittte	ne
  40044c:	6983      	ldrne	r3, [r0, #24]
  40044e:	700b      	strbne	r3, [r1, #0]
	return 0;
  400450:	2000      	movne	r0, #0
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
		return 1;
  400452:	2001      	moveq	r0, #1

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
	return 0;
}
  400454:	4770      	bx	lr
  400456:	bf00      	nop

00400458 <usart_write>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  400458:	6943      	ldr	r3, [r0, #20]
  40045a:	f013 0f02 	tst.w	r3, #2
		return 1;
	}

	p_usart->US_THR = US_THR_TXCHR(c);
  40045e:	bf1d      	ittte	ne
  400460:	f3c1 0108 	ubfxne	r1, r1, #0, #9
  400464:	61c1      	strne	r1, [r0, #28]
	return 0;
  400466:	2000      	movne	r0, #0
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
		return 1;
  400468:	2001      	moveq	r0, #1
	}

	p_usart->US_THR = US_THR_TXCHR(c);
	return 0;
}
  40046a:	4770      	bx	lr

0040046c <usart_read>:
 * \retval 0 on success.
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  40046c:	6943      	ldr	r3, [r0, #20]
  40046e:	f013 0f01 	tst.w	r3, #1
  400472:	d005      	beq.n	400480 <usart_read+0x14>
		return 1;
	}

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  400474:	6983      	ldr	r3, [r0, #24]
  400476:	f3c3 0308 	ubfx	r3, r3, #0, #9
  40047a:	600b      	str	r3, [r1, #0]

	return 0;
  40047c:	2000      	movs	r0, #0
  40047e:	4770      	bx	lr
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
		return 1;
  400480:	2001      	movs	r0, #1

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;

	return 0;
}
  400482:	4770      	bx	lr

00400484 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  400484:	e7fe      	b.n	400484 <Dummy_Handler>
  400486:	bf00      	nop

00400488 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
  400488:	b510      	push	{r4, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
  40048a:	4b2a      	ldr	r3, [pc, #168]	; (400534 <Reset_Handler+0xac>)
  40048c:	4a2a      	ldr	r2, [pc, #168]	; (400538 <Reset_Handler+0xb0>)
  40048e:	429a      	cmp	r2, r3
  400490:	d003      	beq.n	40049a <Reset_Handler+0x12>
		for (; pDest < &_erelocate;) {
  400492:	4b2a      	ldr	r3, [pc, #168]	; (40053c <Reset_Handler+0xb4>)
  400494:	4a27      	ldr	r2, [pc, #156]	; (400534 <Reset_Handler+0xac>)
  400496:	429a      	cmp	r2, r3
  400498:	d304      	bcc.n	4004a4 <Reset_Handler+0x1c>
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  40049a:	4b29      	ldr	r3, [pc, #164]	; (400540 <Reset_Handler+0xb8>)
  40049c:	4a29      	ldr	r2, [pc, #164]	; (400544 <Reset_Handler+0xbc>)
  40049e:	429a      	cmp	r2, r3
  4004a0:	d30f      	bcc.n	4004c2 <Reset_Handler+0x3a>
  4004a2:	e01a      	b.n	4004da <Reset_Handler+0x52>
  4004a4:	4b28      	ldr	r3, [pc, #160]	; (400548 <Reset_Handler+0xc0>)
  4004a6:	4c29      	ldr	r4, [pc, #164]	; (40054c <Reset_Handler+0xc4>)
  4004a8:	1ae4      	subs	r4, r4, r3
  4004aa:	f024 0403 	bic.w	r4, r4, #3
  4004ae:	3404      	adds	r4, #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
		for (; pDest < &_erelocate;) {
  4004b0:	2300      	movs	r3, #0
			*pDest++ = *pSrc++;
  4004b2:	4820      	ldr	r0, [pc, #128]	; (400534 <Reset_Handler+0xac>)
  4004b4:	4920      	ldr	r1, [pc, #128]	; (400538 <Reset_Handler+0xb0>)
  4004b6:	585a      	ldr	r2, [r3, r1]
  4004b8:	501a      	str	r2, [r3, r0]
  4004ba:	3304      	adds	r3, #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
		for (; pDest < &_erelocate;) {
  4004bc:	42a3      	cmp	r3, r4
  4004be:	d1fa      	bne.n	4004b6 <Reset_Handler+0x2e>
  4004c0:	e7eb      	b.n	40049a <Reset_Handler+0x12>
  4004c2:	4b23      	ldr	r3, [pc, #140]	; (400550 <Reset_Handler+0xc8>)
  4004c4:	4923      	ldr	r1, [pc, #140]	; (400554 <Reset_Handler+0xcc>)
  4004c6:	1ac9      	subs	r1, r1, r3
  4004c8:	f021 0103 	bic.w	r1, r1, #3
  4004cc:	1d1a      	adds	r2, r3, #4
  4004ce:	4411      	add	r1, r2
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
		*pDest++ = 0;
  4004d0:	2200      	movs	r2, #0
  4004d2:	f843 2f04 	str.w	r2, [r3, #4]!
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  4004d6:	428b      	cmp	r3, r1
  4004d8:	d1fb      	bne.n	4004d2 <Reset_Handler+0x4a>
		*pDest++ = 0;
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  4004da:	4b1f      	ldr	r3, [pc, #124]	; (400558 <Reset_Handler+0xd0>)
  4004dc:	f023 017f 	bic.w	r1, r3, #127	; 0x7f
  4004e0:	4a1e      	ldr	r2, [pc, #120]	; (40055c <Reset_Handler+0xd4>)
  4004e2:	6091      	str	r1, [r2, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  4004e4:	f3ef 8110 	mrs	r1, PRIMASK
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i");
  4004e8:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
  4004ea:	f3bf 8f5f 	dmb	sy
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = cpu_irq_is_enabled();
	cpu_irq_disable();
  4004ee:	2000      	movs	r0, #0
  4004f0:	4a1b      	ldr	r2, [pc, #108]	; (400560 <Reset_Handler+0xd8>)
  4004f2:	7010      	strb	r0, [r2, #0]
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  4004f4:	4a1b      	ldr	r2, [pc, #108]	; (400564 <Reset_Handler+0xdc>)
  4004f6:	6810      	ldr	r0, [r2, #0]
  4004f8:	f440 0070 	orr.w	r0, r0, #15728640	; 0xf00000
  4004fc:	6010      	str	r0, [r2, #0]
    This function acts as a special kind of Data Memory Barrier.
    It completes when all explicit memory accesses before this instruction complete.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
{
  __ASM volatile ("dsb");
  4004fe:	f3bf 8f4f 	dsb	sy
    so that all instructions following the ISB are fetched from cache or
    memory, after the instruction has been completed.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __ISB(void)
{
  __ASM volatile ("isb");
  400502:	f3bf 8f6f 	isb	sy
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  400506:	b929      	cbnz	r1, 400514 <Reset_Handler+0x8c>
		cpu_irq_enable();
  400508:	2101      	movs	r1, #1
  40050a:	4a15      	ldr	r2, [pc, #84]	; (400560 <Reset_Handler+0xd8>)
  40050c:	7011      	strb	r1, [r2, #0]
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
  40050e:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i");
  400512:	b662      	cpsie	i

#if __FPU_USED
	fpu_enable();
#endif

	if (((uint32_t) pSrc >= IRAM_ADDR) && ((uint32_t) pSrc < IRAM_ADDR + IRAM_SIZE)) {
  400514:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
  400518:	f5b3 3fc0 	cmp.w	r3, #98304	; 0x18000
  40051c:	d204      	bcs.n	400528 <Reset_Handler+0xa0>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
  40051e:	4b0f      	ldr	r3, [pc, #60]	; (40055c <Reset_Handler+0xd4>)
  400520:	689a      	ldr	r2, [r3, #8]
  400522:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
  400526:	609a      	str	r2, [r3, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
  400528:	4b0f      	ldr	r3, [pc, #60]	; (400568 <Reset_Handler+0xe0>)
  40052a:	4798      	blx	r3

	/* Branch to main function */
	main();
  40052c:	4b0f      	ldr	r3, [pc, #60]	; (40056c <Reset_Handler+0xe4>)
  40052e:	4798      	blx	r3
  400530:	e7fe      	b.n	400530 <Reset_Handler+0xa8>
  400532:	bf00      	nop
  400534:	20000000 	.word	0x20000000
  400538:	00403b84 	.word	0x00403b84
  40053c:	2000086c 	.word	0x2000086c
  400540:	20000ad8 	.word	0x20000ad8
  400544:	2000086c 	.word	0x2000086c
  400548:	20000004 	.word	0x20000004
  40054c:	2000086f 	.word	0x2000086f
  400550:	20000868 	.word	0x20000868
  400554:	20000ad3 	.word	0x20000ad3
  400558:	00400000 	.word	0x00400000
  40055c:	e000ed00 	.word	0xe000ed00
  400560:	20000000 	.word	0x20000000
  400564:	e000ed88 	.word	0xe000ed88
  400568:	00400a05 	.word	0x00400a05
  40056c:	004008fd 	.word	0x004008fd

00400570 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate(void)
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) {
  400570:	4b31      	ldr	r3, [pc, #196]	; (400638 <SystemCoreClockUpdate+0xc8>)
  400572:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  400574:	f003 0303 	and.w	r3, r3, #3
  400578:	2b01      	cmp	r3, #1
  40057a:	d00f      	beq.n	40059c <SystemCoreClockUpdate+0x2c>
  40057c:	b113      	cbz	r3, 400584 <SystemCoreClockUpdate+0x14>
  40057e:	2b02      	cmp	r3, #2
  400580:	d029      	beq.n	4005d6 <SystemCoreClockUpdate+0x66>
  400582:	e042      	b.n	40060a <SystemCoreClockUpdate+0x9a>
	case PMC_MCKR_CSS_SLOW_CLK:	/* Slow clock */
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
  400584:	4b2d      	ldr	r3, [pc, #180]	; (40063c <SystemCoreClockUpdate+0xcc>)
  400586:	695b      	ldr	r3, [r3, #20]
  400588:	f013 0f80 	tst.w	r3, #128	; 0x80
			SystemCoreClock = CHIP_FREQ_XTAL_32K;
  40058c:	bf14      	ite	ne
  40058e:	f44f 4200 	movne.w	r2, #32768	; 0x8000
		} else {
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
  400592:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  400596:	4b2a      	ldr	r3, [pc, #168]	; (400640 <SystemCoreClockUpdate+0xd0>)
  400598:	601a      	str	r2, [r3, #0]
  40059a:	e036      	b.n	40060a <SystemCoreClockUpdate+0x9a>
		}
		break;
	case PMC_MCKR_CSS_MAIN_CLK:	/* Main clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
  40059c:	4b26      	ldr	r3, [pc, #152]	; (400638 <SystemCoreClockUpdate+0xc8>)
  40059e:	6a1b      	ldr	r3, [r3, #32]
  4005a0:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4005a4:	d003      	beq.n	4005ae <SystemCoreClockUpdate+0x3e>
			SystemCoreClock = CHIP_FREQ_XTAL;
  4005a6:	4a27      	ldr	r2, [pc, #156]	; (400644 <SystemCoreClockUpdate+0xd4>)
  4005a8:	4b25      	ldr	r3, [pc, #148]	; (400640 <SystemCoreClockUpdate+0xd0>)
  4005aa:	601a      	str	r2, [r3, #0]
  4005ac:	e02d      	b.n	40060a <SystemCoreClockUpdate+0x9a>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  4005ae:	4a26      	ldr	r2, [pc, #152]	; (400648 <SystemCoreClockUpdate+0xd8>)
  4005b0:	4b23      	ldr	r3, [pc, #140]	; (400640 <SystemCoreClockUpdate+0xd0>)
  4005b2:	601a      	str	r2, [r3, #0]

			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
  4005b4:	4b20      	ldr	r3, [pc, #128]	; (400638 <SystemCoreClockUpdate+0xc8>)
  4005b6:	6a1b      	ldr	r3, [r3, #32]
  4005b8:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4005bc:	2b10      	cmp	r3, #16
  4005be:	d002      	beq.n	4005c6 <SystemCoreClockUpdate+0x56>
  4005c0:	2b20      	cmp	r3, #32
  4005c2:	d004      	beq.n	4005ce <SystemCoreClockUpdate+0x5e>
  4005c4:	e021      	b.n	40060a <SystemCoreClockUpdate+0x9a>
			case CKGR_MOR_MOSCRCF_8_MHz:
				break;
			case CKGR_MOR_MOSCRCF_16_MHz:
				SystemCoreClock *= 2U;
  4005c6:	4a21      	ldr	r2, [pc, #132]	; (40064c <SystemCoreClockUpdate+0xdc>)
  4005c8:	4b1d      	ldr	r3, [pc, #116]	; (400640 <SystemCoreClockUpdate+0xd0>)
  4005ca:	601a      	str	r2, [r3, #0]
				break;
  4005cc:	e01d      	b.n	40060a <SystemCoreClockUpdate+0x9a>
			case CKGR_MOR_MOSCRCF_24_MHz:
				SystemCoreClock *= 3U;
  4005ce:	4a20      	ldr	r2, [pc, #128]	; (400650 <SystemCoreClockUpdate+0xe0>)
  4005d0:	4b1b      	ldr	r3, [pc, #108]	; (400640 <SystemCoreClockUpdate+0xd0>)
  4005d2:	601a      	str	r2, [r3, #0]
				break;
  4005d4:	e019      	b.n	40060a <SystemCoreClockUpdate+0x9a>
				break;
			}
		}
		break;
	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
  4005d6:	4b19      	ldr	r3, [pc, #100]	; (40063c <SystemCoreClockUpdate+0xcc>)
  4005d8:	695b      	ldr	r3, [r3, #20]
  4005da:	f013 0f80 	tst.w	r3, #128	; 0x80
			SystemCoreClock = CHIP_FREQ_XTAL_32K;
  4005de:	bf14      	ite	ne
  4005e0:	f44f 4200 	movne.w	r2, #32768	; 0x8000
		} else {
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
  4005e4:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  4005e8:	4b15      	ldr	r3, [pc, #84]	; (400640 <SystemCoreClockUpdate+0xd0>)
  4005ea:	601a      	str	r2, [r3, #0]
		}
		if ((uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
  4005ec:	4b12      	ldr	r3, [pc, #72]	; (400638 <SystemCoreClockUpdate+0xc8>)
  4005ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4005f0:	f003 0303 	and.w	r3, r3, #3
  4005f4:	2b02      	cmp	r3, #2
  4005f6:	d108      	bne.n	40060a <SystemCoreClockUpdate+0x9a>
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
  4005f8:	4b0f      	ldr	r3, [pc, #60]	; (400638 <SystemCoreClockUpdate+0xc8>)
  4005fa:	6a99      	ldr	r1, [r3, #40]	; 0x28
  4005fc:	4b10      	ldr	r3, [pc, #64]	; (400640 <SystemCoreClockUpdate+0xd0>)
  4005fe:	f3c1 410b 	ubfx	r1, r1, #16, #12
  400602:	681a      	ldr	r2, [r3, #0]
  400604:	fb01 2202 	mla	r2, r1, r2, r2
  400608:	601a      	str	r2, [r3, #0]
		break;
	default:
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
  40060a:	4b0b      	ldr	r3, [pc, #44]	; (400638 <SystemCoreClockUpdate+0xc8>)
  40060c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40060e:	f003 0370 	and.w	r3, r3, #112	; 0x70
  400612:	2b70      	cmp	r3, #112	; 0x70
  400614:	d107      	bne.n	400626 <SystemCoreClockUpdate+0xb6>
		SystemCoreClock /= 3U;
  400616:	4b0a      	ldr	r3, [pc, #40]	; (400640 <SystemCoreClockUpdate+0xd0>)
  400618:	681a      	ldr	r2, [r3, #0]
  40061a:	490e      	ldr	r1, [pc, #56]	; (400654 <SystemCoreClockUpdate+0xe4>)
  40061c:	fba1 0202 	umull	r0, r2, r1, r2
  400620:	0852      	lsrs	r2, r2, #1
  400622:	601a      	str	r2, [r3, #0]
  400624:	4770      	bx	lr
	} else {
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  400626:	4b04      	ldr	r3, [pc, #16]	; (400638 <SystemCoreClockUpdate+0xc8>)
  400628:	6b19      	ldr	r1, [r3, #48]	; 0x30
  40062a:	4b05      	ldr	r3, [pc, #20]	; (400640 <SystemCoreClockUpdate+0xd0>)
  40062c:	f3c1 1102 	ubfx	r1, r1, #4, #3
  400630:	681a      	ldr	r2, [r3, #0]
  400632:	40ca      	lsrs	r2, r1
  400634:	601a      	str	r2, [r3, #0]
  400636:	4770      	bx	lr
  400638:	400e0400 	.word	0x400e0400
  40063c:	400e1410 	.word	0x400e1410
  400640:	20000004 	.word	0x20000004
  400644:	00b71b00 	.word	0x00b71b00
  400648:	007a1200 	.word	0x007a1200
  40064c:	00f42400 	.word	0x00f42400
  400650:	016e3600 	.word	0x016e3600
  400654:	aaaaaaab 	.word	0xaaaaaaab

00400658 <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
  400658:	4b0b      	ldr	r3, [pc, #44]	; (400688 <system_init_flash+0x30>)
  40065a:	4298      	cmp	r0, r3
  40065c:	d804      	bhi.n	400668 <system_init_flash+0x10>
		EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  40065e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  400662:	4b0a      	ldr	r3, [pc, #40]	; (40068c <system_init_flash+0x34>)
  400664:	601a      	str	r2, [r3, #0]
  400666:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
  400668:	4b09      	ldr	r3, [pc, #36]	; (400690 <system_init_flash+0x38>)
  40066a:	4298      	cmp	r0, r3
  40066c:	d803      	bhi.n	400676 <system_init_flash+0x1e>
		EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  40066e:	4a09      	ldr	r2, [pc, #36]	; (400694 <system_init_flash+0x3c>)
  400670:	4b06      	ldr	r3, [pc, #24]	; (40068c <system_init_flash+0x34>)
  400672:	601a      	str	r2, [r3, #0]
  400674:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
  400676:	4b08      	ldr	r3, [pc, #32]	; (400698 <system_init_flash+0x40>)
  400678:	4298      	cmp	r0, r3
		EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  40067a:	bf94      	ite	ls
  40067c:	4a07      	ldrls	r2, [pc, #28]	; (40069c <system_init_flash+0x44>)
	} else {
		EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  40067e:	4a08      	ldrhi	r2, [pc, #32]	; (4006a0 <system_init_flash+0x48>)
  400680:	4b02      	ldr	r3, [pc, #8]	; (40068c <system_init_flash+0x34>)
  400682:	601a      	str	r2, [r3, #0]
  400684:	4770      	bx	lr
  400686:	bf00      	nop
  400688:	00b71aff 	.word	0x00b71aff
  40068c:	400e0a00 	.word	0x400e0a00
  400690:	017d783f 	.word	0x017d783f
  400694:	04000100 	.word	0x04000100
  400698:	0243d57f 	.word	0x0243d57f
  40069c:	04000200 	.word	0x04000200
  4006a0:	04000300 	.word	0x04000300

004006a4 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  4006a4:	4b09      	ldr	r3, [pc, #36]	; (4006cc <_sbrk+0x28>)
  4006a6:	681b      	ldr	r3, [r3, #0]
  4006a8:	b913      	cbnz	r3, 4006b0 <_sbrk+0xc>
		heap = (unsigned char *)&_end;
  4006aa:	4a09      	ldr	r2, [pc, #36]	; (4006d0 <_sbrk+0x2c>)
  4006ac:	4b07      	ldr	r3, [pc, #28]	; (4006cc <_sbrk+0x28>)
  4006ae:	601a      	str	r2, [r3, #0]
	}
	prev_heap = heap;
  4006b0:	4b06      	ldr	r3, [pc, #24]	; (4006cc <_sbrk+0x28>)
  4006b2:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  4006b4:	181a      	adds	r2, r3, r0
  4006b6:	4907      	ldr	r1, [pc, #28]	; (4006d4 <_sbrk+0x30>)
  4006b8:	4291      	cmp	r1, r2
  4006ba:	db04      	blt.n	4006c6 <_sbrk+0x22>
		return (caddr_t) -1;	
	}

	heap += incr;
  4006bc:	4610      	mov	r0, r2
  4006be:	4a03      	ldr	r2, [pc, #12]	; (4006cc <_sbrk+0x28>)
  4006c0:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  4006c2:	4618      	mov	r0, r3
  4006c4:	4770      	bx	lr
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;

	if (((int)prev_heap + incr) > ramend) {
		return (caddr_t) -1;	
  4006c6:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap += incr;

	return (caddr_t) prev_heap;
}
  4006ca:	4770      	bx	lr
  4006cc:	20000888 	.word	0x20000888
  4006d0:	20003ad8 	.word	0x20003ad8
  4006d4:	20017ffc 	.word	0x20017ffc

004006d8 <_close>:
}

extern int _close(int file)
{
	return -1;
}
  4006d8:	f04f 30ff 	mov.w	r0, #4294967295
  4006dc:	4770      	bx	lr
  4006de:	bf00      	nop

004006e0 <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
  4006e0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  4006e4:	604b      	str	r3, [r1, #4]

	return 0;
}
  4006e6:	2000      	movs	r0, #0
  4006e8:	4770      	bx	lr
  4006ea:	bf00      	nop

004006ec <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
  4006ec:	2001      	movs	r0, #1
  4006ee:	4770      	bx	lr

004006f0 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
  4006f0:	2000      	movs	r0, #0
  4006f2:	4770      	bx	lr

004006f4 <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
  4006f4:	b570      	push	{r4, r5, r6, lr}
  4006f6:	b082      	sub	sp, #8
  4006f8:	460c      	mov	r4, r1
	uint32_t val = 0;
  4006fa:	2300      	movs	r3, #0
  4006fc:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  4006fe:	4b12      	ldr	r3, [pc, #72]	; (400748 <usart_serial_getchar+0x54>)
  400700:	4298      	cmp	r0, r3
  400702:	d107      	bne.n	400714 <usart_serial_getchar+0x20>
		while (uart_read((Uart*)p_usart, data));
  400704:	461e      	mov	r6, r3
  400706:	4d11      	ldr	r5, [pc, #68]	; (40074c <usart_serial_getchar+0x58>)
  400708:	4630      	mov	r0, r6
  40070a:	4621      	mov	r1, r4
  40070c:	47a8      	blx	r5
  40070e:	2800      	cmp	r0, #0
  400710:	d1fa      	bne.n	400708 <usart_serial_getchar+0x14>
  400712:	e016      	b.n	400742 <usart_serial_getchar+0x4e>
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  400714:	4b0e      	ldr	r3, [pc, #56]	; (400750 <usart_serial_getchar+0x5c>)
  400716:	4298      	cmp	r0, r3
  400718:	d107      	bne.n	40072a <usart_serial_getchar+0x36>
		while (uart_read((Uart*)p_usart, data));
  40071a:	461e      	mov	r6, r3
  40071c:	4d0b      	ldr	r5, [pc, #44]	; (40074c <usart_serial_getchar+0x58>)
  40071e:	4630      	mov	r0, r6
  400720:	4621      	mov	r1, r4
  400722:	47a8      	blx	r5
  400724:	2800      	cmp	r0, #0
  400726:	d1fa      	bne.n	40071e <usart_serial_getchar+0x2a>
  400728:	e00b      	b.n	400742 <usart_serial_getchar+0x4e>
# endif
#endif /* ifdef UART */


#ifdef USART
	if (USART == p_usart) {
  40072a:	4b0a      	ldr	r3, [pc, #40]	; (400754 <usart_serial_getchar+0x60>)
  40072c:	4298      	cmp	r0, r3
  40072e:	d108      	bne.n	400742 <usart_serial_getchar+0x4e>
		while (usart_read(p_usart, &val));
  400730:	461e      	mov	r6, r3
  400732:	4d09      	ldr	r5, [pc, #36]	; (400758 <usart_serial_getchar+0x64>)
  400734:	4630      	mov	r0, r6
  400736:	a901      	add	r1, sp, #4
  400738:	47a8      	blx	r5
  40073a:	2800      	cmp	r0, #0
  40073c:	d1fa      	bne.n	400734 <usart_serial_getchar+0x40>
		*data = (uint8_t)(val & 0xFF);
  40073e:	9b01      	ldr	r3, [sp, #4]
  400740:	7023      	strb	r3, [r4, #0]
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
  400742:	b002      	add	sp, #8
  400744:	bd70      	pop	{r4, r5, r6, pc}
  400746:	bf00      	nop
  400748:	400e0600 	.word	0x400e0600
  40074c:	00400445 	.word	0x00400445
  400750:	400e0800 	.word	0x400e0800
  400754:	40024000 	.word	0x40024000
  400758:	0040046d 	.word	0x0040046d

0040075c <usart_serial_putchar>:
 *   \retval 1  The character was written.
 *   \retval 0  The function timed out before the USART transmitter became
 * ready to send.
 */
static inline int usart_serial_putchar(usart_if p_usart, const uint8_t c)
{
  40075c:	b570      	push	{r4, r5, r6, lr}
  40075e:	460c      	mov	r4, r1
		while (uart_write((Uart*)p_usart, c)!=0);
		return 1;
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  400760:	4b14      	ldr	r3, [pc, #80]	; (4007b4 <usart_serial_putchar+0x58>)
  400762:	4298      	cmp	r0, r3
  400764:	d107      	bne.n	400776 <usart_serial_putchar+0x1a>
		while (uart_write((Uart*)p_usart, c)!=0);
  400766:	461e      	mov	r6, r3
  400768:	4d13      	ldr	r5, [pc, #76]	; (4007b8 <usart_serial_putchar+0x5c>)
  40076a:	4630      	mov	r0, r6
  40076c:	4621      	mov	r1, r4
  40076e:	47a8      	blx	r5
  400770:	2800      	cmp	r0, #0
  400772:	d1fa      	bne.n	40076a <usart_serial_putchar+0xe>
  400774:	e015      	b.n	4007a2 <usart_serial_putchar+0x46>
		return 1;
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  400776:	4b11      	ldr	r3, [pc, #68]	; (4007bc <usart_serial_putchar+0x60>)
  400778:	4298      	cmp	r0, r3
  40077a:	d107      	bne.n	40078c <usart_serial_putchar+0x30>
		while (uart_write((Uart*)p_usart, c)!=0);
  40077c:	461e      	mov	r6, r3
  40077e:	4d0e      	ldr	r5, [pc, #56]	; (4007b8 <usart_serial_putchar+0x5c>)
  400780:	4630      	mov	r0, r6
  400782:	4621      	mov	r1, r4
  400784:	47a8      	blx	r5
  400786:	2800      	cmp	r0, #0
  400788:	d1fa      	bne.n	400780 <usart_serial_putchar+0x24>
  40078a:	e00c      	b.n	4007a6 <usart_serial_putchar+0x4a>
# endif
#endif /* ifdef UART */


#ifdef USART
	if (USART == p_usart) {
  40078c:	4b0c      	ldr	r3, [pc, #48]	; (4007c0 <usart_serial_putchar+0x64>)
  40078e:	4298      	cmp	r0, r3
  400790:	d10b      	bne.n	4007aa <usart_serial_putchar+0x4e>
		while (usart_write(p_usart, c)!=0);
  400792:	461e      	mov	r6, r3
  400794:	4d0b      	ldr	r5, [pc, #44]	; (4007c4 <usart_serial_putchar+0x68>)
  400796:	4630      	mov	r0, r6
  400798:	4621      	mov	r1, r4
  40079a:	47a8      	blx	r5
  40079c:	2800      	cmp	r0, #0
  40079e:	d1fa      	bne.n	400796 <usart_serial_putchar+0x3a>
  4007a0:	e005      	b.n	4007ae <usart_serial_putchar+0x52>
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
		while (uart_write((Uart*)p_usart, c)!=0);
		return 1;
  4007a2:	2001      	movs	r0, #1
  4007a4:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
		while (uart_write((Uart*)p_usart, c)!=0);
		return 1;
  4007a6:	2001      	movs	r0, #1
  4007a8:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
	}
# endif
#endif /* ifdef USART */

	return 0;
  4007aa:	2000      	movs	r0, #0
  4007ac:	bd70      	pop	{r4, r5, r6, pc}


#ifdef USART
	if (USART == p_usart) {
		while (usart_write(p_usart, c)!=0);
		return 1;
  4007ae:	2001      	movs	r0, #1
	}
# endif
#endif /* ifdef USART */

	return 0;
}
  4007b0:	bd70      	pop	{r4, r5, r6, pc}
  4007b2:	bf00      	nop
  4007b4:	400e0600 	.word	0x400e0600
  4007b8:	00400435 	.word	0x00400435
  4007bc:	400e0800 	.word	0x400e0800
  4007c0:	40024000 	.word	0x40024000
  4007c4:	00400459 	.word	0x00400459

004007c8 <TWI2_Handler>:
} slave_device_t;

slave_device_t emulate_driver;

void BOARD_TWI_Handler(void)
{
  4007c8:	b538      	push	{r3, r4, r5, lr}
	uint32_t status;
	
	status = twi_get_interrupt_status(BOARD_BASE_TWI_SLAVE);
  4007ca:	4840      	ldr	r0, [pc, #256]	; (4008cc <TWI2_Handler+0x104>)
  4007cc:	4b40      	ldr	r3, [pc, #256]	; (4008d0 <TWI2_Handler+0x108>)
  4007ce:	4798      	blx	r3
  4007d0:	4604      	mov	r4, r0
	
	if (((status & TWI_SR_SVACC) == TWI_SR_SVACC)
  4007d2:	f010 0f10 	tst.w	r0, #16
  4007d6:	d016      	beq.n	400806 <TWI2_Handler+0x3e>
				&& (emulate_driver.uc_acquire_address == 0)) {
  4007d8:	4b3e      	ldr	r3, [pc, #248]	; (4008d4 <TWI2_Handler+0x10c>)
  4007da:	791b      	ldrb	r3, [r3, #4]
  4007dc:	b99b      	cbnz	r3, 400806 <TWI2_Handler+0x3e>
		twi_disable_interrupt(BOARD_BASE_TWI_SLAVE, TWI_IDR_SVACC);
  4007de:	4d3b      	ldr	r5, [pc, #236]	; (4008cc <TWI2_Handler+0x104>)
  4007e0:	4628      	mov	r0, r5
  4007e2:	2110      	movs	r1, #16
  4007e4:	4b3c      	ldr	r3, [pc, #240]	; (4008d8 <TWI2_Handler+0x110>)
  4007e6:	4798      	blx	r3
		twi_enable_interrupt(BOARD_BASE_TWI_SLAVE, TWI_IER_RXRDY | TWI_IER_GACC
  4007e8:	4628      	mov	r0, r5
  4007ea:	f640 5122 	movw	r1, #3362	; 0xd22
  4007ee:	4b3b      	ldr	r3, [pc, #236]	; (4008dc <TWI2_Handler+0x114>)
  4007f0:	4798      	blx	r3
				| TWI_IER_NACK | TWI_IER_EOSACC | TWI_IER_SCL_WS);
		emulate_driver.uc_acquire_address++;
  4007f2:	4b38      	ldr	r3, [pc, #224]	; (4008d4 <TWI2_Handler+0x10c>)
  4007f4:	791a      	ldrb	r2, [r3, #4]
  4007f6:	3201      	adds	r2, #1
  4007f8:	711a      	strb	r2, [r3, #4]
		emulate_driver.us_page_address = 0;
  4007fa:	2200      	movs	r2, #0
  4007fc:	801a      	strh	r2, [r3, #0]
		emulate_driver.us_offset_memory = 0;
  4007fe:	805a      	strh	r2, [r3, #2]
		
		printf("\n\nEndereco\n\n");
  400800:	4837      	ldr	r0, [pc, #220]	; (4008e0 <TWI2_Handler+0x118>)
  400802:	4b38      	ldr	r3, [pc, #224]	; (4008e4 <TWI2_Handler+0x11c>)
  400804:	4798      	blx	r3
	}

	if ((status & TWI_SR_GACC) == TWI_SR_GACC) {
  400806:	f014 0f20 	tst.w	r4, #32
  40080a:	d004      	beq.n	400816 <TWI2_Handler+0x4e>
		puts("General Call Treatment\n\r");
  40080c:	4836      	ldr	r0, [pc, #216]	; (4008e8 <TWI2_Handler+0x120>)
  40080e:	4d37      	ldr	r5, [pc, #220]	; (4008ec <TWI2_Handler+0x124>)
  400810:	47a8      	blx	r5
		puts("not treated");
  400812:	4837      	ldr	r0, [pc, #220]	; (4008f0 <TWI2_Handler+0x128>)
  400814:	47a8      	blx	r5
	}

	if (((status & TWI_SR_SVACC) == TWI_SR_SVACC) && ((status & TWI_SR_GACC) == 0)
			&& ((status & TWI_SR_RXRDY) == TWI_SR_RXRDY)) {
  400816:	f004 0332 	and.w	r3, r4, #50	; 0x32
	if ((status & TWI_SR_GACC) == TWI_SR_GACC) {
		puts("General Call Treatment\n\r");
		puts("not treated");
	}

	if (((status & TWI_SR_SVACC) == TWI_SR_SVACC) && ((status & TWI_SR_GACC) == 0)
  40081a:	2b12      	cmp	r3, #18
  40081c:	d127      	bne.n	40086e <TWI2_Handler+0xa6>
			&& ((status & TWI_SR_RXRDY) == TWI_SR_RXRDY)) {

		if (emulate_driver.uc_acquire_address == 1) {
  40081e:	4b2d      	ldr	r3, [pc, #180]	; (4008d4 <TWI2_Handler+0x10c>)
  400820:	791b      	ldrb	r3, [r3, #4]
  400822:	2b01      	cmp	r3, #1
  400824:	d109      	bne.n	40083a <TWI2_Handler+0x72>
			/* Acquire MSB address */
			emulate_driver.us_page_address =
					(twi_read_byte(BOARD_BASE_TWI_SLAVE) & 0xFF) << 8;
  400826:	4829      	ldr	r0, [pc, #164]	; (4008cc <TWI2_Handler+0x104>)
  400828:	4b32      	ldr	r3, [pc, #200]	; (4008f4 <TWI2_Handler+0x12c>)
  40082a:	4798      	blx	r3
	if (((status & TWI_SR_SVACC) == TWI_SR_SVACC) && ((status & TWI_SR_GACC) == 0)
			&& ((status & TWI_SR_RXRDY) == TWI_SR_RXRDY)) {

		if (emulate_driver.uc_acquire_address == 1) {
			/* Acquire MSB address */
			emulate_driver.us_page_address =
  40082c:	4b29      	ldr	r3, [pc, #164]	; (4008d4 <TWI2_Handler+0x10c>)
  40082e:	0200      	lsls	r0, r0, #8
  400830:	8018      	strh	r0, [r3, #0]
					(twi_read_byte(BOARD_BASE_TWI_SLAVE) & 0xFF) << 8;
			emulate_driver.uc_acquire_address++;
  400832:	791a      	ldrb	r2, [r3, #4]
  400834:	3201      	adds	r2, #1
  400836:	711a      	strb	r2, [r3, #4]
  400838:	bd38      	pop	{r3, r4, r5, pc}
		} else {
			if (emulate_driver.uc_acquire_address == 2) {
  40083a:	2b02      	cmp	r3, #2
  40083c:	d10a      	bne.n	400854 <TWI2_Handler+0x8c>
				/* Acquire LSB address */
				emulate_driver.us_page_address |=
  40083e:	4c25      	ldr	r4, [pc, #148]	; (4008d4 <TWI2_Handler+0x10c>)
  400840:	8825      	ldrh	r5, [r4, #0]
						(twi_read_byte(BOARD_BASE_TWI_SLAVE) & 0xFF);
  400842:	4822      	ldr	r0, [pc, #136]	; (4008cc <TWI2_Handler+0x104>)
  400844:	4b2b      	ldr	r3, [pc, #172]	; (4008f4 <TWI2_Handler+0x12c>)
  400846:	4798      	blx	r3
					(twi_read_byte(BOARD_BASE_TWI_SLAVE) & 0xFF) << 8;
			emulate_driver.uc_acquire_address++;
		} else {
			if (emulate_driver.uc_acquire_address == 2) {
				/* Acquire LSB address */
				emulate_driver.us_page_address |=
  400848:	4328      	orrs	r0, r5
  40084a:	8020      	strh	r0, [r4, #0]
						(twi_read_byte(BOARD_BASE_TWI_SLAVE) & 0xFF);
				emulate_driver.uc_acquire_address++;
  40084c:	7923      	ldrb	r3, [r4, #4]
  40084e:	3301      	adds	r3, #1
  400850:	7123      	strb	r3, [r4, #4]
  400852:	bd38      	pop	{r3, r4, r5, pc}
			} else {
				/* Read one byte of data from master to slave device */
				emulate_driver.uc_memory[emulate_driver.us_page_address +
  400854:	4c1f      	ldr	r4, [pc, #124]	; (4008d4 <TWI2_Handler+0x10c>)
  400856:	8825      	ldrh	r5, [r4, #0]
  400858:	8863      	ldrh	r3, [r4, #2]
  40085a:	441d      	add	r5, r3
					emulate_driver.us_offset_memory] =
						(twi_read_byte(BOARD_BASE_TWI_SLAVE) & 0xFF);
  40085c:	481b      	ldr	r0, [pc, #108]	; (4008cc <TWI2_Handler+0x104>)
  40085e:	4b25      	ldr	r3, [pc, #148]	; (4008f4 <TWI2_Handler+0x12c>)
  400860:	4798      	blx	r3
						(twi_read_byte(BOARD_BASE_TWI_SLAVE) & 0xFF);
				emulate_driver.uc_acquire_address++;
			} else {
				/* Read one byte of data from master to slave device */
				emulate_driver.uc_memory[emulate_driver.us_page_address +
					emulate_driver.us_offset_memory] =
  400862:	4425      	add	r5, r4
  400864:	7168      	strb	r0, [r5, #5]
						(twi_read_byte(BOARD_BASE_TWI_SLAVE) & 0xFF);

				emulate_driver.us_offset_memory++;
  400866:	8863      	ldrh	r3, [r4, #2]
  400868:	3301      	adds	r3, #1
  40086a:	8063      	strh	r3, [r4, #2]
  40086c:	bd38      	pop	{r3, r4, r5, pc}
			}
		}
	} else {
		if (((status & TWI_SR_TXRDY) == TWI_SR_TXRDY)
				&& ((status & TWI_SR_TXCOMP) == TWI_SR_TXCOMP)
				&& ((status & TWI_SR_EOSACC) == TWI_SR_EOSACC)) {
  40086e:	f640 0305 	movw	r3, #2053	; 0x805
  400872:	ea04 0203 	and.w	r2, r4, r3

				emulate_driver.us_offset_memory++;
			}
		}
	} else {
		if (((status & TWI_SR_TXRDY) == TWI_SR_TXRDY)
  400876:	429a      	cmp	r2, r3
  400878:	d10f      	bne.n	40089a <TWI2_Handler+0xd2>
				&& ((status & TWI_SR_TXCOMP) == TWI_SR_TXCOMP)
				&& ((status & TWI_SR_EOSACC) == TWI_SR_EOSACC)) {
			/* End of transfer, end of slave access */
			emulate_driver.us_offset_memory = 0;
  40087a:	4b16      	ldr	r3, [pc, #88]	; (4008d4 <TWI2_Handler+0x10c>)
  40087c:	2200      	movs	r2, #0
  40087e:	805a      	strh	r2, [r3, #2]
			emulate_driver.uc_acquire_address = 0;
  400880:	711a      	strb	r2, [r3, #4]
			emulate_driver.us_page_address = 0;
  400882:	801a      	strh	r2, [r3, #0]
			twi_enable_interrupt(BOARD_BASE_TWI_SLAVE, TWI_SR_SVACC);
  400884:	4c11      	ldr	r4, [pc, #68]	; (4008cc <TWI2_Handler+0x104>)
  400886:	4620      	mov	r0, r4
  400888:	2110      	movs	r1, #16
  40088a:	4b14      	ldr	r3, [pc, #80]	; (4008dc <TWI2_Handler+0x114>)
  40088c:	4798      	blx	r3
			twi_disable_interrupt(BOARD_BASE_TWI_SLAVE,
  40088e:	4620      	mov	r0, r4
  400890:	f640 5122 	movw	r1, #3362	; 0xd22
  400894:	4b10      	ldr	r3, [pc, #64]	; (4008d8 <TWI2_Handler+0x110>)
  400896:	4798      	blx	r3
  400898:	bd38      	pop	{r3, r4, r5, pc}
					TWI_IDR_RXRDY | TWI_IDR_GACC |
					TWI_IDR_NACK | TWI_IDR_EOSACC | TWI_IDR_SCL_WS);
		} else {
			if (((status & TWI_SR_SVACC) == TWI_SR_SVACC)
					&& ((status & TWI_SR_GACC) == 0)
  40089a:	f004 0330 	and.w	r3, r4, #48	; 0x30
			twi_enable_interrupt(BOARD_BASE_TWI_SLAVE, TWI_SR_SVACC);
			twi_disable_interrupt(BOARD_BASE_TWI_SLAVE,
					TWI_IDR_RXRDY | TWI_IDR_GACC |
					TWI_IDR_NACK | TWI_IDR_EOSACC | TWI_IDR_SCL_WS);
		} else {
			if (((status & TWI_SR_SVACC) == TWI_SR_SVACC)
  40089e:	2b10      	cmp	r3, #16
  4008a0:	d113      	bne.n	4008ca <TWI2_Handler+0x102>
					&& ((status & TWI_SR_GACC) == 0)
					&& (emulate_driver.uc_acquire_address == 3)
  4008a2:	4b0c      	ldr	r3, [pc, #48]	; (4008d4 <TWI2_Handler+0x10c>)
  4008a4:	791b      	ldrb	r3, [r3, #4]
  4008a6:	2b03      	cmp	r3, #3
  4008a8:	d10f      	bne.n	4008ca <TWI2_Handler+0x102>
					&& ((status & TWI_SR_SVREAD) == TWI_SR_SVREAD)
					&& ((status & TWI_SR_NACK) == 0)) {
  4008aa:	f404 7484 	and.w	r4, r4, #264	; 0x108
  4008ae:	2c08      	cmp	r4, #8
  4008b0:	d10b      	bne.n	4008ca <TWI2_Handler+0x102>
				/* Write one byte of data from slave to master device */
				twi_write_byte(BOARD_BASE_TWI_SLAVE,
  4008b2:	4c08      	ldr	r4, [pc, #32]	; (4008d4 <TWI2_Handler+0x10c>)
						emulate_driver.uc_memory[emulate_driver.us_page_address
						+ emulate_driver.us_offset_memory]);
  4008b4:	8823      	ldrh	r3, [r4, #0]
  4008b6:	8862      	ldrh	r2, [r4, #2]
					&& ((status & TWI_SR_GACC) == 0)
					&& (emulate_driver.uc_acquire_address == 3)
					&& ((status & TWI_SR_SVREAD) == TWI_SR_SVREAD)
					&& ((status & TWI_SR_NACK) == 0)) {
				/* Write one byte of data from slave to master device */
				twi_write_byte(BOARD_BASE_TWI_SLAVE,
  4008b8:	4423      	add	r3, r4
  4008ba:	4413      	add	r3, r2
  4008bc:	4803      	ldr	r0, [pc, #12]	; (4008cc <TWI2_Handler+0x104>)
  4008be:	7959      	ldrb	r1, [r3, #5]
  4008c0:	4b0d      	ldr	r3, [pc, #52]	; (4008f8 <TWI2_Handler+0x130>)
  4008c2:	4798      	blx	r3
						emulate_driver.uc_memory[emulate_driver.us_page_address
						+ emulate_driver.us_offset_memory]);
				emulate_driver.us_offset_memory++;
  4008c4:	8863      	ldrh	r3, [r4, #2]
  4008c6:	3301      	adds	r3, #1
  4008c8:	8063      	strh	r3, [r4, #2]
  4008ca:	bd38      	pop	{r3, r4, r5, pc}
  4008cc:	40040000 	.word	0x40040000
  4008d0:	004003c9 	.word	0x004003c9
  4008d4:	200008cc 	.word	0x200008cc
  4008d8:	004003c1 	.word	0x004003c1
  4008dc:	004003bd 	.word	0x004003bd
  4008e0:	00403a40 	.word	0x00403a40
  4008e4:	00400a55 	.word	0x00400a55
  4008e8:	00403a50 	.word	0x00403a50
  4008ec:	00400b6d 	.word	0x00400b6d
  4008f0:	00403a6c 	.word	0x00403a6c
  4008f4:	004003cd 	.word	0x004003cd
  4008f8:	004003d5 	.word	0x004003d5

004008fc <main>:
 * \brief Application entry point for TWI Slave example.
 *
 * \return Unused (ANSI-C compatibility).
 */
int main(void)
{
  4008fc:	b570      	push	{r4, r5, r6, lr}
  4008fe:	b084      	sub	sp, #16
	uint32_t i;

	/* Initialize the SAM system */
	sysclk_init();
  400900:	4b29      	ldr	r3, [pc, #164]	; (4009a8 <main+0xac>)
  400902:	4798      	blx	r3

	/* Initialize the board */
	board_init();
  400904:	4b29      	ldr	r3, [pc, #164]	; (4009ac <main+0xb0>)
  400906:	4798      	blx	r3
  400908:	2008      	movs	r0, #8
  40090a:	4c29      	ldr	r4, [pc, #164]	; (4009b0 <main+0xb4>)
  40090c:	47a0      	blx	r4
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
  40090e:	4d29      	ldr	r5, [pc, #164]	; (4009b4 <main+0xb8>)
  400910:	4b29      	ldr	r3, [pc, #164]	; (4009b8 <main+0xbc>)
  400912:	601d      	str	r5, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  400914:	4a29      	ldr	r2, [pc, #164]	; (4009bc <main+0xc0>)
  400916:	4b2a      	ldr	r3, [pc, #168]	; (4009c0 <main+0xc4>)
  400918:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  40091a:	4a2a      	ldr	r2, [pc, #168]	; (4009c4 <main+0xc8>)
  40091c:	4b2a      	ldr	r3, [pc, #168]	; (4009c8 <main+0xcc>)
  40091e:	601a      	str	r2, [r3, #0]
static inline void usart_serial_init(usart_if p_usart,
		usart_serial_options_t *opt)
{
#if (!SAM4L)
	sam_uart_opt_t uart_settings;
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
  400920:	4b2a      	ldr	r3, [pc, #168]	; (4009cc <main+0xd0>)
  400922:	9301      	str	r3, [sp, #4]
	uart_settings.ul_baudrate = opt->baudrate;
  400924:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
  400928:	9302      	str	r3, [sp, #8]
	uart_settings.ul_mode = opt->paritytype;
  40092a:	f44f 6300 	mov.w	r3, #2048	; 0x800
  40092e:	9303      	str	r3, [sp, #12]
  400930:	2008      	movs	r0, #8
  400932:	47a0      	blx	r4
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
		sysclk_enable_peripheral_clock(ID_UART0);
		/* Configure UART */
		uart_init((Uart*)p_usart, &uart_settings);
  400934:	4628      	mov	r0, r5
  400936:	a901      	add	r1, sp, #4
  400938:	4b25      	ldr	r3, [pc, #148]	; (4009d0 <main+0xd4>)
  40093a:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
  40093c:	4e25      	ldr	r6, [pc, #148]	; (4009d4 <main+0xd8>)
  40093e:	6833      	ldr	r3, [r6, #0]
  400940:	6898      	ldr	r0, [r3, #8]
  400942:	2100      	movs	r1, #0
  400944:	4d24      	ldr	r5, [pc, #144]	; (4009d8 <main+0xdc>)
  400946:	47a8      	blx	r5
	setbuf(stdin, NULL);
  400948:	6833      	ldr	r3, [r6, #0]
  40094a:	6858      	ldr	r0, [r3, #4]
  40094c:	2100      	movs	r1, #0
  40094e:	47a8      	blx	r5

	/* Initialize the console UART */
	configure_console();

	/* Output example information */
	puts(STRING_HEADER);
  400950:	4822      	ldr	r0, [pc, #136]	; (4009dc <main+0xe0>)
  400952:	4b23      	ldr	r3, [pc, #140]	; (4009e0 <main+0xe4>)
  400954:	4798      	blx	r3

	/* Enable the peripheral clock for TWI */
	pmc_enable_periph_clk(BOARD_ID_TWI_SLAVE);
  400956:	2016      	movs	r0, #22
  400958:	47a0      	blx	r4
  40095a:	4b22      	ldr	r3, [pc, #136]	; (4009e4 <main+0xe8>)
  40095c:	f503 7100 	add.w	r1, r3, #512	; 0x200

	for (i = 0; i < MEMORY_SIZE; i++) {
		emulate_driver.uc_memory[i] = 0;
  400960:	2200      	movs	r2, #0
  400962:	f803 2f01 	strb.w	r2, [r3, #1]!
	puts(STRING_HEADER);

	/* Enable the peripheral clock for TWI */
	pmc_enable_periph_clk(BOARD_ID_TWI_SLAVE);

	for (i = 0; i < MEMORY_SIZE; i++) {
  400966:	428b      	cmp	r3, r1
  400968:	d1fb      	bne.n	400962 <main+0x66>
		emulate_driver.uc_memory[i] = 0;
	}
	emulate_driver.us_offset_memory = 0;
  40096a:	4b1f      	ldr	r3, [pc, #124]	; (4009e8 <main+0xec>)
  40096c:	2400      	movs	r4, #0
  40096e:	805c      	strh	r4, [r3, #2]
	emulate_driver.uc_acquire_address = 0;
  400970:	711c      	strb	r4, [r3, #4]
	emulate_driver.us_page_address = 0;
  400972:	801c      	strh	r4, [r3, #0]

	/* Configure TWI as slave */
	puts("-I- Configuring the TWI in slave mode\n\r");
  400974:	481d      	ldr	r0, [pc, #116]	; (4009ec <main+0xf0>)
  400976:	4b1a      	ldr	r3, [pc, #104]	; (4009e0 <main+0xe4>)
  400978:	4798      	blx	r3
	twi_slave_init(BOARD_BASE_TWI_SLAVE, SLAVE_ADDRESS);
  40097a:	4d1d      	ldr	r5, [pc, #116]	; (4009f0 <main+0xf4>)
  40097c:	4628      	mov	r0, r5
  40097e:	2140      	movs	r1, #64	; 0x40
  400980:	4b1c      	ldr	r3, [pc, #112]	; (4009f4 <main+0xf8>)
  400982:	4798      	blx	r3

	/* Clear receipt buffer */
	twi_read_byte(BOARD_BASE_TWI_SLAVE);
  400984:	4628      	mov	r0, r5
  400986:	4b1c      	ldr	r3, [pc, #112]	; (4009f8 <main+0xfc>)
  400988:	4798      	blx	r3

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  40098a:	4b1c      	ldr	r3, [pc, #112]	; (4009fc <main+0x100>)
  40098c:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  400990:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  400994:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
  400998:	f883 4316 	strb.w	r4, [r3, #790]	; 0x316
    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
/*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  40099c:	601a      	str	r2, [r3, #0]
	/* Configure TWI interrupts */
	NVIC_DisableIRQ(BOARD_TWI_IRQn);
	NVIC_ClearPendingIRQ(BOARD_TWI_IRQn);
	NVIC_SetPriority(BOARD_TWI_IRQn, 0);
	NVIC_EnableIRQ(BOARD_TWI_IRQn);
	twi_enable_interrupt(BOARD_BASE_TWI_SLAVE, TWI_SR_SVACC);
  40099e:	4628      	mov	r0, r5
  4009a0:	2110      	movs	r1, #16
  4009a2:	4b17      	ldr	r3, [pc, #92]	; (400a00 <main+0x104>)
  4009a4:	4798      	blx	r3
  4009a6:	e7fe      	b.n	4009a6 <main+0xaa>
  4009a8:	00400151 	.word	0x00400151
  4009ac:	00400249 	.word	0x00400249
  4009b0:	00400389 	.word	0x00400389
  4009b4:	400e0600 	.word	0x400e0600
  4009b8:	200008c8 	.word	0x200008c8
  4009bc:	0040075d 	.word	0x0040075d
  4009c0:	200008c4 	.word	0x200008c4
  4009c4:	004006f5 	.word	0x004006f5
  4009c8:	200008c0 	.word	0x200008c0
  4009cc:	02dc8000 	.word	0x02dc8000
  4009d0:	004003fd 	.word	0x004003fd
  4009d4:	20000430 	.word	0x20000430
  4009d8:	00400b7d 	.word	0x00400b7d
  4009dc:	00403a78 	.word	0x00403a78
  4009e0:	00400b6d 	.word	0x00400b6d
  4009e4:	200008d0 	.word	0x200008d0
  4009e8:	200008cc 	.word	0x200008cc
  4009ec:	00403ad4 	.word	0x00403ad4
  4009f0:	40040000 	.word	0x40040000
  4009f4:	004003d9 	.word	0x004003d9
  4009f8:	004003cd 	.word	0x004003cd
  4009fc:	e000e100 	.word	0xe000e100
  400a00:	004003bd 	.word	0x004003bd

00400a04 <__libc_init_array>:
  400a04:	b570      	push	{r4, r5, r6, lr}
  400a06:	4e0f      	ldr	r6, [pc, #60]	; (400a44 <__libc_init_array+0x40>)
  400a08:	4d0f      	ldr	r5, [pc, #60]	; (400a48 <__libc_init_array+0x44>)
  400a0a:	1b76      	subs	r6, r6, r5
  400a0c:	10b6      	asrs	r6, r6, #2
  400a0e:	d007      	beq.n	400a20 <__libc_init_array+0x1c>
  400a10:	3d04      	subs	r5, #4
  400a12:	2400      	movs	r4, #0
  400a14:	3401      	adds	r4, #1
  400a16:	f855 3f04 	ldr.w	r3, [r5, #4]!
  400a1a:	4798      	blx	r3
  400a1c:	42a6      	cmp	r6, r4
  400a1e:	d1f9      	bne.n	400a14 <__libc_init_array+0x10>
  400a20:	4e0a      	ldr	r6, [pc, #40]	; (400a4c <__libc_init_array+0x48>)
  400a22:	4d0b      	ldr	r5, [pc, #44]	; (400a50 <__libc_init_array+0x4c>)
  400a24:	1b76      	subs	r6, r6, r5
  400a26:	f003 f897 	bl	403b58 <_init>
  400a2a:	10b6      	asrs	r6, r6, #2
  400a2c:	d008      	beq.n	400a40 <__libc_init_array+0x3c>
  400a2e:	3d04      	subs	r5, #4
  400a30:	2400      	movs	r4, #0
  400a32:	3401      	adds	r4, #1
  400a34:	f855 3f04 	ldr.w	r3, [r5, #4]!
  400a38:	4798      	blx	r3
  400a3a:	42a6      	cmp	r6, r4
  400a3c:	d1f9      	bne.n	400a32 <__libc_init_array+0x2e>
  400a3e:	bd70      	pop	{r4, r5, r6, pc}
  400a40:	bd70      	pop	{r4, r5, r6, pc}
  400a42:	bf00      	nop
  400a44:	00403b64 	.word	0x00403b64
  400a48:	00403b64 	.word	0x00403b64
  400a4c:	00403b6c 	.word	0x00403b6c
  400a50:	00403b64 	.word	0x00403b64

00400a54 <iprintf>:
  400a54:	b40f      	push	{r0, r1, r2, r3}
  400a56:	b500      	push	{lr}
  400a58:	4a07      	ldr	r2, [pc, #28]	; (400a78 <iprintf+0x24>)
  400a5a:	b083      	sub	sp, #12
  400a5c:	ab04      	add	r3, sp, #16
  400a5e:	6810      	ldr	r0, [r2, #0]
  400a60:	f853 2b04 	ldr.w	r2, [r3], #4
  400a64:	6881      	ldr	r1, [r0, #8]
  400a66:	9301      	str	r3, [sp, #4]
  400a68:	f000 f97c 	bl	400d64 <_vfiprintf_r>
  400a6c:	b003      	add	sp, #12
  400a6e:	f85d eb04 	ldr.w	lr, [sp], #4
  400a72:	b004      	add	sp, #16
  400a74:	4770      	bx	lr
  400a76:	bf00      	nop
  400a78:	20000430 	.word	0x20000430

00400a7c <memset>:
  400a7c:	b4f0      	push	{r4, r5, r6, r7}
  400a7e:	0784      	lsls	r4, r0, #30
  400a80:	d043      	beq.n	400b0a <memset+0x8e>
  400a82:	1e54      	subs	r4, r2, #1
  400a84:	2a00      	cmp	r2, #0
  400a86:	d03e      	beq.n	400b06 <memset+0x8a>
  400a88:	b2cd      	uxtb	r5, r1
  400a8a:	4603      	mov	r3, r0
  400a8c:	e003      	b.n	400a96 <memset+0x1a>
  400a8e:	1e62      	subs	r2, r4, #1
  400a90:	2c00      	cmp	r4, #0
  400a92:	d038      	beq.n	400b06 <memset+0x8a>
  400a94:	4614      	mov	r4, r2
  400a96:	f803 5b01 	strb.w	r5, [r3], #1
  400a9a:	079a      	lsls	r2, r3, #30
  400a9c:	d1f7      	bne.n	400a8e <memset+0x12>
  400a9e:	2c03      	cmp	r4, #3
  400aa0:	d92a      	bls.n	400af8 <memset+0x7c>
  400aa2:	b2cd      	uxtb	r5, r1
  400aa4:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  400aa8:	2c0f      	cmp	r4, #15
  400aaa:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  400aae:	d915      	bls.n	400adc <memset+0x60>
  400ab0:	f1a4 0710 	sub.w	r7, r4, #16
  400ab4:	093f      	lsrs	r7, r7, #4
  400ab6:	f103 0610 	add.w	r6, r3, #16
  400aba:	eb06 1607 	add.w	r6, r6, r7, lsl #4
  400abe:	461a      	mov	r2, r3
  400ac0:	6015      	str	r5, [r2, #0]
  400ac2:	6055      	str	r5, [r2, #4]
  400ac4:	6095      	str	r5, [r2, #8]
  400ac6:	60d5      	str	r5, [r2, #12]
  400ac8:	3210      	adds	r2, #16
  400aca:	42b2      	cmp	r2, r6
  400acc:	d1f8      	bne.n	400ac0 <memset+0x44>
  400ace:	f004 040f 	and.w	r4, r4, #15
  400ad2:	3701      	adds	r7, #1
  400ad4:	2c03      	cmp	r4, #3
  400ad6:	eb03 1307 	add.w	r3, r3, r7, lsl #4
  400ada:	d90d      	bls.n	400af8 <memset+0x7c>
  400adc:	461e      	mov	r6, r3
  400ade:	4622      	mov	r2, r4
  400ae0:	3a04      	subs	r2, #4
  400ae2:	2a03      	cmp	r2, #3
  400ae4:	f846 5b04 	str.w	r5, [r6], #4
  400ae8:	d8fa      	bhi.n	400ae0 <memset+0x64>
  400aea:	1f22      	subs	r2, r4, #4
  400aec:	f022 0203 	bic.w	r2, r2, #3
  400af0:	3204      	adds	r2, #4
  400af2:	4413      	add	r3, r2
  400af4:	f004 0403 	and.w	r4, r4, #3
  400af8:	b12c      	cbz	r4, 400b06 <memset+0x8a>
  400afa:	b2c9      	uxtb	r1, r1
  400afc:	441c      	add	r4, r3
  400afe:	f803 1b01 	strb.w	r1, [r3], #1
  400b02:	42a3      	cmp	r3, r4
  400b04:	d1fb      	bne.n	400afe <memset+0x82>
  400b06:	bcf0      	pop	{r4, r5, r6, r7}
  400b08:	4770      	bx	lr
  400b0a:	4614      	mov	r4, r2
  400b0c:	4603      	mov	r3, r0
  400b0e:	e7c6      	b.n	400a9e <memset+0x22>

00400b10 <_puts_r>:
  400b10:	b5f0      	push	{r4, r5, r6, r7, lr}
  400b12:	4604      	mov	r4, r0
  400b14:	b089      	sub	sp, #36	; 0x24
  400b16:	4608      	mov	r0, r1
  400b18:	460d      	mov	r5, r1
  400b1a:	f000 f8b7 	bl	400c8c <strlen>
  400b1e:	68a3      	ldr	r3, [r4, #8]
  400b20:	4f11      	ldr	r7, [pc, #68]	; (400b68 <_puts_r+0x58>)
  400b22:	899a      	ldrh	r2, [r3, #12]
  400b24:	9504      	str	r5, [sp, #16]
  400b26:	2102      	movs	r1, #2
  400b28:	f100 0e01 	add.w	lr, r0, #1
  400b2c:	2601      	movs	r6, #1
  400b2e:	ad04      	add	r5, sp, #16
  400b30:	9102      	str	r1, [sp, #8]
  400b32:	0491      	lsls	r1, r2, #18
  400b34:	9005      	str	r0, [sp, #20]
  400b36:	f8cd e00c 	str.w	lr, [sp, #12]
  400b3a:	9706      	str	r7, [sp, #24]
  400b3c:	9607      	str	r6, [sp, #28]
  400b3e:	9501      	str	r5, [sp, #4]
  400b40:	d406      	bmi.n	400b50 <_puts_r+0x40>
  400b42:	6e59      	ldr	r1, [r3, #100]	; 0x64
  400b44:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  400b48:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
  400b4c:	819a      	strh	r2, [r3, #12]
  400b4e:	6659      	str	r1, [r3, #100]	; 0x64
  400b50:	4620      	mov	r0, r4
  400b52:	4619      	mov	r1, r3
  400b54:	aa01      	add	r2, sp, #4
  400b56:	f001 fab3 	bl	4020c0 <__sfvwrite_r>
  400b5a:	2800      	cmp	r0, #0
  400b5c:	bf0c      	ite	eq
  400b5e:	200a      	moveq	r0, #10
  400b60:	f04f 30ff 	movne.w	r0, #4294967295
  400b64:	b009      	add	sp, #36	; 0x24
  400b66:	bdf0      	pop	{r4, r5, r6, r7, pc}
  400b68:	00403b04 	.word	0x00403b04

00400b6c <puts>:
  400b6c:	4b02      	ldr	r3, [pc, #8]	; (400b78 <puts+0xc>)
  400b6e:	4601      	mov	r1, r0
  400b70:	6818      	ldr	r0, [r3, #0]
  400b72:	f7ff bfcd 	b.w	400b10 <_puts_r>
  400b76:	bf00      	nop
  400b78:	20000430 	.word	0x20000430

00400b7c <setbuf>:
  400b7c:	2900      	cmp	r1, #0
  400b7e:	bf0c      	ite	eq
  400b80:	2202      	moveq	r2, #2
  400b82:	2200      	movne	r2, #0
  400b84:	f44f 6380 	mov.w	r3, #1024	; 0x400
  400b88:	f000 b800 	b.w	400b8c <setvbuf>

00400b8c <setvbuf>:
  400b8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400b90:	4c3c      	ldr	r4, [pc, #240]	; (400c84 <setvbuf+0xf8>)
  400b92:	6825      	ldr	r5, [r4, #0]
  400b94:	4688      	mov	r8, r1
  400b96:	4604      	mov	r4, r0
  400b98:	4616      	mov	r6, r2
  400b9a:	461f      	mov	r7, r3
  400b9c:	b115      	cbz	r5, 400ba4 <setvbuf+0x18>
  400b9e:	6bab      	ldr	r3, [r5, #56]	; 0x38
  400ba0:	2b00      	cmp	r3, #0
  400ba2:	d04f      	beq.n	400c44 <setvbuf+0xb8>
  400ba4:	2e02      	cmp	r6, #2
  400ba6:	d830      	bhi.n	400c0a <setvbuf+0x7e>
  400ba8:	2f00      	cmp	r7, #0
  400baa:	db2e      	blt.n	400c0a <setvbuf+0x7e>
  400bac:	4628      	mov	r0, r5
  400bae:	4621      	mov	r1, r4
  400bb0:	f001 f85a 	bl	401c68 <_fflush_r>
  400bb4:	89a3      	ldrh	r3, [r4, #12]
  400bb6:	2200      	movs	r2, #0
  400bb8:	6062      	str	r2, [r4, #4]
  400bba:	61a2      	str	r2, [r4, #24]
  400bbc:	061a      	lsls	r2, r3, #24
  400bbe:	d428      	bmi.n	400c12 <setvbuf+0x86>
  400bc0:	f023 0383 	bic.w	r3, r3, #131	; 0x83
  400bc4:	b29b      	uxth	r3, r3
  400bc6:	2e02      	cmp	r6, #2
  400bc8:	81a3      	strh	r3, [r4, #12]
  400bca:	d02d      	beq.n	400c28 <setvbuf+0x9c>
  400bcc:	f1b8 0f00 	cmp.w	r8, #0
  400bd0:	d03c      	beq.n	400c4c <setvbuf+0xc0>
  400bd2:	2e01      	cmp	r6, #1
  400bd4:	d013      	beq.n	400bfe <setvbuf+0x72>
  400bd6:	b29b      	uxth	r3, r3
  400bd8:	f003 0008 	and.w	r0, r3, #8
  400bdc:	4a2a      	ldr	r2, [pc, #168]	; (400c88 <setvbuf+0xfc>)
  400bde:	63ea      	str	r2, [r5, #60]	; 0x3c
  400be0:	b280      	uxth	r0, r0
  400be2:	f8c4 8000 	str.w	r8, [r4]
  400be6:	f8c4 8010 	str.w	r8, [r4, #16]
  400bea:	6167      	str	r7, [r4, #20]
  400bec:	b178      	cbz	r0, 400c0e <setvbuf+0x82>
  400bee:	f013 0f03 	tst.w	r3, #3
  400bf2:	bf18      	it	ne
  400bf4:	2700      	movne	r7, #0
  400bf6:	60a7      	str	r7, [r4, #8]
  400bf8:	2000      	movs	r0, #0
  400bfa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400bfe:	f043 0301 	orr.w	r3, r3, #1
  400c02:	427a      	negs	r2, r7
  400c04:	81a3      	strh	r3, [r4, #12]
  400c06:	61a2      	str	r2, [r4, #24]
  400c08:	e7e5      	b.n	400bd6 <setvbuf+0x4a>
  400c0a:	f04f 30ff 	mov.w	r0, #4294967295
  400c0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400c12:	4628      	mov	r0, r5
  400c14:	6921      	ldr	r1, [r4, #16]
  400c16:	f001 f985 	bl	401f24 <_free_r>
  400c1a:	89a3      	ldrh	r3, [r4, #12]
  400c1c:	f023 0383 	bic.w	r3, r3, #131	; 0x83
  400c20:	b29b      	uxth	r3, r3
  400c22:	2e02      	cmp	r6, #2
  400c24:	81a3      	strh	r3, [r4, #12]
  400c26:	d1d1      	bne.n	400bcc <setvbuf+0x40>
  400c28:	2000      	movs	r0, #0
  400c2a:	f104 0243 	add.w	r2, r4, #67	; 0x43
  400c2e:	f043 0302 	orr.w	r3, r3, #2
  400c32:	2500      	movs	r5, #0
  400c34:	2101      	movs	r1, #1
  400c36:	81a3      	strh	r3, [r4, #12]
  400c38:	60a5      	str	r5, [r4, #8]
  400c3a:	6022      	str	r2, [r4, #0]
  400c3c:	6122      	str	r2, [r4, #16]
  400c3e:	6161      	str	r1, [r4, #20]
  400c40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400c44:	4628      	mov	r0, r5
  400c46:	f001 f82b 	bl	401ca0 <__sinit>
  400c4a:	e7ab      	b.n	400ba4 <setvbuf+0x18>
  400c4c:	2f00      	cmp	r7, #0
  400c4e:	bf08      	it	eq
  400c50:	f44f 6780 	moveq.w	r7, #1024	; 0x400
  400c54:	4638      	mov	r0, r7
  400c56:	f001 fc5f 	bl	402518 <malloc>
  400c5a:	4680      	mov	r8, r0
  400c5c:	b128      	cbz	r0, 400c6a <setvbuf+0xde>
  400c5e:	89a3      	ldrh	r3, [r4, #12]
  400c60:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  400c64:	b29b      	uxth	r3, r3
  400c66:	81a3      	strh	r3, [r4, #12]
  400c68:	e7b3      	b.n	400bd2 <setvbuf+0x46>
  400c6a:	f44f 6080 	mov.w	r0, #1024	; 0x400
  400c6e:	f001 fc53 	bl	402518 <malloc>
  400c72:	4680      	mov	r8, r0
  400c74:	b918      	cbnz	r0, 400c7e <setvbuf+0xf2>
  400c76:	89a3      	ldrh	r3, [r4, #12]
  400c78:	f04f 30ff 	mov.w	r0, #4294967295
  400c7c:	e7d5      	b.n	400c2a <setvbuf+0x9e>
  400c7e:	f44f 6780 	mov.w	r7, #1024	; 0x400
  400c82:	e7ec      	b.n	400c5e <setvbuf+0xd2>
  400c84:	20000430 	.word	0x20000430
  400c88:	00401c95 	.word	0x00401c95

00400c8c <strlen>:
  400c8c:	f020 0103 	bic.w	r1, r0, #3
  400c90:	f010 0003 	ands.w	r0, r0, #3
  400c94:	f1c0 0000 	rsb	r0, r0, #0
  400c98:	f851 3b04 	ldr.w	r3, [r1], #4
  400c9c:	f100 0c04 	add.w	ip, r0, #4
  400ca0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
  400ca4:	f06f 0200 	mvn.w	r2, #0
  400ca8:	bf1c      	itt	ne
  400caa:	fa22 f20c 	lsrne.w	r2, r2, ip
  400cae:	4313      	orrne	r3, r2
  400cb0:	f04f 0c01 	mov.w	ip, #1
  400cb4:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
  400cb8:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
  400cbc:	eba3 020c 	sub.w	r2, r3, ip
  400cc0:	ea22 0203 	bic.w	r2, r2, r3
  400cc4:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
  400cc8:	bf04      	itt	eq
  400cca:	f851 3b04 	ldreq.w	r3, [r1], #4
  400cce:	3004      	addeq	r0, #4
  400cd0:	d0f4      	beq.n	400cbc <strlen+0x30>
  400cd2:	f013 0fff 	tst.w	r3, #255	; 0xff
  400cd6:	bf1f      	itttt	ne
  400cd8:	3001      	addne	r0, #1
  400cda:	f413 4f7f 	tstne.w	r3, #65280	; 0xff00
  400cde:	3001      	addne	r0, #1
  400ce0:	f413 0f7f 	tstne.w	r3, #16711680	; 0xff0000
  400ce4:	bf18      	it	ne
  400ce6:	3001      	addne	r0, #1
  400ce8:	4770      	bx	lr
  400cea:	bf00      	nop

00400cec <__sprint_r.part.0>:
  400cec:	6e4b      	ldr	r3, [r1, #100]	; 0x64
  400cee:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  400cf2:	049c      	lsls	r4, r3, #18
  400cf4:	460e      	mov	r6, r1
  400cf6:	4680      	mov	r8, r0
  400cf8:	4691      	mov	r9, r2
  400cfa:	d52a      	bpl.n	400d52 <__sprint_r.part.0+0x66>
  400cfc:	6893      	ldr	r3, [r2, #8]
  400cfe:	6812      	ldr	r2, [r2, #0]
  400d00:	f102 0a08 	add.w	sl, r2, #8
  400d04:	b31b      	cbz	r3, 400d4e <__sprint_r.part.0+0x62>
  400d06:	e91a 00a0 	ldmdb	sl, {r5, r7}
  400d0a:	08bf      	lsrs	r7, r7, #2
  400d0c:	d017      	beq.n	400d3e <__sprint_r.part.0+0x52>
  400d0e:	3d04      	subs	r5, #4
  400d10:	2400      	movs	r4, #0
  400d12:	e001      	b.n	400d18 <__sprint_r.part.0+0x2c>
  400d14:	42a7      	cmp	r7, r4
  400d16:	d010      	beq.n	400d3a <__sprint_r.part.0+0x4e>
  400d18:	4640      	mov	r0, r8
  400d1a:	f855 1f04 	ldr.w	r1, [r5, #4]!
  400d1e:	4632      	mov	r2, r6
  400d20:	f001 f854 	bl	401dcc <_fputwc_r>
  400d24:	1c43      	adds	r3, r0, #1
  400d26:	f104 0401 	add.w	r4, r4, #1
  400d2a:	d1f3      	bne.n	400d14 <__sprint_r.part.0+0x28>
  400d2c:	2300      	movs	r3, #0
  400d2e:	f8c9 3008 	str.w	r3, [r9, #8]
  400d32:	f8c9 3004 	str.w	r3, [r9, #4]
  400d36:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  400d3a:	f8d9 3008 	ldr.w	r3, [r9, #8]
  400d3e:	eba3 0387 	sub.w	r3, r3, r7, lsl #2
  400d42:	f8c9 3008 	str.w	r3, [r9, #8]
  400d46:	f10a 0a08 	add.w	sl, sl, #8
  400d4a:	2b00      	cmp	r3, #0
  400d4c:	d1db      	bne.n	400d06 <__sprint_r.part.0+0x1a>
  400d4e:	2000      	movs	r0, #0
  400d50:	e7ec      	b.n	400d2c <__sprint_r.part.0+0x40>
  400d52:	f001 f9b5 	bl	4020c0 <__sfvwrite_r>
  400d56:	2300      	movs	r3, #0
  400d58:	f8c9 3008 	str.w	r3, [r9, #8]
  400d5c:	f8c9 3004 	str.w	r3, [r9, #4]
  400d60:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

00400d64 <_vfiprintf_r>:
  400d64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400d68:	b0b1      	sub	sp, #196	; 0xc4
  400d6a:	461c      	mov	r4, r3
  400d6c:	9102      	str	r1, [sp, #8]
  400d6e:	4690      	mov	r8, r2
  400d70:	9308      	str	r3, [sp, #32]
  400d72:	9006      	str	r0, [sp, #24]
  400d74:	b118      	cbz	r0, 400d7e <_vfiprintf_r+0x1a>
  400d76:	6b83      	ldr	r3, [r0, #56]	; 0x38
  400d78:	2b00      	cmp	r3, #0
  400d7a:	f000 80e8 	beq.w	400f4e <_vfiprintf_r+0x1ea>
  400d7e:	9d02      	ldr	r5, [sp, #8]
  400d80:	89ab      	ldrh	r3, [r5, #12]
  400d82:	b29a      	uxth	r2, r3
  400d84:	0490      	lsls	r0, r2, #18
  400d86:	d407      	bmi.n	400d98 <_vfiprintf_r+0x34>
  400d88:	6e6a      	ldr	r2, [r5, #100]	; 0x64
  400d8a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  400d8e:	f422 5100 	bic.w	r1, r2, #8192	; 0x2000
  400d92:	81ab      	strh	r3, [r5, #12]
  400d94:	b29a      	uxth	r2, r3
  400d96:	6669      	str	r1, [r5, #100]	; 0x64
  400d98:	0711      	lsls	r1, r2, #28
  400d9a:	f140 80b7 	bpl.w	400f0c <_vfiprintf_r+0x1a8>
  400d9e:	f8dd b008 	ldr.w	fp, [sp, #8]
  400da2:	f8db 3010 	ldr.w	r3, [fp, #16]
  400da6:	2b00      	cmp	r3, #0
  400da8:	f000 80b0 	beq.w	400f0c <_vfiprintf_r+0x1a8>
  400dac:	f002 021a 	and.w	r2, r2, #26
  400db0:	2a0a      	cmp	r2, #10
  400db2:	f000 80b7 	beq.w	400f24 <_vfiprintf_r+0x1c0>
  400db6:	2300      	movs	r3, #0
  400db8:	f10d 0980 	add.w	r9, sp, #128	; 0x80
  400dbc:	930a      	str	r3, [sp, #40]	; 0x28
  400dbe:	9315      	str	r3, [sp, #84]	; 0x54
  400dc0:	9314      	str	r3, [sp, #80]	; 0x50
  400dc2:	9309      	str	r3, [sp, #36]	; 0x24
  400dc4:	f8cd 904c 	str.w	r9, [sp, #76]	; 0x4c
  400dc8:	464e      	mov	r6, r9
  400dca:	f898 3000 	ldrb.w	r3, [r8]
  400dce:	2b00      	cmp	r3, #0
  400dd0:	f000 84c4 	beq.w	40175c <_vfiprintf_r+0x9f8>
  400dd4:	2b25      	cmp	r3, #37	; 0x25
  400dd6:	f000 84c1 	beq.w	40175c <_vfiprintf_r+0x9f8>
  400dda:	f108 0201 	add.w	r2, r8, #1
  400dde:	e001      	b.n	400de4 <_vfiprintf_r+0x80>
  400de0:	2b25      	cmp	r3, #37	; 0x25
  400de2:	d004      	beq.n	400dee <_vfiprintf_r+0x8a>
  400de4:	4614      	mov	r4, r2
  400de6:	3201      	adds	r2, #1
  400de8:	7823      	ldrb	r3, [r4, #0]
  400dea:	2b00      	cmp	r3, #0
  400dec:	d1f8      	bne.n	400de0 <_vfiprintf_r+0x7c>
  400dee:	ebc8 0504 	rsb	r5, r8, r4
  400df2:	b195      	cbz	r5, 400e1a <_vfiprintf_r+0xb6>
  400df4:	9b14      	ldr	r3, [sp, #80]	; 0x50
  400df6:	9a15      	ldr	r2, [sp, #84]	; 0x54
  400df8:	f8c6 8000 	str.w	r8, [r6]
  400dfc:	3301      	adds	r3, #1
  400dfe:	442a      	add	r2, r5
  400e00:	2b07      	cmp	r3, #7
  400e02:	6075      	str	r5, [r6, #4]
  400e04:	9215      	str	r2, [sp, #84]	; 0x54
  400e06:	9314      	str	r3, [sp, #80]	; 0x50
  400e08:	dd7b      	ble.n	400f02 <_vfiprintf_r+0x19e>
  400e0a:	2a00      	cmp	r2, #0
  400e0c:	f040 84d4 	bne.w	4017b8 <_vfiprintf_r+0xa54>
  400e10:	9809      	ldr	r0, [sp, #36]	; 0x24
  400e12:	9214      	str	r2, [sp, #80]	; 0x50
  400e14:	4428      	add	r0, r5
  400e16:	464e      	mov	r6, r9
  400e18:	9009      	str	r0, [sp, #36]	; 0x24
  400e1a:	7823      	ldrb	r3, [r4, #0]
  400e1c:	2b00      	cmp	r3, #0
  400e1e:	f000 83e9 	beq.w	4015f4 <_vfiprintf_r+0x890>
  400e22:	2100      	movs	r1, #0
  400e24:	f04f 0200 	mov.w	r2, #0
  400e28:	f04f 3cff 	mov.w	ip, #4294967295
  400e2c:	7863      	ldrb	r3, [r4, #1]
  400e2e:	f88d 2047 	strb.w	r2, [sp, #71]	; 0x47
  400e32:	9104      	str	r1, [sp, #16]
  400e34:	468a      	mov	sl, r1
  400e36:	f104 0801 	add.w	r8, r4, #1
  400e3a:	4608      	mov	r0, r1
  400e3c:	4665      	mov	r5, ip
  400e3e:	f108 0801 	add.w	r8, r8, #1
  400e42:	f1a3 0220 	sub.w	r2, r3, #32
  400e46:	2a58      	cmp	r2, #88	; 0x58
  400e48:	f200 82d5 	bhi.w	4013f6 <_vfiprintf_r+0x692>
  400e4c:	e8df f012 	tbh	[pc, r2, lsl #1]
  400e50:	02d302c7 	.word	0x02d302c7
  400e54:	02ce02d3 	.word	0x02ce02d3
  400e58:	02d302d3 	.word	0x02d302d3
  400e5c:	02d302d3 	.word	0x02d302d3
  400e60:	02d302d3 	.word	0x02d302d3
  400e64:	028b027e 	.word	0x028b027e
  400e68:	008402d3 	.word	0x008402d3
  400e6c:	02d3028f 	.word	0x02d3028f
  400e70:	0194012b 	.word	0x0194012b
  400e74:	01940194 	.word	0x01940194
  400e78:	01940194 	.word	0x01940194
  400e7c:	01940194 	.word	0x01940194
  400e80:	01940194 	.word	0x01940194
  400e84:	02d302d3 	.word	0x02d302d3
  400e88:	02d302d3 	.word	0x02d302d3
  400e8c:	02d302d3 	.word	0x02d302d3
  400e90:	02d302d3 	.word	0x02d302d3
  400e94:	02d302d3 	.word	0x02d302d3
  400e98:	02d30130 	.word	0x02d30130
  400e9c:	02d302d3 	.word	0x02d302d3
  400ea0:	02d302d3 	.word	0x02d302d3
  400ea4:	02d302d3 	.word	0x02d302d3
  400ea8:	02d302d3 	.word	0x02d302d3
  400eac:	017902d3 	.word	0x017902d3
  400eb0:	02d302d3 	.word	0x02d302d3
  400eb4:	02d302d3 	.word	0x02d302d3
  400eb8:	01a202d3 	.word	0x01a202d3
  400ebc:	02d302d3 	.word	0x02d302d3
  400ec0:	02d301bd 	.word	0x02d301bd
  400ec4:	02d302d3 	.word	0x02d302d3
  400ec8:	02d302d3 	.word	0x02d302d3
  400ecc:	02d302d3 	.word	0x02d302d3
  400ed0:	02d302d3 	.word	0x02d302d3
  400ed4:	01e202d3 	.word	0x01e202d3
  400ed8:	02d301f8 	.word	0x02d301f8
  400edc:	02d302d3 	.word	0x02d302d3
  400ee0:	01f80214 	.word	0x01f80214
  400ee4:	02d302d3 	.word	0x02d302d3
  400ee8:	02d30219 	.word	0x02d30219
  400eec:	00890226 	.word	0x00890226
  400ef0:	02790264 	.word	0x02790264
  400ef4:	023802d3 	.word	0x023802d3
  400ef8:	011902d3 	.word	0x011902d3
  400efc:	02d302d3 	.word	0x02d302d3
  400f00:	02ab      	.short	0x02ab
  400f02:	3608      	adds	r6, #8
  400f04:	9809      	ldr	r0, [sp, #36]	; 0x24
  400f06:	4428      	add	r0, r5
  400f08:	9009      	str	r0, [sp, #36]	; 0x24
  400f0a:	e786      	b.n	400e1a <_vfiprintf_r+0xb6>
  400f0c:	9806      	ldr	r0, [sp, #24]
  400f0e:	9902      	ldr	r1, [sp, #8]
  400f10:	f000 fd8e 	bl	401a30 <__swsetup_r>
  400f14:	b9b0      	cbnz	r0, 400f44 <_vfiprintf_r+0x1e0>
  400f16:	9d02      	ldr	r5, [sp, #8]
  400f18:	89aa      	ldrh	r2, [r5, #12]
  400f1a:	f002 021a 	and.w	r2, r2, #26
  400f1e:	2a0a      	cmp	r2, #10
  400f20:	f47f af49 	bne.w	400db6 <_vfiprintf_r+0x52>
  400f24:	f8dd b008 	ldr.w	fp, [sp, #8]
  400f28:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
  400f2c:	2b00      	cmp	r3, #0
  400f2e:	f6ff af42 	blt.w	400db6 <_vfiprintf_r+0x52>
  400f32:	9806      	ldr	r0, [sp, #24]
  400f34:	4659      	mov	r1, fp
  400f36:	4642      	mov	r2, r8
  400f38:	4623      	mov	r3, r4
  400f3a:	f000 fd3d 	bl	4019b8 <__sbprintf>
  400f3e:	b031      	add	sp, #196	; 0xc4
  400f40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  400f44:	f04f 30ff 	mov.w	r0, #4294967295
  400f48:	b031      	add	sp, #196	; 0xc4
  400f4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  400f4e:	f000 fea7 	bl	401ca0 <__sinit>
  400f52:	e714      	b.n	400d7e <_vfiprintf_r+0x1a>
  400f54:	4240      	negs	r0, r0
  400f56:	9308      	str	r3, [sp, #32]
  400f58:	f04a 0a04 	orr.w	sl, sl, #4
  400f5c:	f898 3000 	ldrb.w	r3, [r8]
  400f60:	e76d      	b.n	400e3e <_vfiprintf_r+0xda>
  400f62:	f01a 0320 	ands.w	r3, sl, #32
  400f66:	9004      	str	r0, [sp, #16]
  400f68:	46ac      	mov	ip, r5
  400f6a:	f000 80f2 	beq.w	401152 <_vfiprintf_r+0x3ee>
  400f6e:	f8dd b020 	ldr.w	fp, [sp, #32]
  400f72:	f10b 0307 	add.w	r3, fp, #7
  400f76:	f023 0307 	bic.w	r3, r3, #7
  400f7a:	f103 0408 	add.w	r4, r3, #8
  400f7e:	9408      	str	r4, [sp, #32]
  400f80:	e9d3 4500 	ldrd	r4, r5, [r3]
  400f84:	2300      	movs	r3, #0
  400f86:	f04f 0000 	mov.w	r0, #0
  400f8a:	2100      	movs	r1, #0
  400f8c:	f88d 0047 	strb.w	r0, [sp, #71]	; 0x47
  400f90:	f8cd c014 	str.w	ip, [sp, #20]
  400f94:	9107      	str	r1, [sp, #28]
  400f96:	f1bc 0f00 	cmp.w	ip, #0
  400f9a:	bfa8      	it	ge
  400f9c:	f02a 0a80 	bicge.w	sl, sl, #128	; 0x80
  400fa0:	ea54 0205 	orrs.w	r2, r4, r5
  400fa4:	f040 80ad 	bne.w	401102 <_vfiprintf_r+0x39e>
  400fa8:	f1bc 0f00 	cmp.w	ip, #0
  400fac:	f040 80a9 	bne.w	401102 <_vfiprintf_r+0x39e>
  400fb0:	2b00      	cmp	r3, #0
  400fb2:	f040 83bc 	bne.w	40172e <_vfiprintf_r+0x9ca>
  400fb6:	f01a 0f01 	tst.w	sl, #1
  400fba:	f000 83b8 	beq.w	40172e <_vfiprintf_r+0x9ca>
  400fbe:	af30      	add	r7, sp, #192	; 0xc0
  400fc0:	2330      	movs	r3, #48	; 0x30
  400fc2:	f807 3d41 	strb.w	r3, [r7, #-65]!
  400fc6:	ebc7 0409 	rsb	r4, r7, r9
  400fca:	9405      	str	r4, [sp, #20]
  400fcc:	f8dd b014 	ldr.w	fp, [sp, #20]
  400fd0:	9c07      	ldr	r4, [sp, #28]
  400fd2:	45e3      	cmp	fp, ip
  400fd4:	bfb8      	it	lt
  400fd6:	46e3      	movlt	fp, ip
  400fd8:	f8cd b00c 	str.w	fp, [sp, #12]
  400fdc:	b11c      	cbz	r4, 400fe6 <_vfiprintf_r+0x282>
  400fde:	f10b 0b01 	add.w	fp, fp, #1
  400fe2:	f8cd b00c 	str.w	fp, [sp, #12]
  400fe6:	f01a 0502 	ands.w	r5, sl, #2
  400fea:	9507      	str	r5, [sp, #28]
  400fec:	d005      	beq.n	400ffa <_vfiprintf_r+0x296>
  400fee:	f8dd b00c 	ldr.w	fp, [sp, #12]
  400ff2:	f10b 0b02 	add.w	fp, fp, #2
  400ff6:	f8cd b00c 	str.w	fp, [sp, #12]
  400ffa:	f01a 0384 	ands.w	r3, sl, #132	; 0x84
  400ffe:	930b      	str	r3, [sp, #44]	; 0x2c
  401000:	f040 8217 	bne.w	401432 <_vfiprintf_r+0x6ce>
  401004:	9d04      	ldr	r5, [sp, #16]
  401006:	f8dd b00c 	ldr.w	fp, [sp, #12]
  40100a:	ebcb 0405 	rsb	r4, fp, r5
  40100e:	2c00      	cmp	r4, #0
  401010:	f340 820f 	ble.w	401432 <_vfiprintf_r+0x6ce>
  401014:	2c10      	cmp	r4, #16
  401016:	f340 8488 	ble.w	40192a <_vfiprintf_r+0xbc6>
  40101a:	4dbd      	ldr	r5, [pc, #756]	; (401310 <_vfiprintf_r+0x5ac>)
  40101c:	9a15      	ldr	r2, [sp, #84]	; 0x54
  40101e:	9814      	ldr	r0, [sp, #80]	; 0x50
  401020:	462b      	mov	r3, r5
  401022:	f04f 0b10 	mov.w	fp, #16
  401026:	4625      	mov	r5, r4
  401028:	4664      	mov	r4, ip
  40102a:	46b4      	mov	ip, r6
  40102c:	461e      	mov	r6, r3
  40102e:	e006      	b.n	40103e <_vfiprintf_r+0x2da>
  401030:	1c83      	adds	r3, r0, #2
  401032:	f10c 0c08 	add.w	ip, ip, #8
  401036:	4608      	mov	r0, r1
  401038:	3d10      	subs	r5, #16
  40103a:	2d10      	cmp	r5, #16
  40103c:	dd11      	ble.n	401062 <_vfiprintf_r+0x2fe>
  40103e:	1c41      	adds	r1, r0, #1
  401040:	3210      	adds	r2, #16
  401042:	2907      	cmp	r1, #7
  401044:	9215      	str	r2, [sp, #84]	; 0x54
  401046:	e88c 0840 	stmia.w	ip, {r6, fp}
  40104a:	9114      	str	r1, [sp, #80]	; 0x50
  40104c:	ddf0      	ble.n	401030 <_vfiprintf_r+0x2cc>
  40104e:	2a00      	cmp	r2, #0
  401050:	f040 81e2 	bne.w	401418 <_vfiprintf_r+0x6b4>
  401054:	3d10      	subs	r5, #16
  401056:	2d10      	cmp	r5, #16
  401058:	f04f 0301 	mov.w	r3, #1
  40105c:	4610      	mov	r0, r2
  40105e:	46cc      	mov	ip, r9
  401060:	dced      	bgt.n	40103e <_vfiprintf_r+0x2da>
  401062:	4631      	mov	r1, r6
  401064:	4666      	mov	r6, ip
  401066:	46a4      	mov	ip, r4
  401068:	462c      	mov	r4, r5
  40106a:	460d      	mov	r5, r1
  40106c:	4422      	add	r2, r4
  40106e:	2b07      	cmp	r3, #7
  401070:	9215      	str	r2, [sp, #84]	; 0x54
  401072:	6035      	str	r5, [r6, #0]
  401074:	6074      	str	r4, [r6, #4]
  401076:	9314      	str	r3, [sp, #80]	; 0x50
  401078:	f300 8369 	bgt.w	40174e <_vfiprintf_r+0x9ea>
  40107c:	3608      	adds	r6, #8
  40107e:	1c59      	adds	r1, r3, #1
  401080:	e1da      	b.n	401438 <_vfiprintf_r+0x6d4>
  401082:	f01a 0f20 	tst.w	sl, #32
  401086:	9004      	str	r0, [sp, #16]
  401088:	46ac      	mov	ip, r5
  40108a:	f000 808b 	beq.w	4011a4 <_vfiprintf_r+0x440>
  40108e:	9d08      	ldr	r5, [sp, #32]
  401090:	1deb      	adds	r3, r5, #7
  401092:	f023 0307 	bic.w	r3, r3, #7
  401096:	f103 0b08 	add.w	fp, r3, #8
  40109a:	e9d3 4500 	ldrd	r4, r5, [r3]
  40109e:	f8cd b020 	str.w	fp, [sp, #32]
  4010a2:	2301      	movs	r3, #1
  4010a4:	e76f      	b.n	400f86 <_vfiprintf_r+0x222>
  4010a6:	f04a 0a80 	orr.w	sl, sl, #128	; 0x80
  4010aa:	f898 3000 	ldrb.w	r3, [r8]
  4010ae:	e6c6      	b.n	400e3e <_vfiprintf_r+0xda>
  4010b0:	f04a 0a10 	orr.w	sl, sl, #16
  4010b4:	f01a 0f20 	tst.w	sl, #32
  4010b8:	9004      	str	r0, [sp, #16]
  4010ba:	46ac      	mov	ip, r5
  4010bc:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
  4010c0:	f000 80c6 	beq.w	401250 <_vfiprintf_r+0x4ec>
  4010c4:	9c08      	ldr	r4, [sp, #32]
  4010c6:	1de1      	adds	r1, r4, #7
  4010c8:	f021 0107 	bic.w	r1, r1, #7
  4010cc:	e9d1 2300 	ldrd	r2, r3, [r1]
  4010d0:	3108      	adds	r1, #8
  4010d2:	9108      	str	r1, [sp, #32]
  4010d4:	4614      	mov	r4, r2
  4010d6:	461d      	mov	r5, r3
  4010d8:	2a00      	cmp	r2, #0
  4010da:	f173 0000 	sbcs.w	r0, r3, #0
  4010de:	f2c0 83cd 	blt.w	40187c <_vfiprintf_r+0xb18>
  4010e2:	f1bc 0f00 	cmp.w	ip, #0
  4010e6:	f89d 1047 	ldrb.w	r1, [sp, #71]	; 0x47
  4010ea:	9107      	str	r1, [sp, #28]
  4010ec:	bfa8      	it	ge
  4010ee:	f02a 0a80 	bicge.w	sl, sl, #128	; 0x80
  4010f2:	ea54 0205 	orrs.w	r2, r4, r5
  4010f6:	f8cd c014 	str.w	ip, [sp, #20]
  4010fa:	f04f 0301 	mov.w	r3, #1
  4010fe:	f43f af53 	beq.w	400fa8 <_vfiprintf_r+0x244>
  401102:	2b01      	cmp	r3, #1
  401104:	f000 8315 	beq.w	401732 <_vfiprintf_r+0x9ce>
  401108:	2b02      	cmp	r3, #2
  40110a:	f10d 037f 	add.w	r3, sp, #127	; 0x7f
  40110e:	f040 8248 	bne.w	4015a2 <_vfiprintf_r+0x83e>
  401112:	980a      	ldr	r0, [sp, #40]	; 0x28
  401114:	4619      	mov	r1, r3
  401116:	0922      	lsrs	r2, r4, #4
  401118:	f004 040f 	and.w	r4, r4, #15
  40111c:	ea42 7205 	orr.w	r2, r2, r5, lsl #28
  401120:	460f      	mov	r7, r1
  401122:	092b      	lsrs	r3, r5, #4
  401124:	5d01      	ldrb	r1, [r0, r4]
  401126:	7039      	strb	r1, [r7, #0]
  401128:	ea52 0b03 	orrs.w	fp, r2, r3
  40112c:	4614      	mov	r4, r2
  40112e:	461d      	mov	r5, r3
  401130:	f107 31ff 	add.w	r1, r7, #4294967295
  401134:	d1ef      	bne.n	401116 <_vfiprintf_r+0x3b2>
  401136:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
  40113a:	ebc7 0309 	rsb	r3, r7, r9
  40113e:	9305      	str	r3, [sp, #20]
  401140:	e744      	b.n	400fcc <_vfiprintf_r+0x268>
  401142:	f04a 0a10 	orr.w	sl, sl, #16
  401146:	f01a 0320 	ands.w	r3, sl, #32
  40114a:	9004      	str	r0, [sp, #16]
  40114c:	46ac      	mov	ip, r5
  40114e:	f47f af0e 	bne.w	400f6e <_vfiprintf_r+0x20a>
  401152:	f01a 0210 	ands.w	r2, sl, #16
  401156:	f040 830f 	bne.w	401778 <_vfiprintf_r+0xa14>
  40115a:	f01a 0340 	ands.w	r3, sl, #64	; 0x40
  40115e:	f000 830b 	beq.w	401778 <_vfiprintf_r+0xa14>
  401162:	f8dd b020 	ldr.w	fp, [sp, #32]
  401166:	f8bb 4000 	ldrh.w	r4, [fp]
  40116a:	f10b 0b04 	add.w	fp, fp, #4
  40116e:	4613      	mov	r3, r2
  401170:	2500      	movs	r5, #0
  401172:	f8cd b020 	str.w	fp, [sp, #32]
  401176:	e706      	b.n	400f86 <_vfiprintf_r+0x222>
  401178:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  40117c:	2000      	movs	r0, #0
  40117e:	f818 3b01 	ldrb.w	r3, [r8], #1
  401182:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  401186:	eb02 0040 	add.w	r0, r2, r0, lsl #1
  40118a:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  40118e:	2a09      	cmp	r2, #9
  401190:	d9f5      	bls.n	40117e <_vfiprintf_r+0x41a>
  401192:	e656      	b.n	400e42 <_vfiprintf_r+0xde>
  401194:	f04a 0a10 	orr.w	sl, sl, #16
  401198:	f01a 0f20 	tst.w	sl, #32
  40119c:	9004      	str	r0, [sp, #16]
  40119e:	46ac      	mov	ip, r5
  4011a0:	f47f af75 	bne.w	40108e <_vfiprintf_r+0x32a>
  4011a4:	f01a 0f10 	tst.w	sl, #16
  4011a8:	f040 82ec 	bne.w	401784 <_vfiprintf_r+0xa20>
  4011ac:	f01a 0f40 	tst.w	sl, #64	; 0x40
  4011b0:	f000 82e8 	beq.w	401784 <_vfiprintf_r+0xa20>
  4011b4:	f8dd b020 	ldr.w	fp, [sp, #32]
  4011b8:	f8bb 4000 	ldrh.w	r4, [fp]
  4011bc:	f10b 0b04 	add.w	fp, fp, #4
  4011c0:	2500      	movs	r5, #0
  4011c2:	2301      	movs	r3, #1
  4011c4:	f8cd b020 	str.w	fp, [sp, #32]
  4011c8:	e6dd      	b.n	400f86 <_vfiprintf_r+0x222>
  4011ca:	46ac      	mov	ip, r5
  4011cc:	f01a 0f20 	tst.w	sl, #32
  4011d0:	4d50      	ldr	r5, [pc, #320]	; (401314 <_vfiprintf_r+0x5b0>)
  4011d2:	9004      	str	r0, [sp, #16]
  4011d4:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
  4011d8:	950a      	str	r5, [sp, #40]	; 0x28
  4011da:	f000 80ee 	beq.w	4013ba <_vfiprintf_r+0x656>
  4011de:	9d08      	ldr	r5, [sp, #32]
  4011e0:	1dea      	adds	r2, r5, #7
  4011e2:	f022 0207 	bic.w	r2, r2, #7
  4011e6:	e9d2 4500 	ldrd	r4, r5, [r2]
  4011ea:	f102 0b08 	add.w	fp, r2, #8
  4011ee:	f8cd b020 	str.w	fp, [sp, #32]
  4011f2:	f01a 0f01 	tst.w	sl, #1
  4011f6:	f000 82a8 	beq.w	40174a <_vfiprintf_r+0x9e6>
  4011fa:	ea54 0b05 	orrs.w	fp, r4, r5
  4011fe:	f000 82a4 	beq.w	40174a <_vfiprintf_r+0x9e6>
  401202:	2230      	movs	r2, #48	; 0x30
  401204:	f88d 3049 	strb.w	r3, [sp, #73]	; 0x49
  401208:	f04a 0a02 	orr.w	sl, sl, #2
  40120c:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
  401210:	2302      	movs	r3, #2
  401212:	e6b8      	b.n	400f86 <_vfiprintf_r+0x222>
  401214:	9b08      	ldr	r3, [sp, #32]
  401216:	f8dd b020 	ldr.w	fp, [sp, #32]
  40121a:	681b      	ldr	r3, [r3, #0]
  40121c:	9004      	str	r0, [sp, #16]
  40121e:	2401      	movs	r4, #1
  401220:	f04f 0500 	mov.w	r5, #0
  401224:	f10b 0b04 	add.w	fp, fp, #4
  401228:	9403      	str	r4, [sp, #12]
  40122a:	f88d 5047 	strb.w	r5, [sp, #71]	; 0x47
  40122e:	f88d 3058 	strb.w	r3, [sp, #88]	; 0x58
  401232:	f8cd b020 	str.w	fp, [sp, #32]
  401236:	9405      	str	r4, [sp, #20]
  401238:	af16      	add	r7, sp, #88	; 0x58
  40123a:	f04f 0c00 	mov.w	ip, #0
  40123e:	e6d2      	b.n	400fe6 <_vfiprintf_r+0x282>
  401240:	f01a 0f20 	tst.w	sl, #32
  401244:	9004      	str	r0, [sp, #16]
  401246:	46ac      	mov	ip, r5
  401248:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
  40124c:	f47f af3a 	bne.w	4010c4 <_vfiprintf_r+0x360>
  401250:	f01a 0f10 	tst.w	sl, #16
  401254:	f040 82a4 	bne.w	4017a0 <_vfiprintf_r+0xa3c>
  401258:	f01a 0f40 	tst.w	sl, #64	; 0x40
  40125c:	f000 82a0 	beq.w	4017a0 <_vfiprintf_r+0xa3c>
  401260:	f8dd b020 	ldr.w	fp, [sp, #32]
  401264:	f9bb 4000 	ldrsh.w	r4, [fp]
  401268:	f10b 0b04 	add.w	fp, fp, #4
  40126c:	17e5      	asrs	r5, r4, #31
  40126e:	4622      	mov	r2, r4
  401270:	462b      	mov	r3, r5
  401272:	f8cd b020 	str.w	fp, [sp, #32]
  401276:	e72f      	b.n	4010d8 <_vfiprintf_r+0x374>
  401278:	f04a 0a40 	orr.w	sl, sl, #64	; 0x40
  40127c:	f898 3000 	ldrb.w	r3, [r8]
  401280:	e5dd      	b.n	400e3e <_vfiprintf_r+0xda>
  401282:	f898 3000 	ldrb.w	r3, [r8]
  401286:	4642      	mov	r2, r8
  401288:	2b6c      	cmp	r3, #108	; 0x6c
  40128a:	bf03      	ittte	eq
  40128c:	f108 0801 	addeq.w	r8, r8, #1
  401290:	f04a 0a20 	orreq.w	sl, sl, #32
  401294:	7853      	ldrbeq	r3, [r2, #1]
  401296:	f04a 0a10 	orrne.w	sl, sl, #16
  40129a:	e5d0      	b.n	400e3e <_vfiprintf_r+0xda>
  40129c:	f01a 0f20 	tst.w	sl, #32
  4012a0:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
  4012a4:	f000 82f8 	beq.w	401898 <_vfiprintf_r+0xb34>
  4012a8:	9c08      	ldr	r4, [sp, #32]
  4012aa:	6821      	ldr	r1, [r4, #0]
  4012ac:	9c09      	ldr	r4, [sp, #36]	; 0x24
  4012ae:	17e5      	asrs	r5, r4, #31
  4012b0:	462b      	mov	r3, r5
  4012b2:	9d08      	ldr	r5, [sp, #32]
  4012b4:	4622      	mov	r2, r4
  4012b6:	3504      	adds	r5, #4
  4012b8:	9508      	str	r5, [sp, #32]
  4012ba:	e9c1 2300 	strd	r2, r3, [r1]
  4012be:	e584      	b.n	400dca <_vfiprintf_r+0x66>
  4012c0:	9c08      	ldr	r4, [sp, #32]
  4012c2:	9004      	str	r0, [sp, #16]
  4012c4:	6827      	ldr	r7, [r4, #0]
  4012c6:	46ac      	mov	ip, r5
  4012c8:	f04f 0500 	mov.w	r5, #0
  4012cc:	f88d 5047 	strb.w	r5, [sp, #71]	; 0x47
  4012d0:	3404      	adds	r4, #4
  4012d2:	2f00      	cmp	r7, #0
  4012d4:	f000 8334 	beq.w	401940 <_vfiprintf_r+0xbdc>
  4012d8:	f1bc 0f00 	cmp.w	ip, #0
  4012dc:	4638      	mov	r0, r7
  4012de:	f2c0 8308 	blt.w	4018f2 <_vfiprintf_r+0xb8e>
  4012e2:	4662      	mov	r2, ip
  4012e4:	2100      	movs	r1, #0
  4012e6:	f8cd c004 	str.w	ip, [sp, #4]
  4012ea:	f001 fbb9 	bl	402a60 <memchr>
  4012ee:	f8dd c004 	ldr.w	ip, [sp, #4]
  4012f2:	2800      	cmp	r0, #0
  4012f4:	f000 833c 	beq.w	401970 <_vfiprintf_r+0xc0c>
  4012f8:	1bc0      	subs	r0, r0, r7
  4012fa:	4560      	cmp	r0, ip
  4012fc:	bfa8      	it	ge
  4012fe:	4660      	movge	r0, ip
  401300:	f89d 5047 	ldrb.w	r5, [sp, #71]	; 0x47
  401304:	9005      	str	r0, [sp, #20]
  401306:	9408      	str	r4, [sp, #32]
  401308:	9507      	str	r5, [sp, #28]
  40130a:	f04f 0c00 	mov.w	ip, #0
  40130e:	e65d      	b.n	400fcc <_vfiprintf_r+0x268>
  401310:	00403b48 	.word	0x00403b48
  401314:	00403b08 	.word	0x00403b08
  401318:	9a08      	ldr	r2, [sp, #32]
  40131a:	9004      	str	r0, [sp, #16]
  40131c:	2330      	movs	r3, #48	; 0x30
  40131e:	f88d 3048 	strb.w	r3, [sp, #72]	; 0x48
  401322:	f102 0b04 	add.w	fp, r2, #4
  401326:	2378      	movs	r3, #120	; 0x78
  401328:	48af      	ldr	r0, [pc, #700]	; (4015e8 <_vfiprintf_r+0x884>)
  40132a:	f88d 3049 	strb.w	r3, [sp, #73]	; 0x49
  40132e:	46ac      	mov	ip, r5
  401330:	6814      	ldr	r4, [r2, #0]
  401332:	f8cd b020 	str.w	fp, [sp, #32]
  401336:	f04a 0a02 	orr.w	sl, sl, #2
  40133a:	2500      	movs	r5, #0
  40133c:	900a      	str	r0, [sp, #40]	; 0x28
  40133e:	2302      	movs	r3, #2
  401340:	e621      	b.n	400f86 <_vfiprintf_r+0x222>
  401342:	f04a 0a20 	orr.w	sl, sl, #32
  401346:	f898 3000 	ldrb.w	r3, [r8]
  40134a:	e578      	b.n	400e3e <_vfiprintf_r+0xda>
  40134c:	f8dd b020 	ldr.w	fp, [sp, #32]
  401350:	f8db 0000 	ldr.w	r0, [fp]
  401354:	2800      	cmp	r0, #0
  401356:	f10b 0304 	add.w	r3, fp, #4
  40135a:	f6ff adfb 	blt.w	400f54 <_vfiprintf_r+0x1f0>
  40135e:	9308      	str	r3, [sp, #32]
  401360:	f898 3000 	ldrb.w	r3, [r8]
  401364:	e56b      	b.n	400e3e <_vfiprintf_r+0xda>
  401366:	f898 3000 	ldrb.w	r3, [r8]
  40136a:	212b      	movs	r1, #43	; 0x2b
  40136c:	e567      	b.n	400e3e <_vfiprintf_r+0xda>
  40136e:	f898 3000 	ldrb.w	r3, [r8]
  401372:	2b2a      	cmp	r3, #42	; 0x2a
  401374:	f108 0401 	add.w	r4, r8, #1
  401378:	f000 8309 	beq.w	40198e <_vfiprintf_r+0xc2a>
  40137c:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  401380:	2a09      	cmp	r2, #9
  401382:	bf98      	it	ls
  401384:	2500      	movls	r5, #0
  401386:	f200 82fe 	bhi.w	401986 <_vfiprintf_r+0xc22>
  40138a:	f814 3b01 	ldrb.w	r3, [r4], #1
  40138e:	eb05 0585 	add.w	r5, r5, r5, lsl #2
  401392:	eb02 0545 	add.w	r5, r2, r5, lsl #1
  401396:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  40139a:	2a09      	cmp	r2, #9
  40139c:	d9f5      	bls.n	40138a <_vfiprintf_r+0x626>
  40139e:	ea45 75e5 	orr.w	r5, r5, r5, asr #31
  4013a2:	46a0      	mov	r8, r4
  4013a4:	e54d      	b.n	400e42 <_vfiprintf_r+0xde>
  4013a6:	4c90      	ldr	r4, [pc, #576]	; (4015e8 <_vfiprintf_r+0x884>)
  4013a8:	9004      	str	r0, [sp, #16]
  4013aa:	f01a 0f20 	tst.w	sl, #32
  4013ae:	46ac      	mov	ip, r5
  4013b0:	940a      	str	r4, [sp, #40]	; 0x28
  4013b2:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
  4013b6:	f47f af12 	bne.w	4011de <_vfiprintf_r+0x47a>
  4013ba:	f01a 0f10 	tst.w	sl, #16
  4013be:	f040 81e9 	bne.w	401794 <_vfiprintf_r+0xa30>
  4013c2:	f01a 0f40 	tst.w	sl, #64	; 0x40
  4013c6:	f000 81e5 	beq.w	401794 <_vfiprintf_r+0xa30>
  4013ca:	f8dd b020 	ldr.w	fp, [sp, #32]
  4013ce:	f8bb 4000 	ldrh.w	r4, [fp]
  4013d2:	f10b 0b04 	add.w	fp, fp, #4
  4013d6:	2500      	movs	r5, #0
  4013d8:	f8cd b020 	str.w	fp, [sp, #32]
  4013dc:	e709      	b.n	4011f2 <_vfiprintf_r+0x48e>
  4013de:	f898 3000 	ldrb.w	r3, [r8]
  4013e2:	2900      	cmp	r1, #0
  4013e4:	f47f ad2b 	bne.w	400e3e <_vfiprintf_r+0xda>
  4013e8:	2120      	movs	r1, #32
  4013ea:	e528      	b.n	400e3e <_vfiprintf_r+0xda>
  4013ec:	f04a 0a01 	orr.w	sl, sl, #1
  4013f0:	f898 3000 	ldrb.w	r3, [r8]
  4013f4:	e523      	b.n	400e3e <_vfiprintf_r+0xda>
  4013f6:	9004      	str	r0, [sp, #16]
  4013f8:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
  4013fc:	2b00      	cmp	r3, #0
  4013fe:	f000 80f9 	beq.w	4015f4 <_vfiprintf_r+0x890>
  401402:	2501      	movs	r5, #1
  401404:	f04f 0b00 	mov.w	fp, #0
  401408:	9503      	str	r5, [sp, #12]
  40140a:	f88d 3058 	strb.w	r3, [sp, #88]	; 0x58
  40140e:	f88d b047 	strb.w	fp, [sp, #71]	; 0x47
  401412:	9505      	str	r5, [sp, #20]
  401414:	af16      	add	r7, sp, #88	; 0x58
  401416:	e710      	b.n	40123a <_vfiprintf_r+0x4d6>
  401418:	9806      	ldr	r0, [sp, #24]
  40141a:	9902      	ldr	r1, [sp, #8]
  40141c:	aa13      	add	r2, sp, #76	; 0x4c
  40141e:	f7ff fc65 	bl	400cec <__sprint_r.part.0>
  401422:	2800      	cmp	r0, #0
  401424:	f040 80ed 	bne.w	401602 <_vfiprintf_r+0x89e>
  401428:	9814      	ldr	r0, [sp, #80]	; 0x50
  40142a:	9a15      	ldr	r2, [sp, #84]	; 0x54
  40142c:	1c43      	adds	r3, r0, #1
  40142e:	46cc      	mov	ip, r9
  401430:	e602      	b.n	401038 <_vfiprintf_r+0x2d4>
  401432:	9b14      	ldr	r3, [sp, #80]	; 0x50
  401434:	9a15      	ldr	r2, [sp, #84]	; 0x54
  401436:	1c59      	adds	r1, r3, #1
  401438:	f89d 0047 	ldrb.w	r0, [sp, #71]	; 0x47
  40143c:	b168      	cbz	r0, 40145a <_vfiprintf_r+0x6f6>
  40143e:	3201      	adds	r2, #1
  401440:	f10d 0047 	add.w	r0, sp, #71	; 0x47
  401444:	2301      	movs	r3, #1
  401446:	2907      	cmp	r1, #7
  401448:	9215      	str	r2, [sp, #84]	; 0x54
  40144a:	9114      	str	r1, [sp, #80]	; 0x50
  40144c:	e886 0009 	stmia.w	r6, {r0, r3}
  401450:	f300 8160 	bgt.w	401714 <_vfiprintf_r+0x9b0>
  401454:	460b      	mov	r3, r1
  401456:	3608      	adds	r6, #8
  401458:	3101      	adds	r1, #1
  40145a:	9c07      	ldr	r4, [sp, #28]
  40145c:	b164      	cbz	r4, 401478 <_vfiprintf_r+0x714>
  40145e:	3202      	adds	r2, #2
  401460:	a812      	add	r0, sp, #72	; 0x48
  401462:	2302      	movs	r3, #2
  401464:	2907      	cmp	r1, #7
  401466:	9215      	str	r2, [sp, #84]	; 0x54
  401468:	9114      	str	r1, [sp, #80]	; 0x50
  40146a:	e886 0009 	stmia.w	r6, {r0, r3}
  40146e:	f300 8157 	bgt.w	401720 <_vfiprintf_r+0x9bc>
  401472:	460b      	mov	r3, r1
  401474:	3608      	adds	r6, #8
  401476:	3101      	adds	r1, #1
  401478:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  40147a:	2d80      	cmp	r5, #128	; 0x80
  40147c:	f000 8101 	beq.w	401682 <_vfiprintf_r+0x91e>
  401480:	9d05      	ldr	r5, [sp, #20]
  401482:	ebc5 040c 	rsb	r4, r5, ip
  401486:	2c00      	cmp	r4, #0
  401488:	dd2f      	ble.n	4014ea <_vfiprintf_r+0x786>
  40148a:	2c10      	cmp	r4, #16
  40148c:	4d57      	ldr	r5, [pc, #348]	; (4015ec <_vfiprintf_r+0x888>)
  40148e:	dd22      	ble.n	4014d6 <_vfiprintf_r+0x772>
  401490:	4630      	mov	r0, r6
  401492:	f04f 0b10 	mov.w	fp, #16
  401496:	462e      	mov	r6, r5
  401498:	4625      	mov	r5, r4
  40149a:	9c06      	ldr	r4, [sp, #24]
  40149c:	e006      	b.n	4014ac <_vfiprintf_r+0x748>
  40149e:	f103 0c02 	add.w	ip, r3, #2
  4014a2:	3008      	adds	r0, #8
  4014a4:	460b      	mov	r3, r1
  4014a6:	3d10      	subs	r5, #16
  4014a8:	2d10      	cmp	r5, #16
  4014aa:	dd10      	ble.n	4014ce <_vfiprintf_r+0x76a>
  4014ac:	1c59      	adds	r1, r3, #1
  4014ae:	3210      	adds	r2, #16
  4014b0:	2907      	cmp	r1, #7
  4014b2:	9215      	str	r2, [sp, #84]	; 0x54
  4014b4:	e880 0840 	stmia.w	r0, {r6, fp}
  4014b8:	9114      	str	r1, [sp, #80]	; 0x50
  4014ba:	ddf0      	ble.n	40149e <_vfiprintf_r+0x73a>
  4014bc:	2a00      	cmp	r2, #0
  4014be:	d163      	bne.n	401588 <_vfiprintf_r+0x824>
  4014c0:	3d10      	subs	r5, #16
  4014c2:	2d10      	cmp	r5, #16
  4014c4:	f04f 0c01 	mov.w	ip, #1
  4014c8:	4613      	mov	r3, r2
  4014ca:	4648      	mov	r0, r9
  4014cc:	dcee      	bgt.n	4014ac <_vfiprintf_r+0x748>
  4014ce:	462c      	mov	r4, r5
  4014d0:	4661      	mov	r1, ip
  4014d2:	4635      	mov	r5, r6
  4014d4:	4606      	mov	r6, r0
  4014d6:	4422      	add	r2, r4
  4014d8:	2907      	cmp	r1, #7
  4014da:	9215      	str	r2, [sp, #84]	; 0x54
  4014dc:	6035      	str	r5, [r6, #0]
  4014de:	6074      	str	r4, [r6, #4]
  4014e0:	9114      	str	r1, [sp, #80]	; 0x50
  4014e2:	f300 80c1 	bgt.w	401668 <_vfiprintf_r+0x904>
  4014e6:	3608      	adds	r6, #8
  4014e8:	3101      	adds	r1, #1
  4014ea:	9d05      	ldr	r5, [sp, #20]
  4014ec:	6037      	str	r7, [r6, #0]
  4014ee:	442a      	add	r2, r5
  4014f0:	2907      	cmp	r1, #7
  4014f2:	9215      	str	r2, [sp, #84]	; 0x54
  4014f4:	6075      	str	r5, [r6, #4]
  4014f6:	9114      	str	r1, [sp, #80]	; 0x50
  4014f8:	f340 80c1 	ble.w	40167e <_vfiprintf_r+0x91a>
  4014fc:	2a00      	cmp	r2, #0
  4014fe:	f040 8130 	bne.w	401762 <_vfiprintf_r+0x9fe>
  401502:	9214      	str	r2, [sp, #80]	; 0x50
  401504:	464e      	mov	r6, r9
  401506:	f01a 0f04 	tst.w	sl, #4
  40150a:	f000 808b 	beq.w	401624 <_vfiprintf_r+0x8c0>
  40150e:	9d04      	ldr	r5, [sp, #16]
  401510:	f8dd b00c 	ldr.w	fp, [sp, #12]
  401514:	ebcb 0405 	rsb	r4, fp, r5
  401518:	2c00      	cmp	r4, #0
  40151a:	f340 8083 	ble.w	401624 <_vfiprintf_r+0x8c0>
  40151e:	2c10      	cmp	r4, #16
  401520:	f340 8222 	ble.w	401968 <_vfiprintf_r+0xc04>
  401524:	9914      	ldr	r1, [sp, #80]	; 0x50
  401526:	4d32      	ldr	r5, [pc, #200]	; (4015f0 <_vfiprintf_r+0x88c>)
  401528:	f8dd a018 	ldr.w	sl, [sp, #24]
  40152c:	f8dd b008 	ldr.w	fp, [sp, #8]
  401530:	2710      	movs	r7, #16
  401532:	e005      	b.n	401540 <_vfiprintf_r+0x7dc>
  401534:	1c88      	adds	r0, r1, #2
  401536:	3608      	adds	r6, #8
  401538:	4619      	mov	r1, r3
  40153a:	3c10      	subs	r4, #16
  40153c:	2c10      	cmp	r4, #16
  40153e:	dd10      	ble.n	401562 <_vfiprintf_r+0x7fe>
  401540:	1c4b      	adds	r3, r1, #1
  401542:	3210      	adds	r2, #16
  401544:	2b07      	cmp	r3, #7
  401546:	9215      	str	r2, [sp, #84]	; 0x54
  401548:	e886 00a0 	stmia.w	r6, {r5, r7}
  40154c:	9314      	str	r3, [sp, #80]	; 0x50
  40154e:	ddf1      	ble.n	401534 <_vfiprintf_r+0x7d0>
  401550:	2a00      	cmp	r2, #0
  401552:	d17d      	bne.n	401650 <_vfiprintf_r+0x8ec>
  401554:	3c10      	subs	r4, #16
  401556:	2c10      	cmp	r4, #16
  401558:	f04f 0001 	mov.w	r0, #1
  40155c:	4611      	mov	r1, r2
  40155e:	464e      	mov	r6, r9
  401560:	dcee      	bgt.n	401540 <_vfiprintf_r+0x7dc>
  401562:	4422      	add	r2, r4
  401564:	2807      	cmp	r0, #7
  401566:	9215      	str	r2, [sp, #84]	; 0x54
  401568:	6035      	str	r5, [r6, #0]
  40156a:	6074      	str	r4, [r6, #4]
  40156c:	9014      	str	r0, [sp, #80]	; 0x50
  40156e:	dd59      	ble.n	401624 <_vfiprintf_r+0x8c0>
  401570:	2a00      	cmp	r2, #0
  401572:	d14f      	bne.n	401614 <_vfiprintf_r+0x8b0>
  401574:	9c09      	ldr	r4, [sp, #36]	; 0x24
  401576:	f8dd b00c 	ldr.w	fp, [sp, #12]
  40157a:	9d04      	ldr	r5, [sp, #16]
  40157c:	45ab      	cmp	fp, r5
  40157e:	bfac      	ite	ge
  401580:	445c      	addge	r4, fp
  401582:	1964      	addlt	r4, r4, r5
  401584:	9409      	str	r4, [sp, #36]	; 0x24
  401586:	e05e      	b.n	401646 <_vfiprintf_r+0x8e2>
  401588:	4620      	mov	r0, r4
  40158a:	9902      	ldr	r1, [sp, #8]
  40158c:	aa13      	add	r2, sp, #76	; 0x4c
  40158e:	f7ff fbad 	bl	400cec <__sprint_r.part.0>
  401592:	2800      	cmp	r0, #0
  401594:	d135      	bne.n	401602 <_vfiprintf_r+0x89e>
  401596:	9b14      	ldr	r3, [sp, #80]	; 0x50
  401598:	9a15      	ldr	r2, [sp, #84]	; 0x54
  40159a:	f103 0c01 	add.w	ip, r3, #1
  40159e:	4648      	mov	r0, r9
  4015a0:	e781      	b.n	4014a6 <_vfiprintf_r+0x742>
  4015a2:	08e0      	lsrs	r0, r4, #3
  4015a4:	ea40 7045 	orr.w	r0, r0, r5, lsl #29
  4015a8:	f004 0207 	and.w	r2, r4, #7
  4015ac:	08e9      	lsrs	r1, r5, #3
  4015ae:	3230      	adds	r2, #48	; 0x30
  4015b0:	ea50 0b01 	orrs.w	fp, r0, r1
  4015b4:	461f      	mov	r7, r3
  4015b6:	701a      	strb	r2, [r3, #0]
  4015b8:	4604      	mov	r4, r0
  4015ba:	460d      	mov	r5, r1
  4015bc:	f103 33ff 	add.w	r3, r3, #4294967295
  4015c0:	d1ef      	bne.n	4015a2 <_vfiprintf_r+0x83e>
  4015c2:	f01a 0f01 	tst.w	sl, #1
  4015c6:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
  4015ca:	4639      	mov	r1, r7
  4015cc:	f000 80b9 	beq.w	401742 <_vfiprintf_r+0x9de>
  4015d0:	2a30      	cmp	r2, #48	; 0x30
  4015d2:	f43f acf8 	beq.w	400fc6 <_vfiprintf_r+0x262>
  4015d6:	461f      	mov	r7, r3
  4015d8:	ebc7 0509 	rsb	r5, r7, r9
  4015dc:	2330      	movs	r3, #48	; 0x30
  4015de:	9505      	str	r5, [sp, #20]
  4015e0:	f801 3c01 	strb.w	r3, [r1, #-1]
  4015e4:	e4f2      	b.n	400fcc <_vfiprintf_r+0x268>
  4015e6:	bf00      	nop
  4015e8:	00403b1c 	.word	0x00403b1c
  4015ec:	00403b38 	.word	0x00403b38
  4015f0:	00403b48 	.word	0x00403b48
  4015f4:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4015f6:	b123      	cbz	r3, 401602 <_vfiprintf_r+0x89e>
  4015f8:	9806      	ldr	r0, [sp, #24]
  4015fa:	9902      	ldr	r1, [sp, #8]
  4015fc:	aa13      	add	r2, sp, #76	; 0x4c
  4015fe:	f7ff fb75 	bl	400cec <__sprint_r.part.0>
  401602:	9c02      	ldr	r4, [sp, #8]
  401604:	89a3      	ldrh	r3, [r4, #12]
  401606:	065b      	lsls	r3, r3, #25
  401608:	f53f ac9c 	bmi.w	400f44 <_vfiprintf_r+0x1e0>
  40160c:	9809      	ldr	r0, [sp, #36]	; 0x24
  40160e:	b031      	add	sp, #196	; 0xc4
  401610:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401614:	9806      	ldr	r0, [sp, #24]
  401616:	9902      	ldr	r1, [sp, #8]
  401618:	aa13      	add	r2, sp, #76	; 0x4c
  40161a:	f7ff fb67 	bl	400cec <__sprint_r.part.0>
  40161e:	2800      	cmp	r0, #0
  401620:	d1ef      	bne.n	401602 <_vfiprintf_r+0x89e>
  401622:	9a15      	ldr	r2, [sp, #84]	; 0x54
  401624:	9c09      	ldr	r4, [sp, #36]	; 0x24
  401626:	f8dd b00c 	ldr.w	fp, [sp, #12]
  40162a:	9d04      	ldr	r5, [sp, #16]
  40162c:	45ab      	cmp	fp, r5
  40162e:	bfac      	ite	ge
  401630:	445c      	addge	r4, fp
  401632:	1964      	addlt	r4, r4, r5
  401634:	9409      	str	r4, [sp, #36]	; 0x24
  401636:	b132      	cbz	r2, 401646 <_vfiprintf_r+0x8e2>
  401638:	9806      	ldr	r0, [sp, #24]
  40163a:	9902      	ldr	r1, [sp, #8]
  40163c:	aa13      	add	r2, sp, #76	; 0x4c
  40163e:	f7ff fb55 	bl	400cec <__sprint_r.part.0>
  401642:	2800      	cmp	r0, #0
  401644:	d1dd      	bne.n	401602 <_vfiprintf_r+0x89e>
  401646:	2000      	movs	r0, #0
  401648:	9014      	str	r0, [sp, #80]	; 0x50
  40164a:	464e      	mov	r6, r9
  40164c:	f7ff bbbd 	b.w	400dca <_vfiprintf_r+0x66>
  401650:	4650      	mov	r0, sl
  401652:	4659      	mov	r1, fp
  401654:	aa13      	add	r2, sp, #76	; 0x4c
  401656:	f7ff fb49 	bl	400cec <__sprint_r.part.0>
  40165a:	2800      	cmp	r0, #0
  40165c:	d1d1      	bne.n	401602 <_vfiprintf_r+0x89e>
  40165e:	9914      	ldr	r1, [sp, #80]	; 0x50
  401660:	9a15      	ldr	r2, [sp, #84]	; 0x54
  401662:	1c48      	adds	r0, r1, #1
  401664:	464e      	mov	r6, r9
  401666:	e768      	b.n	40153a <_vfiprintf_r+0x7d6>
  401668:	2a00      	cmp	r2, #0
  40166a:	f040 80fa 	bne.w	401862 <_vfiprintf_r+0xafe>
  40166e:	9c05      	ldr	r4, [sp, #20]
  401670:	9720      	str	r7, [sp, #128]	; 0x80
  401672:	2301      	movs	r3, #1
  401674:	9421      	str	r4, [sp, #132]	; 0x84
  401676:	9415      	str	r4, [sp, #84]	; 0x54
  401678:	4622      	mov	r2, r4
  40167a:	9314      	str	r3, [sp, #80]	; 0x50
  40167c:	464e      	mov	r6, r9
  40167e:	3608      	adds	r6, #8
  401680:	e741      	b.n	401506 <_vfiprintf_r+0x7a2>
  401682:	9d04      	ldr	r5, [sp, #16]
  401684:	f8dd b00c 	ldr.w	fp, [sp, #12]
  401688:	ebcb 0405 	rsb	r4, fp, r5
  40168c:	2c00      	cmp	r4, #0
  40168e:	f77f aef7 	ble.w	401480 <_vfiprintf_r+0x71c>
  401692:	2c10      	cmp	r4, #16
  401694:	4da8      	ldr	r5, [pc, #672]	; (401938 <_vfiprintf_r+0xbd4>)
  401696:	f340 8174 	ble.w	401982 <_vfiprintf_r+0xc1e>
  40169a:	4629      	mov	r1, r5
  40169c:	f04f 0b10 	mov.w	fp, #16
  4016a0:	4625      	mov	r5, r4
  4016a2:	4664      	mov	r4, ip
  4016a4:	46b4      	mov	ip, r6
  4016a6:	460e      	mov	r6, r1
  4016a8:	e006      	b.n	4016b8 <_vfiprintf_r+0x954>
  4016aa:	1c98      	adds	r0, r3, #2
  4016ac:	f10c 0c08 	add.w	ip, ip, #8
  4016b0:	460b      	mov	r3, r1
  4016b2:	3d10      	subs	r5, #16
  4016b4:	2d10      	cmp	r5, #16
  4016b6:	dd0f      	ble.n	4016d8 <_vfiprintf_r+0x974>
  4016b8:	1c59      	adds	r1, r3, #1
  4016ba:	3210      	adds	r2, #16
  4016bc:	2907      	cmp	r1, #7
  4016be:	9215      	str	r2, [sp, #84]	; 0x54
  4016c0:	e88c 0840 	stmia.w	ip, {r6, fp}
  4016c4:	9114      	str	r1, [sp, #80]	; 0x50
  4016c6:	ddf0      	ble.n	4016aa <_vfiprintf_r+0x946>
  4016c8:	b9ba      	cbnz	r2, 4016fa <_vfiprintf_r+0x996>
  4016ca:	3d10      	subs	r5, #16
  4016cc:	2d10      	cmp	r5, #16
  4016ce:	f04f 0001 	mov.w	r0, #1
  4016d2:	4613      	mov	r3, r2
  4016d4:	46cc      	mov	ip, r9
  4016d6:	dcef      	bgt.n	4016b8 <_vfiprintf_r+0x954>
  4016d8:	4633      	mov	r3, r6
  4016da:	4666      	mov	r6, ip
  4016dc:	46a4      	mov	ip, r4
  4016de:	462c      	mov	r4, r5
  4016e0:	461d      	mov	r5, r3
  4016e2:	4422      	add	r2, r4
  4016e4:	2807      	cmp	r0, #7
  4016e6:	9215      	str	r2, [sp, #84]	; 0x54
  4016e8:	6035      	str	r5, [r6, #0]
  4016ea:	6074      	str	r4, [r6, #4]
  4016ec:	9014      	str	r0, [sp, #80]	; 0x50
  4016ee:	f300 80b2 	bgt.w	401856 <_vfiprintf_r+0xaf2>
  4016f2:	3608      	adds	r6, #8
  4016f4:	1c41      	adds	r1, r0, #1
  4016f6:	4603      	mov	r3, r0
  4016f8:	e6c2      	b.n	401480 <_vfiprintf_r+0x71c>
  4016fa:	9806      	ldr	r0, [sp, #24]
  4016fc:	9902      	ldr	r1, [sp, #8]
  4016fe:	aa13      	add	r2, sp, #76	; 0x4c
  401700:	f7ff faf4 	bl	400cec <__sprint_r.part.0>
  401704:	2800      	cmp	r0, #0
  401706:	f47f af7c 	bne.w	401602 <_vfiprintf_r+0x89e>
  40170a:	9b14      	ldr	r3, [sp, #80]	; 0x50
  40170c:	9a15      	ldr	r2, [sp, #84]	; 0x54
  40170e:	1c58      	adds	r0, r3, #1
  401710:	46cc      	mov	ip, r9
  401712:	e7ce      	b.n	4016b2 <_vfiprintf_r+0x94e>
  401714:	2a00      	cmp	r2, #0
  401716:	d17c      	bne.n	401812 <_vfiprintf_r+0xaae>
  401718:	4619      	mov	r1, r3
  40171a:	464e      	mov	r6, r9
  40171c:	4613      	mov	r3, r2
  40171e:	e69c      	b.n	40145a <_vfiprintf_r+0x6f6>
  401720:	2a00      	cmp	r2, #0
  401722:	f040 8087 	bne.w	401834 <_vfiprintf_r+0xad0>
  401726:	2101      	movs	r1, #1
  401728:	4613      	mov	r3, r2
  40172a:	464e      	mov	r6, r9
  40172c:	e6a4      	b.n	401478 <_vfiprintf_r+0x714>
  40172e:	464f      	mov	r7, r9
  401730:	e44c      	b.n	400fcc <_vfiprintf_r+0x268>
  401732:	2d00      	cmp	r5, #0
  401734:	bf08      	it	eq
  401736:	2c0a      	cmpeq	r4, #10
  401738:	d249      	bcs.n	4017ce <_vfiprintf_r+0xa6a>
  40173a:	af30      	add	r7, sp, #192	; 0xc0
  40173c:	3430      	adds	r4, #48	; 0x30
  40173e:	f807 4d41 	strb.w	r4, [r7, #-65]!
  401742:	ebc7 0309 	rsb	r3, r7, r9
  401746:	9305      	str	r3, [sp, #20]
  401748:	e440      	b.n	400fcc <_vfiprintf_r+0x268>
  40174a:	2302      	movs	r3, #2
  40174c:	e41b      	b.n	400f86 <_vfiprintf_r+0x222>
  40174e:	2a00      	cmp	r2, #0
  401750:	f040 80b2 	bne.w	4018b8 <_vfiprintf_r+0xb54>
  401754:	4613      	mov	r3, r2
  401756:	2101      	movs	r1, #1
  401758:	464e      	mov	r6, r9
  40175a:	e66d      	b.n	401438 <_vfiprintf_r+0x6d4>
  40175c:	4644      	mov	r4, r8
  40175e:	f7ff bb5c 	b.w	400e1a <_vfiprintf_r+0xb6>
  401762:	9806      	ldr	r0, [sp, #24]
  401764:	9902      	ldr	r1, [sp, #8]
  401766:	aa13      	add	r2, sp, #76	; 0x4c
  401768:	f7ff fac0 	bl	400cec <__sprint_r.part.0>
  40176c:	2800      	cmp	r0, #0
  40176e:	f47f af48 	bne.w	401602 <_vfiprintf_r+0x89e>
  401772:	9a15      	ldr	r2, [sp, #84]	; 0x54
  401774:	464e      	mov	r6, r9
  401776:	e6c6      	b.n	401506 <_vfiprintf_r+0x7a2>
  401778:	9d08      	ldr	r5, [sp, #32]
  40177a:	682c      	ldr	r4, [r5, #0]
  40177c:	3504      	adds	r5, #4
  40177e:	9508      	str	r5, [sp, #32]
  401780:	2500      	movs	r5, #0
  401782:	e400      	b.n	400f86 <_vfiprintf_r+0x222>
  401784:	9d08      	ldr	r5, [sp, #32]
  401786:	682c      	ldr	r4, [r5, #0]
  401788:	3504      	adds	r5, #4
  40178a:	9508      	str	r5, [sp, #32]
  40178c:	2301      	movs	r3, #1
  40178e:	2500      	movs	r5, #0
  401790:	f7ff bbf9 	b.w	400f86 <_vfiprintf_r+0x222>
  401794:	9d08      	ldr	r5, [sp, #32]
  401796:	682c      	ldr	r4, [r5, #0]
  401798:	3504      	adds	r5, #4
  40179a:	9508      	str	r5, [sp, #32]
  40179c:	2500      	movs	r5, #0
  40179e:	e528      	b.n	4011f2 <_vfiprintf_r+0x48e>
  4017a0:	9d08      	ldr	r5, [sp, #32]
  4017a2:	f8dd b020 	ldr.w	fp, [sp, #32]
  4017a6:	682c      	ldr	r4, [r5, #0]
  4017a8:	f10b 0b04 	add.w	fp, fp, #4
  4017ac:	17e5      	asrs	r5, r4, #31
  4017ae:	f8cd b020 	str.w	fp, [sp, #32]
  4017b2:	4622      	mov	r2, r4
  4017b4:	462b      	mov	r3, r5
  4017b6:	e48f      	b.n	4010d8 <_vfiprintf_r+0x374>
  4017b8:	9806      	ldr	r0, [sp, #24]
  4017ba:	9902      	ldr	r1, [sp, #8]
  4017bc:	aa13      	add	r2, sp, #76	; 0x4c
  4017be:	f7ff fa95 	bl	400cec <__sprint_r.part.0>
  4017c2:	2800      	cmp	r0, #0
  4017c4:	f47f af1d 	bne.w	401602 <_vfiprintf_r+0x89e>
  4017c8:	464e      	mov	r6, r9
  4017ca:	f7ff bb9b 	b.w	400f04 <_vfiprintf_r+0x1a0>
  4017ce:	f10d 0b7f 	add.w	fp, sp, #127	; 0x7f
  4017d2:	9603      	str	r6, [sp, #12]
  4017d4:	465e      	mov	r6, fp
  4017d6:	46e3      	mov	fp, ip
  4017d8:	4620      	mov	r0, r4
  4017da:	4629      	mov	r1, r5
  4017dc:	220a      	movs	r2, #10
  4017de:	2300      	movs	r3, #0
  4017e0:	f001 fe58 	bl	403494 <__aeabi_uldivmod>
  4017e4:	3230      	adds	r2, #48	; 0x30
  4017e6:	7032      	strb	r2, [r6, #0]
  4017e8:	4620      	mov	r0, r4
  4017ea:	4629      	mov	r1, r5
  4017ec:	220a      	movs	r2, #10
  4017ee:	2300      	movs	r3, #0
  4017f0:	f001 fe50 	bl	403494 <__aeabi_uldivmod>
  4017f4:	4604      	mov	r4, r0
  4017f6:	460d      	mov	r5, r1
  4017f8:	ea54 0005 	orrs.w	r0, r4, r5
  4017fc:	4637      	mov	r7, r6
  4017fe:	f106 36ff 	add.w	r6, r6, #4294967295
  401802:	d1e9      	bne.n	4017d8 <_vfiprintf_r+0xa74>
  401804:	ebc7 0309 	rsb	r3, r7, r9
  401808:	46dc      	mov	ip, fp
  40180a:	9e03      	ldr	r6, [sp, #12]
  40180c:	9305      	str	r3, [sp, #20]
  40180e:	f7ff bbdd 	b.w	400fcc <_vfiprintf_r+0x268>
  401812:	9806      	ldr	r0, [sp, #24]
  401814:	9902      	ldr	r1, [sp, #8]
  401816:	f8cd c004 	str.w	ip, [sp, #4]
  40181a:	aa13      	add	r2, sp, #76	; 0x4c
  40181c:	f7ff fa66 	bl	400cec <__sprint_r.part.0>
  401820:	f8dd c004 	ldr.w	ip, [sp, #4]
  401824:	2800      	cmp	r0, #0
  401826:	f47f aeec 	bne.w	401602 <_vfiprintf_r+0x89e>
  40182a:	9b14      	ldr	r3, [sp, #80]	; 0x50
  40182c:	9a15      	ldr	r2, [sp, #84]	; 0x54
  40182e:	1c59      	adds	r1, r3, #1
  401830:	464e      	mov	r6, r9
  401832:	e612      	b.n	40145a <_vfiprintf_r+0x6f6>
  401834:	9806      	ldr	r0, [sp, #24]
  401836:	9902      	ldr	r1, [sp, #8]
  401838:	f8cd c004 	str.w	ip, [sp, #4]
  40183c:	aa13      	add	r2, sp, #76	; 0x4c
  40183e:	f7ff fa55 	bl	400cec <__sprint_r.part.0>
  401842:	f8dd c004 	ldr.w	ip, [sp, #4]
  401846:	2800      	cmp	r0, #0
  401848:	f47f aedb 	bne.w	401602 <_vfiprintf_r+0x89e>
  40184c:	9b14      	ldr	r3, [sp, #80]	; 0x50
  40184e:	9a15      	ldr	r2, [sp, #84]	; 0x54
  401850:	1c59      	adds	r1, r3, #1
  401852:	464e      	mov	r6, r9
  401854:	e610      	b.n	401478 <_vfiprintf_r+0x714>
  401856:	2a00      	cmp	r2, #0
  401858:	d156      	bne.n	401908 <_vfiprintf_r+0xba4>
  40185a:	2101      	movs	r1, #1
  40185c:	4613      	mov	r3, r2
  40185e:	464e      	mov	r6, r9
  401860:	e60e      	b.n	401480 <_vfiprintf_r+0x71c>
  401862:	9806      	ldr	r0, [sp, #24]
  401864:	9902      	ldr	r1, [sp, #8]
  401866:	aa13      	add	r2, sp, #76	; 0x4c
  401868:	f7ff fa40 	bl	400cec <__sprint_r.part.0>
  40186c:	2800      	cmp	r0, #0
  40186e:	f47f aec8 	bne.w	401602 <_vfiprintf_r+0x89e>
  401872:	9914      	ldr	r1, [sp, #80]	; 0x50
  401874:	9a15      	ldr	r2, [sp, #84]	; 0x54
  401876:	3101      	adds	r1, #1
  401878:	464e      	mov	r6, r9
  40187a:	e636      	b.n	4014ea <_vfiprintf_r+0x786>
  40187c:	f04f 0b2d 	mov.w	fp, #45	; 0x2d
  401880:	4264      	negs	r4, r4
  401882:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  401886:	f88d b047 	strb.w	fp, [sp, #71]	; 0x47
  40188a:	f8cd b01c 	str.w	fp, [sp, #28]
  40188e:	f8cd c014 	str.w	ip, [sp, #20]
  401892:	2301      	movs	r3, #1
  401894:	f7ff bb7f 	b.w	400f96 <_vfiprintf_r+0x232>
  401898:	f01a 0f10 	tst.w	sl, #16
  40189c:	d11d      	bne.n	4018da <_vfiprintf_r+0xb76>
  40189e:	f01a 0f40 	tst.w	sl, #64	; 0x40
  4018a2:	d059      	beq.n	401958 <_vfiprintf_r+0xbf4>
  4018a4:	9d08      	ldr	r5, [sp, #32]
  4018a6:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
  4018aa:	682b      	ldr	r3, [r5, #0]
  4018ac:	3504      	adds	r5, #4
  4018ae:	9508      	str	r5, [sp, #32]
  4018b0:	f8a3 b000 	strh.w	fp, [r3]
  4018b4:	f7ff ba89 	b.w	400dca <_vfiprintf_r+0x66>
  4018b8:	9806      	ldr	r0, [sp, #24]
  4018ba:	9902      	ldr	r1, [sp, #8]
  4018bc:	f8cd c004 	str.w	ip, [sp, #4]
  4018c0:	aa13      	add	r2, sp, #76	; 0x4c
  4018c2:	f7ff fa13 	bl	400cec <__sprint_r.part.0>
  4018c6:	f8dd c004 	ldr.w	ip, [sp, #4]
  4018ca:	2800      	cmp	r0, #0
  4018cc:	f47f ae99 	bne.w	401602 <_vfiprintf_r+0x89e>
  4018d0:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4018d2:	9a15      	ldr	r2, [sp, #84]	; 0x54
  4018d4:	1c59      	adds	r1, r3, #1
  4018d6:	464e      	mov	r6, r9
  4018d8:	e5ae      	b.n	401438 <_vfiprintf_r+0x6d4>
  4018da:	f8dd b020 	ldr.w	fp, [sp, #32]
  4018de:	9c09      	ldr	r4, [sp, #36]	; 0x24
  4018e0:	f8db 3000 	ldr.w	r3, [fp]
  4018e4:	f10b 0b04 	add.w	fp, fp, #4
  4018e8:	f8cd b020 	str.w	fp, [sp, #32]
  4018ec:	601c      	str	r4, [r3, #0]
  4018ee:	f7ff ba6c 	b.w	400dca <_vfiprintf_r+0x66>
  4018f2:	9408      	str	r4, [sp, #32]
  4018f4:	f7ff f9ca 	bl	400c8c <strlen>
  4018f8:	f89d 4047 	ldrb.w	r4, [sp, #71]	; 0x47
  4018fc:	9005      	str	r0, [sp, #20]
  4018fe:	9407      	str	r4, [sp, #28]
  401900:	f04f 0c00 	mov.w	ip, #0
  401904:	f7ff bb62 	b.w	400fcc <_vfiprintf_r+0x268>
  401908:	9806      	ldr	r0, [sp, #24]
  40190a:	9902      	ldr	r1, [sp, #8]
  40190c:	f8cd c004 	str.w	ip, [sp, #4]
  401910:	aa13      	add	r2, sp, #76	; 0x4c
  401912:	f7ff f9eb 	bl	400cec <__sprint_r.part.0>
  401916:	f8dd c004 	ldr.w	ip, [sp, #4]
  40191a:	2800      	cmp	r0, #0
  40191c:	f47f ae71 	bne.w	401602 <_vfiprintf_r+0x89e>
  401920:	9b14      	ldr	r3, [sp, #80]	; 0x50
  401922:	9a15      	ldr	r2, [sp, #84]	; 0x54
  401924:	1c59      	adds	r1, r3, #1
  401926:	464e      	mov	r6, r9
  401928:	e5aa      	b.n	401480 <_vfiprintf_r+0x71c>
  40192a:	9b14      	ldr	r3, [sp, #80]	; 0x50
  40192c:	9a15      	ldr	r2, [sp, #84]	; 0x54
  40192e:	4d03      	ldr	r5, [pc, #12]	; (40193c <_vfiprintf_r+0xbd8>)
  401930:	3301      	adds	r3, #1
  401932:	f7ff bb9b 	b.w	40106c <_vfiprintf_r+0x308>
  401936:	bf00      	nop
  401938:	00403b38 	.word	0x00403b38
  40193c:	00403b48 	.word	0x00403b48
  401940:	f1bc 0f06 	cmp.w	ip, #6
  401944:	bf34      	ite	cc
  401946:	4663      	movcc	r3, ip
  401948:	2306      	movcs	r3, #6
  40194a:	9408      	str	r4, [sp, #32]
  40194c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
  401950:	9305      	str	r3, [sp, #20]
  401952:	9403      	str	r4, [sp, #12]
  401954:	4f16      	ldr	r7, [pc, #88]	; (4019b0 <_vfiprintf_r+0xc4c>)
  401956:	e470      	b.n	40123a <_vfiprintf_r+0x4d6>
  401958:	9c08      	ldr	r4, [sp, #32]
  40195a:	9d09      	ldr	r5, [sp, #36]	; 0x24
  40195c:	6823      	ldr	r3, [r4, #0]
  40195e:	3404      	adds	r4, #4
  401960:	9408      	str	r4, [sp, #32]
  401962:	601d      	str	r5, [r3, #0]
  401964:	f7ff ba31 	b.w	400dca <_vfiprintf_r+0x66>
  401968:	9814      	ldr	r0, [sp, #80]	; 0x50
  40196a:	4d12      	ldr	r5, [pc, #72]	; (4019b4 <_vfiprintf_r+0xc50>)
  40196c:	3001      	adds	r0, #1
  40196e:	e5f8      	b.n	401562 <_vfiprintf_r+0x7fe>
  401970:	f89d 5047 	ldrb.w	r5, [sp, #71]	; 0x47
  401974:	f8cd c014 	str.w	ip, [sp, #20]
  401978:	9507      	str	r5, [sp, #28]
  40197a:	9408      	str	r4, [sp, #32]
  40197c:	4684      	mov	ip, r0
  40197e:	f7ff bb25 	b.w	400fcc <_vfiprintf_r+0x268>
  401982:	4608      	mov	r0, r1
  401984:	e6ad      	b.n	4016e2 <_vfiprintf_r+0x97e>
  401986:	46a0      	mov	r8, r4
  401988:	2500      	movs	r5, #0
  40198a:	f7ff ba5a 	b.w	400e42 <_vfiprintf_r+0xde>
  40198e:	f8dd b020 	ldr.w	fp, [sp, #32]
  401992:	f898 3001 	ldrb.w	r3, [r8, #1]
  401996:	f8db 5000 	ldr.w	r5, [fp]
  40199a:	f10b 0204 	add.w	r2, fp, #4
  40199e:	2d00      	cmp	r5, #0
  4019a0:	9208      	str	r2, [sp, #32]
  4019a2:	46a0      	mov	r8, r4
  4019a4:	f6bf aa4b 	bge.w	400e3e <_vfiprintf_r+0xda>
  4019a8:	f04f 35ff 	mov.w	r5, #4294967295
  4019ac:	f7ff ba47 	b.w	400e3e <_vfiprintf_r+0xda>
  4019b0:	00403b30 	.word	0x00403b30
  4019b4:	00403b48 	.word	0x00403b48

004019b8 <__sbprintf>:
  4019b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  4019bc:	460c      	mov	r4, r1
  4019be:	f2ad 4d6c 	subw	sp, sp, #1132	; 0x46c
  4019c2:	f8b1 900c 	ldrh.w	r9, [r1, #12]
  4019c6:	69e7      	ldr	r7, [r4, #28]
  4019c8:	6e49      	ldr	r1, [r1, #100]	; 0x64
  4019ca:	f8b4 800e 	ldrh.w	r8, [r4, #14]
  4019ce:	9119      	str	r1, [sp, #100]	; 0x64
  4019d0:	ad1a      	add	r5, sp, #104	; 0x68
  4019d2:	f44f 6680 	mov.w	r6, #1024	; 0x400
  4019d6:	f04f 0e00 	mov.w	lr, #0
  4019da:	9707      	str	r7, [sp, #28]
  4019dc:	f029 0902 	bic.w	r9, r9, #2
  4019e0:	6a67      	ldr	r7, [r4, #36]	; 0x24
  4019e2:	9500      	str	r5, [sp, #0]
  4019e4:	4669      	mov	r1, sp
  4019e6:	9504      	str	r5, [sp, #16]
  4019e8:	9602      	str	r6, [sp, #8]
  4019ea:	9605      	str	r6, [sp, #20]
  4019ec:	f8ad 900c 	strh.w	r9, [sp, #12]
  4019f0:	f8ad 800e 	strh.w	r8, [sp, #14]
  4019f4:	9709      	str	r7, [sp, #36]	; 0x24
  4019f6:	f8cd e018 	str.w	lr, [sp, #24]
  4019fa:	4606      	mov	r6, r0
  4019fc:	f7ff f9b2 	bl	400d64 <_vfiprintf_r>
  401a00:	1e05      	subs	r5, r0, #0
  401a02:	db07      	blt.n	401a14 <__sbprintf+0x5c>
  401a04:	4630      	mov	r0, r6
  401a06:	4669      	mov	r1, sp
  401a08:	f000 f92e 	bl	401c68 <_fflush_r>
  401a0c:	2800      	cmp	r0, #0
  401a0e:	bf18      	it	ne
  401a10:	f04f 35ff 	movne.w	r5, #4294967295
  401a14:	f8bd 300c 	ldrh.w	r3, [sp, #12]
  401a18:	065b      	lsls	r3, r3, #25
  401a1a:	d503      	bpl.n	401a24 <__sbprintf+0x6c>
  401a1c:	89a3      	ldrh	r3, [r4, #12]
  401a1e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  401a22:	81a3      	strh	r3, [r4, #12]
  401a24:	4628      	mov	r0, r5
  401a26:	f20d 4d6c 	addw	sp, sp, #1132	; 0x46c
  401a2a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  401a2e:	bf00      	nop

00401a30 <__swsetup_r>:
  401a30:	4b2f      	ldr	r3, [pc, #188]	; (401af0 <__swsetup_r+0xc0>)
  401a32:	681b      	ldr	r3, [r3, #0]
  401a34:	b570      	push	{r4, r5, r6, lr}
  401a36:	4606      	mov	r6, r0
  401a38:	460c      	mov	r4, r1
  401a3a:	b113      	cbz	r3, 401a42 <__swsetup_r+0x12>
  401a3c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  401a3e:	2a00      	cmp	r2, #0
  401a40:	d036      	beq.n	401ab0 <__swsetup_r+0x80>
  401a42:	89a5      	ldrh	r5, [r4, #12]
  401a44:	b2ab      	uxth	r3, r5
  401a46:	0719      	lsls	r1, r3, #28
  401a48:	d50c      	bpl.n	401a64 <__swsetup_r+0x34>
  401a4a:	6922      	ldr	r2, [r4, #16]
  401a4c:	b1aa      	cbz	r2, 401a7a <__swsetup_r+0x4a>
  401a4e:	f013 0101 	ands.w	r1, r3, #1
  401a52:	d01e      	beq.n	401a92 <__swsetup_r+0x62>
  401a54:	6963      	ldr	r3, [r4, #20]
  401a56:	2100      	movs	r1, #0
  401a58:	425b      	negs	r3, r3
  401a5a:	61a3      	str	r3, [r4, #24]
  401a5c:	60a1      	str	r1, [r4, #8]
  401a5e:	b1f2      	cbz	r2, 401a9e <__swsetup_r+0x6e>
  401a60:	2000      	movs	r0, #0
  401a62:	bd70      	pop	{r4, r5, r6, pc}
  401a64:	06da      	lsls	r2, r3, #27
  401a66:	d53b      	bpl.n	401ae0 <__swsetup_r+0xb0>
  401a68:	075b      	lsls	r3, r3, #29
  401a6a:	d425      	bmi.n	401ab8 <__swsetup_r+0x88>
  401a6c:	6922      	ldr	r2, [r4, #16]
  401a6e:	f045 0308 	orr.w	r3, r5, #8
  401a72:	81a3      	strh	r3, [r4, #12]
  401a74:	b29b      	uxth	r3, r3
  401a76:	2a00      	cmp	r2, #0
  401a78:	d1e9      	bne.n	401a4e <__swsetup_r+0x1e>
  401a7a:	f403 7120 	and.w	r1, r3, #640	; 0x280
  401a7e:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
  401a82:	d0e4      	beq.n	401a4e <__swsetup_r+0x1e>
  401a84:	4630      	mov	r0, r6
  401a86:	4621      	mov	r1, r4
  401a88:	f000 fcd6 	bl	402438 <__smakebuf_r>
  401a8c:	89a3      	ldrh	r3, [r4, #12]
  401a8e:	6922      	ldr	r2, [r4, #16]
  401a90:	e7dd      	b.n	401a4e <__swsetup_r+0x1e>
  401a92:	0798      	lsls	r0, r3, #30
  401a94:	bf58      	it	pl
  401a96:	6961      	ldrpl	r1, [r4, #20]
  401a98:	60a1      	str	r1, [r4, #8]
  401a9a:	2a00      	cmp	r2, #0
  401a9c:	d1e0      	bne.n	401a60 <__swsetup_r+0x30>
  401a9e:	89a3      	ldrh	r3, [r4, #12]
  401aa0:	061a      	lsls	r2, r3, #24
  401aa2:	d5dd      	bpl.n	401a60 <__swsetup_r+0x30>
  401aa4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  401aa8:	81a3      	strh	r3, [r4, #12]
  401aaa:	f04f 30ff 	mov.w	r0, #4294967295
  401aae:	bd70      	pop	{r4, r5, r6, pc}
  401ab0:	4618      	mov	r0, r3
  401ab2:	f000 f8f5 	bl	401ca0 <__sinit>
  401ab6:	e7c4      	b.n	401a42 <__swsetup_r+0x12>
  401ab8:	6b21      	ldr	r1, [r4, #48]	; 0x30
  401aba:	b149      	cbz	r1, 401ad0 <__swsetup_r+0xa0>
  401abc:	f104 0340 	add.w	r3, r4, #64	; 0x40
  401ac0:	4299      	cmp	r1, r3
  401ac2:	d003      	beq.n	401acc <__swsetup_r+0x9c>
  401ac4:	4630      	mov	r0, r6
  401ac6:	f000 fa2d 	bl	401f24 <_free_r>
  401aca:	89a5      	ldrh	r5, [r4, #12]
  401acc:	2300      	movs	r3, #0
  401ace:	6323      	str	r3, [r4, #48]	; 0x30
  401ad0:	f025 0524 	bic.w	r5, r5, #36	; 0x24
  401ad4:	2300      	movs	r3, #0
  401ad6:	6922      	ldr	r2, [r4, #16]
  401ad8:	6063      	str	r3, [r4, #4]
  401ada:	b2ad      	uxth	r5, r5
  401adc:	6022      	str	r2, [r4, #0]
  401ade:	e7c6      	b.n	401a6e <__swsetup_r+0x3e>
  401ae0:	f045 0540 	orr.w	r5, r5, #64	; 0x40
  401ae4:	2309      	movs	r3, #9
  401ae6:	6033      	str	r3, [r6, #0]
  401ae8:	f04f 30ff 	mov.w	r0, #4294967295
  401aec:	81a5      	strh	r5, [r4, #12]
  401aee:	bd70      	pop	{r4, r5, r6, pc}
  401af0:	20000430 	.word	0x20000430

00401af4 <register_fini>:
  401af4:	4b02      	ldr	r3, [pc, #8]	; (401b00 <register_fini+0xc>)
  401af6:	b113      	cbz	r3, 401afe <register_fini+0xa>
  401af8:	4802      	ldr	r0, [pc, #8]	; (401b04 <register_fini+0x10>)
  401afa:	f000 b805 	b.w	401b08 <atexit>
  401afe:	4770      	bx	lr
  401b00:	00000000 	.word	0x00000000
  401b04:	00401d9d 	.word	0x00401d9d

00401b08 <atexit>:
  401b08:	4601      	mov	r1, r0
  401b0a:	2000      	movs	r0, #0
  401b0c:	4602      	mov	r2, r0
  401b0e:	4603      	mov	r3, r0
  401b10:	f001 bbc4 	b.w	40329c <__register_exitproc>

00401b14 <__sflush_r>:
  401b14:	898b      	ldrh	r3, [r1, #12]
  401b16:	b29a      	uxth	r2, r3
  401b18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401b1c:	460d      	mov	r5, r1
  401b1e:	0711      	lsls	r1, r2, #28
  401b20:	4680      	mov	r8, r0
  401b22:	d43c      	bmi.n	401b9e <__sflush_r+0x8a>
  401b24:	686a      	ldr	r2, [r5, #4]
  401b26:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  401b2a:	2a00      	cmp	r2, #0
  401b2c:	81ab      	strh	r3, [r5, #12]
  401b2e:	dd59      	ble.n	401be4 <__sflush_r+0xd0>
  401b30:	6aac      	ldr	r4, [r5, #40]	; 0x28
  401b32:	2c00      	cmp	r4, #0
  401b34:	d04b      	beq.n	401bce <__sflush_r+0xba>
  401b36:	b29b      	uxth	r3, r3
  401b38:	f403 5280 	and.w	r2, r3, #4096	; 0x1000
  401b3c:	2100      	movs	r1, #0
  401b3e:	b292      	uxth	r2, r2
  401b40:	f8d8 6000 	ldr.w	r6, [r8]
  401b44:	f8c8 1000 	str.w	r1, [r8]
  401b48:	2a00      	cmp	r2, #0
  401b4a:	d04f      	beq.n	401bec <__sflush_r+0xd8>
  401b4c:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  401b4e:	075f      	lsls	r7, r3, #29
  401b50:	d505      	bpl.n	401b5e <__sflush_r+0x4a>
  401b52:	6869      	ldr	r1, [r5, #4]
  401b54:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  401b56:	1a52      	subs	r2, r2, r1
  401b58:	b10b      	cbz	r3, 401b5e <__sflush_r+0x4a>
  401b5a:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  401b5c:	1ad2      	subs	r2, r2, r3
  401b5e:	4640      	mov	r0, r8
  401b60:	69e9      	ldr	r1, [r5, #28]
  401b62:	2300      	movs	r3, #0
  401b64:	47a0      	blx	r4
  401b66:	1c44      	adds	r4, r0, #1
  401b68:	d04a      	beq.n	401c00 <__sflush_r+0xec>
  401b6a:	89aa      	ldrh	r2, [r5, #12]
  401b6c:	692b      	ldr	r3, [r5, #16]
  401b6e:	602b      	str	r3, [r5, #0]
  401b70:	f422 6300 	bic.w	r3, r2, #2048	; 0x800
  401b74:	b29b      	uxth	r3, r3
  401b76:	2200      	movs	r2, #0
  401b78:	606a      	str	r2, [r5, #4]
  401b7a:	04da      	lsls	r2, r3, #19
  401b7c:	81ab      	strh	r3, [r5, #12]
  401b7e:	d44c      	bmi.n	401c1a <__sflush_r+0x106>
  401b80:	6b29      	ldr	r1, [r5, #48]	; 0x30
  401b82:	f8c8 6000 	str.w	r6, [r8]
  401b86:	b311      	cbz	r1, 401bce <__sflush_r+0xba>
  401b88:	f105 0340 	add.w	r3, r5, #64	; 0x40
  401b8c:	4299      	cmp	r1, r3
  401b8e:	d002      	beq.n	401b96 <__sflush_r+0x82>
  401b90:	4640      	mov	r0, r8
  401b92:	f000 f9c7 	bl	401f24 <_free_r>
  401b96:	2000      	movs	r0, #0
  401b98:	6328      	str	r0, [r5, #48]	; 0x30
  401b9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401b9e:	692e      	ldr	r6, [r5, #16]
  401ba0:	b1ae      	cbz	r6, 401bce <__sflush_r+0xba>
  401ba2:	682c      	ldr	r4, [r5, #0]
  401ba4:	602e      	str	r6, [r5, #0]
  401ba6:	0791      	lsls	r1, r2, #30
  401ba8:	bf0c      	ite	eq
  401baa:	696b      	ldreq	r3, [r5, #20]
  401bac:	2300      	movne	r3, #0
  401bae:	1ba4      	subs	r4, r4, r6
  401bb0:	60ab      	str	r3, [r5, #8]
  401bb2:	e00a      	b.n	401bca <__sflush_r+0xb6>
  401bb4:	4632      	mov	r2, r6
  401bb6:	4623      	mov	r3, r4
  401bb8:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  401bba:	69e9      	ldr	r1, [r5, #28]
  401bbc:	4640      	mov	r0, r8
  401bbe:	47b8      	blx	r7
  401bc0:	2800      	cmp	r0, #0
  401bc2:	ebc0 0404 	rsb	r4, r0, r4
  401bc6:	4406      	add	r6, r0
  401bc8:	dd04      	ble.n	401bd4 <__sflush_r+0xc0>
  401bca:	2c00      	cmp	r4, #0
  401bcc:	dcf2      	bgt.n	401bb4 <__sflush_r+0xa0>
  401bce:	2000      	movs	r0, #0
  401bd0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401bd4:	89ab      	ldrh	r3, [r5, #12]
  401bd6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  401bda:	81ab      	strh	r3, [r5, #12]
  401bdc:	f04f 30ff 	mov.w	r0, #4294967295
  401be0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401be4:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  401be6:	2a00      	cmp	r2, #0
  401be8:	dca2      	bgt.n	401b30 <__sflush_r+0x1c>
  401bea:	e7f0      	b.n	401bce <__sflush_r+0xba>
  401bec:	2301      	movs	r3, #1
  401bee:	4640      	mov	r0, r8
  401bf0:	69e9      	ldr	r1, [r5, #28]
  401bf2:	47a0      	blx	r4
  401bf4:	1c43      	adds	r3, r0, #1
  401bf6:	4602      	mov	r2, r0
  401bf8:	d01e      	beq.n	401c38 <__sflush_r+0x124>
  401bfa:	89ab      	ldrh	r3, [r5, #12]
  401bfc:	6aac      	ldr	r4, [r5, #40]	; 0x28
  401bfe:	e7a6      	b.n	401b4e <__sflush_r+0x3a>
  401c00:	f8d8 3000 	ldr.w	r3, [r8]
  401c04:	b95b      	cbnz	r3, 401c1e <__sflush_r+0x10a>
  401c06:	89a9      	ldrh	r1, [r5, #12]
  401c08:	606b      	str	r3, [r5, #4]
  401c0a:	f421 6300 	bic.w	r3, r1, #2048	; 0x800
  401c0e:	b29b      	uxth	r3, r3
  401c10:	692a      	ldr	r2, [r5, #16]
  401c12:	81ab      	strh	r3, [r5, #12]
  401c14:	04db      	lsls	r3, r3, #19
  401c16:	602a      	str	r2, [r5, #0]
  401c18:	d5b2      	bpl.n	401b80 <__sflush_r+0x6c>
  401c1a:	6528      	str	r0, [r5, #80]	; 0x50
  401c1c:	e7b0      	b.n	401b80 <__sflush_r+0x6c>
  401c1e:	2b1d      	cmp	r3, #29
  401c20:	d001      	beq.n	401c26 <__sflush_r+0x112>
  401c22:	2b16      	cmp	r3, #22
  401c24:	d119      	bne.n	401c5a <__sflush_r+0x146>
  401c26:	89aa      	ldrh	r2, [r5, #12]
  401c28:	692b      	ldr	r3, [r5, #16]
  401c2a:	602b      	str	r3, [r5, #0]
  401c2c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
  401c30:	2300      	movs	r3, #0
  401c32:	81aa      	strh	r2, [r5, #12]
  401c34:	606b      	str	r3, [r5, #4]
  401c36:	e7a3      	b.n	401b80 <__sflush_r+0x6c>
  401c38:	f8d8 3000 	ldr.w	r3, [r8]
  401c3c:	2b00      	cmp	r3, #0
  401c3e:	d0dc      	beq.n	401bfa <__sflush_r+0xe6>
  401c40:	2b1d      	cmp	r3, #29
  401c42:	d007      	beq.n	401c54 <__sflush_r+0x140>
  401c44:	2b16      	cmp	r3, #22
  401c46:	d005      	beq.n	401c54 <__sflush_r+0x140>
  401c48:	89ab      	ldrh	r3, [r5, #12]
  401c4a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  401c4e:	81ab      	strh	r3, [r5, #12]
  401c50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401c54:	f8c8 6000 	str.w	r6, [r8]
  401c58:	e7b9      	b.n	401bce <__sflush_r+0xba>
  401c5a:	89ab      	ldrh	r3, [r5, #12]
  401c5c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  401c60:	81ab      	strh	r3, [r5, #12]
  401c62:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401c66:	bf00      	nop

00401c68 <_fflush_r>:
  401c68:	b510      	push	{r4, lr}
  401c6a:	4604      	mov	r4, r0
  401c6c:	b082      	sub	sp, #8
  401c6e:	b108      	cbz	r0, 401c74 <_fflush_r+0xc>
  401c70:	6b83      	ldr	r3, [r0, #56]	; 0x38
  401c72:	b153      	cbz	r3, 401c8a <_fflush_r+0x22>
  401c74:	f9b1 000c 	ldrsh.w	r0, [r1, #12]
  401c78:	b908      	cbnz	r0, 401c7e <_fflush_r+0x16>
  401c7a:	b002      	add	sp, #8
  401c7c:	bd10      	pop	{r4, pc}
  401c7e:	4620      	mov	r0, r4
  401c80:	b002      	add	sp, #8
  401c82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  401c86:	f7ff bf45 	b.w	401b14 <__sflush_r>
  401c8a:	9101      	str	r1, [sp, #4]
  401c8c:	f000 f808 	bl	401ca0 <__sinit>
  401c90:	9901      	ldr	r1, [sp, #4]
  401c92:	e7ef      	b.n	401c74 <_fflush_r+0xc>

00401c94 <_cleanup_r>:
  401c94:	4901      	ldr	r1, [pc, #4]	; (401c9c <_cleanup_r+0x8>)
  401c96:	f000 bb9f 	b.w	4023d8 <_fwalk>
  401c9a:	bf00      	nop
  401c9c:	004033e9 	.word	0x004033e9

00401ca0 <__sinit>:
  401ca0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401ca4:	6b84      	ldr	r4, [r0, #56]	; 0x38
  401ca6:	b083      	sub	sp, #12
  401ca8:	4607      	mov	r7, r0
  401caa:	2c00      	cmp	r4, #0
  401cac:	d165      	bne.n	401d7a <__sinit+0xda>
  401cae:	6845      	ldr	r5, [r0, #4]
  401cb0:	4833      	ldr	r0, [pc, #204]	; (401d80 <__sinit+0xe0>)
  401cb2:	63f8      	str	r0, [r7, #60]	; 0x3c
  401cb4:	2304      	movs	r3, #4
  401cb6:	2103      	movs	r1, #3
  401cb8:	f507 723b 	add.w	r2, r7, #748	; 0x2ec
  401cbc:	f8c7 12e4 	str.w	r1, [r7, #740]	; 0x2e4
  401cc0:	f8c7 22e8 	str.w	r2, [r7, #744]	; 0x2e8
  401cc4:	f8c7 42e0 	str.w	r4, [r7, #736]	; 0x2e0
  401cc8:	f105 005c 	add.w	r0, r5, #92	; 0x5c
  401ccc:	81ab      	strh	r3, [r5, #12]
  401cce:	602c      	str	r4, [r5, #0]
  401cd0:	606c      	str	r4, [r5, #4]
  401cd2:	60ac      	str	r4, [r5, #8]
  401cd4:	666c      	str	r4, [r5, #100]	; 0x64
  401cd6:	81ec      	strh	r4, [r5, #14]
  401cd8:	612c      	str	r4, [r5, #16]
  401cda:	616c      	str	r4, [r5, #20]
  401cdc:	61ac      	str	r4, [r5, #24]
  401cde:	4621      	mov	r1, r4
  401ce0:	2208      	movs	r2, #8
  401ce2:	f7fe fecb 	bl	400a7c <memset>
  401ce6:	68be      	ldr	r6, [r7, #8]
  401ce8:	f8df b098 	ldr.w	fp, [pc, #152]	; 401d84 <__sinit+0xe4>
  401cec:	f8df a098 	ldr.w	sl, [pc, #152]	; 401d88 <__sinit+0xe8>
  401cf0:	f8df 9098 	ldr.w	r9, [pc, #152]	; 401d8c <__sinit+0xec>
  401cf4:	f8df 8098 	ldr.w	r8, [pc, #152]	; 401d90 <__sinit+0xf0>
  401cf8:	61ed      	str	r5, [r5, #28]
  401cfa:	2301      	movs	r3, #1
  401cfc:	2209      	movs	r2, #9
  401cfe:	f8c5 b020 	str.w	fp, [r5, #32]
  401d02:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
  401d06:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
  401d0a:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
  401d0e:	4621      	mov	r1, r4
  401d10:	81f3      	strh	r3, [r6, #14]
  401d12:	81b2      	strh	r2, [r6, #12]
  401d14:	6034      	str	r4, [r6, #0]
  401d16:	6074      	str	r4, [r6, #4]
  401d18:	60b4      	str	r4, [r6, #8]
  401d1a:	6674      	str	r4, [r6, #100]	; 0x64
  401d1c:	6134      	str	r4, [r6, #16]
  401d1e:	6174      	str	r4, [r6, #20]
  401d20:	61b4      	str	r4, [r6, #24]
  401d22:	2208      	movs	r2, #8
  401d24:	f106 005c 	add.w	r0, r6, #92	; 0x5c
  401d28:	9301      	str	r3, [sp, #4]
  401d2a:	f7fe fea7 	bl	400a7c <memset>
  401d2e:	68fd      	ldr	r5, [r7, #12]
  401d30:	61f6      	str	r6, [r6, #28]
  401d32:	2012      	movs	r0, #18
  401d34:	2202      	movs	r2, #2
  401d36:	f8c6 b020 	str.w	fp, [r6, #32]
  401d3a:	f8c6 a024 	str.w	sl, [r6, #36]	; 0x24
  401d3e:	f8c6 9028 	str.w	r9, [r6, #40]	; 0x28
  401d42:	f8c6 802c 	str.w	r8, [r6, #44]	; 0x2c
  401d46:	4621      	mov	r1, r4
  401d48:	81a8      	strh	r0, [r5, #12]
  401d4a:	81ea      	strh	r2, [r5, #14]
  401d4c:	602c      	str	r4, [r5, #0]
  401d4e:	606c      	str	r4, [r5, #4]
  401d50:	60ac      	str	r4, [r5, #8]
  401d52:	666c      	str	r4, [r5, #100]	; 0x64
  401d54:	612c      	str	r4, [r5, #16]
  401d56:	616c      	str	r4, [r5, #20]
  401d58:	61ac      	str	r4, [r5, #24]
  401d5a:	f105 005c 	add.w	r0, r5, #92	; 0x5c
  401d5e:	2208      	movs	r2, #8
  401d60:	f7fe fe8c 	bl	400a7c <memset>
  401d64:	9b01      	ldr	r3, [sp, #4]
  401d66:	61ed      	str	r5, [r5, #28]
  401d68:	f8c5 b020 	str.w	fp, [r5, #32]
  401d6c:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
  401d70:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
  401d74:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
  401d78:	63bb      	str	r3, [r7, #56]	; 0x38
  401d7a:	b003      	add	sp, #12
  401d7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401d80:	00401c95 	.word	0x00401c95
  401d84:	004030dd 	.word	0x004030dd
  401d88:	00403101 	.word	0x00403101
  401d8c:	00403139 	.word	0x00403139
  401d90:	00403159 	.word	0x00403159

00401d94 <__sfp_lock_acquire>:
  401d94:	4770      	bx	lr
  401d96:	bf00      	nop

00401d98 <__sfp_lock_release>:
  401d98:	4770      	bx	lr
  401d9a:	bf00      	nop

00401d9c <__libc_fini_array>:
  401d9c:	b538      	push	{r3, r4, r5, lr}
  401d9e:	4d09      	ldr	r5, [pc, #36]	; (401dc4 <__libc_fini_array+0x28>)
  401da0:	4c09      	ldr	r4, [pc, #36]	; (401dc8 <__libc_fini_array+0x2c>)
  401da2:	1b64      	subs	r4, r4, r5
  401da4:	10a4      	asrs	r4, r4, #2
  401da6:	bf18      	it	ne
  401da8:	eb05 0584 	addne.w	r5, r5, r4, lsl #2
  401dac:	d005      	beq.n	401dba <__libc_fini_array+0x1e>
  401dae:	3c01      	subs	r4, #1
  401db0:	f855 3d04 	ldr.w	r3, [r5, #-4]!
  401db4:	4798      	blx	r3
  401db6:	2c00      	cmp	r4, #0
  401db8:	d1f9      	bne.n	401dae <__libc_fini_array+0x12>
  401dba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  401dbe:	f001 bed5 	b.w	403b6c <_fini>
  401dc2:	bf00      	nop
  401dc4:	00403b78 	.word	0x00403b78
  401dc8:	00403b7c 	.word	0x00403b7c

00401dcc <_fputwc_r>:
  401dcc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401dd0:	8993      	ldrh	r3, [r2, #12]
  401dd2:	460f      	mov	r7, r1
  401dd4:	0499      	lsls	r1, r3, #18
  401dd6:	b082      	sub	sp, #8
  401dd8:	4614      	mov	r4, r2
  401dda:	4680      	mov	r8, r0
  401ddc:	d406      	bmi.n	401dec <_fputwc_r+0x20>
  401dde:	6e52      	ldr	r2, [r2, #100]	; 0x64
  401de0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
  401de4:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  401de8:	81a3      	strh	r3, [r4, #12]
  401dea:	6662      	str	r2, [r4, #100]	; 0x64
  401dec:	f000 fb1e 	bl	40242c <__locale_mb_cur_max>
  401df0:	2801      	cmp	r0, #1
  401df2:	d03d      	beq.n	401e70 <_fputwc_r+0xa4>
  401df4:	463a      	mov	r2, r7
  401df6:	4640      	mov	r0, r8
  401df8:	a901      	add	r1, sp, #4
  401dfa:	f104 035c 	add.w	r3, r4, #92	; 0x5c
  401dfe:	f001 fa03 	bl	403208 <_wcrtomb_r>
  401e02:	1c42      	adds	r2, r0, #1
  401e04:	4606      	mov	r6, r0
  401e06:	d02c      	beq.n	401e62 <_fputwc_r+0x96>
  401e08:	2800      	cmp	r0, #0
  401e0a:	d039      	beq.n	401e80 <_fputwc_r+0xb4>
  401e0c:	f89d 1004 	ldrb.w	r1, [sp, #4]
  401e10:	2500      	movs	r5, #0
  401e12:	e009      	b.n	401e28 <_fputwc_r+0x5c>
  401e14:	6823      	ldr	r3, [r4, #0]
  401e16:	7019      	strb	r1, [r3, #0]
  401e18:	6823      	ldr	r3, [r4, #0]
  401e1a:	3301      	adds	r3, #1
  401e1c:	6023      	str	r3, [r4, #0]
  401e1e:	3501      	adds	r5, #1
  401e20:	42b5      	cmp	r5, r6
  401e22:	d22d      	bcs.n	401e80 <_fputwc_r+0xb4>
  401e24:	ab01      	add	r3, sp, #4
  401e26:	5ce9      	ldrb	r1, [r5, r3]
  401e28:	68a3      	ldr	r3, [r4, #8]
  401e2a:	3b01      	subs	r3, #1
  401e2c:	2b00      	cmp	r3, #0
  401e2e:	60a3      	str	r3, [r4, #8]
  401e30:	daf0      	bge.n	401e14 <_fputwc_r+0x48>
  401e32:	69a2      	ldr	r2, [r4, #24]
  401e34:	4293      	cmp	r3, r2
  401e36:	db05      	blt.n	401e44 <_fputwc_r+0x78>
  401e38:	6823      	ldr	r3, [r4, #0]
  401e3a:	7019      	strb	r1, [r3, #0]
  401e3c:	6823      	ldr	r3, [r4, #0]
  401e3e:	7819      	ldrb	r1, [r3, #0]
  401e40:	290a      	cmp	r1, #10
  401e42:	d1ea      	bne.n	401e1a <_fputwc_r+0x4e>
  401e44:	4640      	mov	r0, r8
  401e46:	4622      	mov	r2, r4
  401e48:	f001 f98a 	bl	403160 <__swbuf_r>
  401e4c:	f1b0 33ff 	subs.w	r3, r0, #4294967295
  401e50:	4258      	negs	r0, r3
  401e52:	4158      	adcs	r0, r3
  401e54:	2800      	cmp	r0, #0
  401e56:	d0e2      	beq.n	401e1e <_fputwc_r+0x52>
  401e58:	f04f 30ff 	mov.w	r0, #4294967295
  401e5c:	b002      	add	sp, #8
  401e5e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401e62:	89a3      	ldrh	r3, [r4, #12]
  401e64:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  401e68:	81a3      	strh	r3, [r4, #12]
  401e6a:	b002      	add	sp, #8
  401e6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401e70:	1e7b      	subs	r3, r7, #1
  401e72:	2bfe      	cmp	r3, #254	; 0xfe
  401e74:	d8be      	bhi.n	401df4 <_fputwc_r+0x28>
  401e76:	b2f9      	uxtb	r1, r7
  401e78:	4606      	mov	r6, r0
  401e7a:	f88d 1004 	strb.w	r1, [sp, #4]
  401e7e:	e7c7      	b.n	401e10 <_fputwc_r+0x44>
  401e80:	4638      	mov	r0, r7
  401e82:	b002      	add	sp, #8
  401e84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00401e88 <_malloc_trim_r>:
  401e88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  401e8a:	4d23      	ldr	r5, [pc, #140]	; (401f18 <_malloc_trim_r+0x90>)
  401e8c:	460f      	mov	r7, r1
  401e8e:	4604      	mov	r4, r0
  401e90:	f000 ff28 	bl	402ce4 <__malloc_lock>
  401e94:	68ab      	ldr	r3, [r5, #8]
  401e96:	685e      	ldr	r6, [r3, #4]
  401e98:	f026 0603 	bic.w	r6, r6, #3
  401e9c:	1bf1      	subs	r1, r6, r7
  401e9e:	f601 71ef 	addw	r1, r1, #4079	; 0xfef
  401ea2:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  401ea6:	f021 010f 	bic.w	r1, r1, #15
  401eaa:	f5a1 5780 	sub.w	r7, r1, #4096	; 0x1000
  401eae:	f5b7 5f80 	cmp.w	r7, #4096	; 0x1000
  401eb2:	db07      	blt.n	401ec4 <_malloc_trim_r+0x3c>
  401eb4:	4620      	mov	r0, r4
  401eb6:	2100      	movs	r1, #0
  401eb8:	f001 f8fe 	bl	4030b8 <_sbrk_r>
  401ebc:	68ab      	ldr	r3, [r5, #8]
  401ebe:	4433      	add	r3, r6
  401ec0:	4298      	cmp	r0, r3
  401ec2:	d004      	beq.n	401ece <_malloc_trim_r+0x46>
  401ec4:	4620      	mov	r0, r4
  401ec6:	f000 ff0f 	bl	402ce8 <__malloc_unlock>
  401eca:	2000      	movs	r0, #0
  401ecc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  401ece:	4620      	mov	r0, r4
  401ed0:	4279      	negs	r1, r7
  401ed2:	f001 f8f1 	bl	4030b8 <_sbrk_r>
  401ed6:	3001      	adds	r0, #1
  401ed8:	d00d      	beq.n	401ef6 <_malloc_trim_r+0x6e>
  401eda:	4b10      	ldr	r3, [pc, #64]	; (401f1c <_malloc_trim_r+0x94>)
  401edc:	68aa      	ldr	r2, [r5, #8]
  401ede:	6819      	ldr	r1, [r3, #0]
  401ee0:	1bf6      	subs	r6, r6, r7
  401ee2:	f046 0601 	orr.w	r6, r6, #1
  401ee6:	4620      	mov	r0, r4
  401ee8:	1bc9      	subs	r1, r1, r7
  401eea:	6056      	str	r6, [r2, #4]
  401eec:	6019      	str	r1, [r3, #0]
  401eee:	f000 fefb 	bl	402ce8 <__malloc_unlock>
  401ef2:	2001      	movs	r0, #1
  401ef4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  401ef6:	4620      	mov	r0, r4
  401ef8:	2100      	movs	r1, #0
  401efa:	f001 f8dd 	bl	4030b8 <_sbrk_r>
  401efe:	68ab      	ldr	r3, [r5, #8]
  401f00:	1ac2      	subs	r2, r0, r3
  401f02:	2a0f      	cmp	r2, #15
  401f04:	ddde      	ble.n	401ec4 <_malloc_trim_r+0x3c>
  401f06:	4d06      	ldr	r5, [pc, #24]	; (401f20 <_malloc_trim_r+0x98>)
  401f08:	4904      	ldr	r1, [pc, #16]	; (401f1c <_malloc_trim_r+0x94>)
  401f0a:	682d      	ldr	r5, [r5, #0]
  401f0c:	f042 0201 	orr.w	r2, r2, #1
  401f10:	1b40      	subs	r0, r0, r5
  401f12:	605a      	str	r2, [r3, #4]
  401f14:	6008      	str	r0, [r1, #0]
  401f16:	e7d5      	b.n	401ec4 <_malloc_trim_r+0x3c>
  401f18:	20000458 	.word	0x20000458
  401f1c:	20000898 	.word	0x20000898
  401f20:	20000864 	.word	0x20000864

00401f24 <_free_r>:
  401f24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401f28:	460d      	mov	r5, r1
  401f2a:	4606      	mov	r6, r0
  401f2c:	2900      	cmp	r1, #0
  401f2e:	d055      	beq.n	401fdc <_free_r+0xb8>
  401f30:	f000 fed8 	bl	402ce4 <__malloc_lock>
  401f34:	f855 1c04 	ldr.w	r1, [r5, #-4]
  401f38:	f8df c174 	ldr.w	ip, [pc, #372]	; 4020b0 <_free_r+0x18c>
  401f3c:	f021 0301 	bic.w	r3, r1, #1
  401f40:	f1a5 0408 	sub.w	r4, r5, #8
  401f44:	18e2      	adds	r2, r4, r3
  401f46:	f8dc 0008 	ldr.w	r0, [ip, #8]
  401f4a:	6857      	ldr	r7, [r2, #4]
  401f4c:	4290      	cmp	r0, r2
  401f4e:	f027 0703 	bic.w	r7, r7, #3
  401f52:	d069      	beq.n	402028 <_free_r+0x104>
  401f54:	f011 0101 	ands.w	r1, r1, #1
  401f58:	6057      	str	r7, [r2, #4]
  401f5a:	d032      	beq.n	401fc2 <_free_r+0x9e>
  401f5c:	2100      	movs	r1, #0
  401f5e:	19d0      	adds	r0, r2, r7
  401f60:	6840      	ldr	r0, [r0, #4]
  401f62:	07c0      	lsls	r0, r0, #31
  401f64:	d406      	bmi.n	401f74 <_free_r+0x50>
  401f66:	443b      	add	r3, r7
  401f68:	6890      	ldr	r0, [r2, #8]
  401f6a:	2900      	cmp	r1, #0
  401f6c:	d04e      	beq.n	40200c <_free_r+0xe8>
  401f6e:	68d2      	ldr	r2, [r2, #12]
  401f70:	60c2      	str	r2, [r0, #12]
  401f72:	6090      	str	r0, [r2, #8]
  401f74:	f043 0201 	orr.w	r2, r3, #1
  401f78:	6062      	str	r2, [r4, #4]
  401f7a:	50e3      	str	r3, [r4, r3]
  401f7c:	b9e1      	cbnz	r1, 401fb8 <_free_r+0x94>
  401f7e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  401f82:	d32d      	bcc.n	401fe0 <_free_r+0xbc>
  401f84:	0a5a      	lsrs	r2, r3, #9
  401f86:	2a04      	cmp	r2, #4
  401f88:	d86a      	bhi.n	402060 <_free_r+0x13c>
  401f8a:	0998      	lsrs	r0, r3, #6
  401f8c:	3038      	adds	r0, #56	; 0x38
  401f8e:	0041      	lsls	r1, r0, #1
  401f90:	eb0c 0c81 	add.w	ip, ip, r1, lsl #2
  401f94:	4946      	ldr	r1, [pc, #280]	; (4020b0 <_free_r+0x18c>)
  401f96:	f8dc 2008 	ldr.w	r2, [ip, #8]
  401f9a:	4562      	cmp	r2, ip
  401f9c:	d066      	beq.n	40206c <_free_r+0x148>
  401f9e:	6851      	ldr	r1, [r2, #4]
  401fa0:	f021 0103 	bic.w	r1, r1, #3
  401fa4:	428b      	cmp	r3, r1
  401fa6:	d202      	bcs.n	401fae <_free_r+0x8a>
  401fa8:	6892      	ldr	r2, [r2, #8]
  401faa:	4594      	cmp	ip, r2
  401fac:	d1f7      	bne.n	401f9e <_free_r+0x7a>
  401fae:	68d3      	ldr	r3, [r2, #12]
  401fb0:	60e3      	str	r3, [r4, #12]
  401fb2:	60a2      	str	r2, [r4, #8]
  401fb4:	609c      	str	r4, [r3, #8]
  401fb6:	60d4      	str	r4, [r2, #12]
  401fb8:	4630      	mov	r0, r6
  401fba:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  401fbe:	f000 be93 	b.w	402ce8 <__malloc_unlock>
  401fc2:	f855 5c08 	ldr.w	r5, [r5, #-8]
  401fc6:	1b64      	subs	r4, r4, r5
  401fc8:	f10c 0808 	add.w	r8, ip, #8
  401fcc:	68a0      	ldr	r0, [r4, #8]
  401fce:	4540      	cmp	r0, r8
  401fd0:	442b      	add	r3, r5
  401fd2:	d043      	beq.n	40205c <_free_r+0x138>
  401fd4:	68e5      	ldr	r5, [r4, #12]
  401fd6:	60c5      	str	r5, [r0, #12]
  401fd8:	60a8      	str	r0, [r5, #8]
  401fda:	e7c0      	b.n	401f5e <_free_r+0x3a>
  401fdc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  401fe0:	08db      	lsrs	r3, r3, #3
  401fe2:	eb0c 02c3 	add.w	r2, ip, r3, lsl #3
  401fe6:	2501      	movs	r5, #1
  401fe8:	f8dc 0004 	ldr.w	r0, [ip, #4]
  401fec:	6891      	ldr	r1, [r2, #8]
  401fee:	60a1      	str	r1, [r4, #8]
  401ff0:	109b      	asrs	r3, r3, #2
  401ff2:	fa05 f303 	lsl.w	r3, r5, r3
  401ff6:	4318      	orrs	r0, r3
  401ff8:	60e2      	str	r2, [r4, #12]
  401ffa:	f8cc 0004 	str.w	r0, [ip, #4]
  401ffe:	6094      	str	r4, [r2, #8]
  402000:	4630      	mov	r0, r6
  402002:	60cc      	str	r4, [r1, #12]
  402004:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  402008:	f000 be6e 	b.w	402ce8 <__malloc_unlock>
  40200c:	4d29      	ldr	r5, [pc, #164]	; (4020b4 <_free_r+0x190>)
  40200e:	42a8      	cmp	r0, r5
  402010:	d1ad      	bne.n	401f6e <_free_r+0x4a>
  402012:	f043 0201 	orr.w	r2, r3, #1
  402016:	f8cc 4014 	str.w	r4, [ip, #20]
  40201a:	f8cc 4010 	str.w	r4, [ip, #16]
  40201e:	60e0      	str	r0, [r4, #12]
  402020:	60a0      	str	r0, [r4, #8]
  402022:	6062      	str	r2, [r4, #4]
  402024:	50e3      	str	r3, [r4, r3]
  402026:	e7c7      	b.n	401fb8 <_free_r+0x94>
  402028:	441f      	add	r7, r3
  40202a:	07cb      	lsls	r3, r1, #31
  40202c:	d407      	bmi.n	40203e <_free_r+0x11a>
  40202e:	f855 3c08 	ldr.w	r3, [r5, #-8]
  402032:	1ae4      	subs	r4, r4, r3
  402034:	441f      	add	r7, r3
  402036:	68a2      	ldr	r2, [r4, #8]
  402038:	68e3      	ldr	r3, [r4, #12]
  40203a:	60d3      	str	r3, [r2, #12]
  40203c:	609a      	str	r2, [r3, #8]
  40203e:	4b1e      	ldr	r3, [pc, #120]	; (4020b8 <_free_r+0x194>)
  402040:	681b      	ldr	r3, [r3, #0]
  402042:	f047 0201 	orr.w	r2, r7, #1
  402046:	429f      	cmp	r7, r3
  402048:	6062      	str	r2, [r4, #4]
  40204a:	f8cc 4008 	str.w	r4, [ip, #8]
  40204e:	d3b3      	bcc.n	401fb8 <_free_r+0x94>
  402050:	4b1a      	ldr	r3, [pc, #104]	; (4020bc <_free_r+0x198>)
  402052:	4630      	mov	r0, r6
  402054:	6819      	ldr	r1, [r3, #0]
  402056:	f7ff ff17 	bl	401e88 <_malloc_trim_r>
  40205a:	e7ad      	b.n	401fb8 <_free_r+0x94>
  40205c:	2101      	movs	r1, #1
  40205e:	e77e      	b.n	401f5e <_free_r+0x3a>
  402060:	2a14      	cmp	r2, #20
  402062:	d80c      	bhi.n	40207e <_free_r+0x15a>
  402064:	f102 005b 	add.w	r0, r2, #91	; 0x5b
  402068:	0041      	lsls	r1, r0, #1
  40206a:	e791      	b.n	401f90 <_free_r+0x6c>
  40206c:	684b      	ldr	r3, [r1, #4]
  40206e:	1080      	asrs	r0, r0, #2
  402070:	2501      	movs	r5, #1
  402072:	fa05 f000 	lsl.w	r0, r5, r0
  402076:	4303      	orrs	r3, r0
  402078:	604b      	str	r3, [r1, #4]
  40207a:	4613      	mov	r3, r2
  40207c:	e798      	b.n	401fb0 <_free_r+0x8c>
  40207e:	2a54      	cmp	r2, #84	; 0x54
  402080:	d803      	bhi.n	40208a <_free_r+0x166>
  402082:	0b18      	lsrs	r0, r3, #12
  402084:	306e      	adds	r0, #110	; 0x6e
  402086:	0041      	lsls	r1, r0, #1
  402088:	e782      	b.n	401f90 <_free_r+0x6c>
  40208a:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  40208e:	d803      	bhi.n	402098 <_free_r+0x174>
  402090:	0bd8      	lsrs	r0, r3, #15
  402092:	3077      	adds	r0, #119	; 0x77
  402094:	0041      	lsls	r1, r0, #1
  402096:	e77b      	b.n	401f90 <_free_r+0x6c>
  402098:	f240 5154 	movw	r1, #1364	; 0x554
  40209c:	428a      	cmp	r2, r1
  40209e:	d803      	bhi.n	4020a8 <_free_r+0x184>
  4020a0:	0c98      	lsrs	r0, r3, #18
  4020a2:	307c      	adds	r0, #124	; 0x7c
  4020a4:	0041      	lsls	r1, r0, #1
  4020a6:	e773      	b.n	401f90 <_free_r+0x6c>
  4020a8:	21fc      	movs	r1, #252	; 0xfc
  4020aa:	207e      	movs	r0, #126	; 0x7e
  4020ac:	e770      	b.n	401f90 <_free_r+0x6c>
  4020ae:	bf00      	nop
  4020b0:	20000458 	.word	0x20000458
  4020b4:	20000460 	.word	0x20000460
  4020b8:	20000860 	.word	0x20000860
  4020bc:	20000894 	.word	0x20000894

004020c0 <__sfvwrite_r>:
  4020c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4020c4:	6893      	ldr	r3, [r2, #8]
  4020c6:	b083      	sub	sp, #12
  4020c8:	4616      	mov	r6, r2
  4020ca:	4681      	mov	r9, r0
  4020cc:	460c      	mov	r4, r1
  4020ce:	b32b      	cbz	r3, 40211c <__sfvwrite_r+0x5c>
  4020d0:	898b      	ldrh	r3, [r1, #12]
  4020d2:	0719      	lsls	r1, r3, #28
  4020d4:	d526      	bpl.n	402124 <__sfvwrite_r+0x64>
  4020d6:	6922      	ldr	r2, [r4, #16]
  4020d8:	b322      	cbz	r2, 402124 <__sfvwrite_r+0x64>
  4020da:	f003 0202 	and.w	r2, r3, #2
  4020de:	b292      	uxth	r2, r2
  4020e0:	6835      	ldr	r5, [r6, #0]
  4020e2:	2a00      	cmp	r2, #0
  4020e4:	d02c      	beq.n	402140 <__sfvwrite_r+0x80>
  4020e6:	f04f 0a00 	mov.w	sl, #0
  4020ea:	f8df b2e8 	ldr.w	fp, [pc, #744]	; 4023d4 <__sfvwrite_r+0x314>
  4020ee:	46d0      	mov	r8, sl
  4020f0:	45d8      	cmp	r8, fp
  4020f2:	bf34      	ite	cc
  4020f4:	4643      	movcc	r3, r8
  4020f6:	465b      	movcs	r3, fp
  4020f8:	4652      	mov	r2, sl
  4020fa:	4648      	mov	r0, r9
  4020fc:	f1b8 0f00 	cmp.w	r8, #0
  402100:	d04f      	beq.n	4021a2 <__sfvwrite_r+0xe2>
  402102:	69e1      	ldr	r1, [r4, #28]
  402104:	6a67      	ldr	r7, [r4, #36]	; 0x24
  402106:	47b8      	blx	r7
  402108:	2800      	cmp	r0, #0
  40210a:	dd56      	ble.n	4021ba <__sfvwrite_r+0xfa>
  40210c:	68b3      	ldr	r3, [r6, #8]
  40210e:	1a1b      	subs	r3, r3, r0
  402110:	4482      	add	sl, r0
  402112:	ebc0 0808 	rsb	r8, r0, r8
  402116:	60b3      	str	r3, [r6, #8]
  402118:	2b00      	cmp	r3, #0
  40211a:	d1e9      	bne.n	4020f0 <__sfvwrite_r+0x30>
  40211c:	2000      	movs	r0, #0
  40211e:	b003      	add	sp, #12
  402120:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402124:	4648      	mov	r0, r9
  402126:	4621      	mov	r1, r4
  402128:	f7ff fc82 	bl	401a30 <__swsetup_r>
  40212c:	2800      	cmp	r0, #0
  40212e:	f040 8148 	bne.w	4023c2 <__sfvwrite_r+0x302>
  402132:	89a3      	ldrh	r3, [r4, #12]
  402134:	6835      	ldr	r5, [r6, #0]
  402136:	f003 0202 	and.w	r2, r3, #2
  40213a:	b292      	uxth	r2, r2
  40213c:	2a00      	cmp	r2, #0
  40213e:	d1d2      	bne.n	4020e6 <__sfvwrite_r+0x26>
  402140:	f013 0a01 	ands.w	sl, r3, #1
  402144:	d142      	bne.n	4021cc <__sfvwrite_r+0x10c>
  402146:	46d0      	mov	r8, sl
  402148:	f1b8 0f00 	cmp.w	r8, #0
  40214c:	d023      	beq.n	402196 <__sfvwrite_r+0xd6>
  40214e:	059a      	lsls	r2, r3, #22
  402150:	68a7      	ldr	r7, [r4, #8]
  402152:	d576      	bpl.n	402242 <__sfvwrite_r+0x182>
  402154:	45b8      	cmp	r8, r7
  402156:	f0c0 80a4 	bcc.w	4022a2 <__sfvwrite_r+0x1e2>
  40215a:	f413 6f90 	tst.w	r3, #1152	; 0x480
  40215e:	f040 80b2 	bne.w	4022c6 <__sfvwrite_r+0x206>
  402162:	6820      	ldr	r0, [r4, #0]
  402164:	46bb      	mov	fp, r7
  402166:	4651      	mov	r1, sl
  402168:	465a      	mov	r2, fp
  40216a:	f000 fd5b 	bl	402c24 <memmove>
  40216e:	68a2      	ldr	r2, [r4, #8]
  402170:	6821      	ldr	r1, [r4, #0]
  402172:	1bd2      	subs	r2, r2, r7
  402174:	eb01 030b 	add.w	r3, r1, fp
  402178:	60a2      	str	r2, [r4, #8]
  40217a:	6023      	str	r3, [r4, #0]
  40217c:	4642      	mov	r2, r8
  40217e:	68b3      	ldr	r3, [r6, #8]
  402180:	1a9b      	subs	r3, r3, r2
  402182:	4492      	add	sl, r2
  402184:	ebc2 0808 	rsb	r8, r2, r8
  402188:	60b3      	str	r3, [r6, #8]
  40218a:	2b00      	cmp	r3, #0
  40218c:	d0c6      	beq.n	40211c <__sfvwrite_r+0x5c>
  40218e:	89a3      	ldrh	r3, [r4, #12]
  402190:	f1b8 0f00 	cmp.w	r8, #0
  402194:	d1db      	bne.n	40214e <__sfvwrite_r+0x8e>
  402196:	f8d5 a000 	ldr.w	sl, [r5]
  40219a:	f8d5 8004 	ldr.w	r8, [r5, #4]
  40219e:	3508      	adds	r5, #8
  4021a0:	e7d2      	b.n	402148 <__sfvwrite_r+0x88>
  4021a2:	f8d5 a000 	ldr.w	sl, [r5]
  4021a6:	f8d5 8004 	ldr.w	r8, [r5, #4]
  4021aa:	3508      	adds	r5, #8
  4021ac:	e7a0      	b.n	4020f0 <__sfvwrite_r+0x30>
  4021ae:	4648      	mov	r0, r9
  4021b0:	4621      	mov	r1, r4
  4021b2:	f7ff fd59 	bl	401c68 <_fflush_r>
  4021b6:	2800      	cmp	r0, #0
  4021b8:	d059      	beq.n	40226e <__sfvwrite_r+0x1ae>
  4021ba:	89a3      	ldrh	r3, [r4, #12]
  4021bc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4021c0:	f04f 30ff 	mov.w	r0, #4294967295
  4021c4:	81a3      	strh	r3, [r4, #12]
  4021c6:	b003      	add	sp, #12
  4021c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4021cc:	4692      	mov	sl, r2
  4021ce:	9201      	str	r2, [sp, #4]
  4021d0:	4693      	mov	fp, r2
  4021d2:	4690      	mov	r8, r2
  4021d4:	f1b8 0f00 	cmp.w	r8, #0
  4021d8:	d02b      	beq.n	402232 <__sfvwrite_r+0x172>
  4021da:	9f01      	ldr	r7, [sp, #4]
  4021dc:	2f00      	cmp	r7, #0
  4021de:	d064      	beq.n	4022aa <__sfvwrite_r+0x1ea>
  4021e0:	6820      	ldr	r0, [r4, #0]
  4021e2:	6921      	ldr	r1, [r4, #16]
  4021e4:	f8d4 c008 	ldr.w	ip, [r4, #8]
  4021e8:	6962      	ldr	r2, [r4, #20]
  4021ea:	45c2      	cmp	sl, r8
  4021ec:	bf34      	ite	cc
  4021ee:	4653      	movcc	r3, sl
  4021f0:	4643      	movcs	r3, r8
  4021f2:	4288      	cmp	r0, r1
  4021f4:	461f      	mov	r7, r3
  4021f6:	d903      	bls.n	402200 <__sfvwrite_r+0x140>
  4021f8:	4494      	add	ip, r2
  4021fa:	4563      	cmp	r3, ip
  4021fc:	f300 80ae 	bgt.w	40235c <__sfvwrite_r+0x29c>
  402200:	4293      	cmp	r3, r2
  402202:	db36      	blt.n	402272 <__sfvwrite_r+0x1b2>
  402204:	4613      	mov	r3, r2
  402206:	6a67      	ldr	r7, [r4, #36]	; 0x24
  402208:	69e1      	ldr	r1, [r4, #28]
  40220a:	4648      	mov	r0, r9
  40220c:	465a      	mov	r2, fp
  40220e:	47b8      	blx	r7
  402210:	1e07      	subs	r7, r0, #0
  402212:	ddd2      	ble.n	4021ba <__sfvwrite_r+0xfa>
  402214:	ebba 0a07 	subs.w	sl, sl, r7
  402218:	d03a      	beq.n	402290 <__sfvwrite_r+0x1d0>
  40221a:	68b3      	ldr	r3, [r6, #8]
  40221c:	1bdb      	subs	r3, r3, r7
  40221e:	44bb      	add	fp, r7
  402220:	ebc7 0808 	rsb	r8, r7, r8
  402224:	60b3      	str	r3, [r6, #8]
  402226:	2b00      	cmp	r3, #0
  402228:	f43f af78 	beq.w	40211c <__sfvwrite_r+0x5c>
  40222c:	f1b8 0f00 	cmp.w	r8, #0
  402230:	d1d3      	bne.n	4021da <__sfvwrite_r+0x11a>
  402232:	2700      	movs	r7, #0
  402234:	f8d5 b000 	ldr.w	fp, [r5]
  402238:	f8d5 8004 	ldr.w	r8, [r5, #4]
  40223c:	9701      	str	r7, [sp, #4]
  40223e:	3508      	adds	r5, #8
  402240:	e7c8      	b.n	4021d4 <__sfvwrite_r+0x114>
  402242:	6820      	ldr	r0, [r4, #0]
  402244:	6923      	ldr	r3, [r4, #16]
  402246:	4298      	cmp	r0, r3
  402248:	d802      	bhi.n	402250 <__sfvwrite_r+0x190>
  40224a:	6963      	ldr	r3, [r4, #20]
  40224c:	4598      	cmp	r8, r3
  40224e:	d272      	bcs.n	402336 <__sfvwrite_r+0x276>
  402250:	45b8      	cmp	r8, r7
  402252:	bf38      	it	cc
  402254:	4647      	movcc	r7, r8
  402256:	463a      	mov	r2, r7
  402258:	4651      	mov	r1, sl
  40225a:	f000 fce3 	bl	402c24 <memmove>
  40225e:	68a3      	ldr	r3, [r4, #8]
  402260:	6822      	ldr	r2, [r4, #0]
  402262:	1bdb      	subs	r3, r3, r7
  402264:	443a      	add	r2, r7
  402266:	60a3      	str	r3, [r4, #8]
  402268:	6022      	str	r2, [r4, #0]
  40226a:	2b00      	cmp	r3, #0
  40226c:	d09f      	beq.n	4021ae <__sfvwrite_r+0xee>
  40226e:	463a      	mov	r2, r7
  402270:	e785      	b.n	40217e <__sfvwrite_r+0xbe>
  402272:	461a      	mov	r2, r3
  402274:	4659      	mov	r1, fp
  402276:	9300      	str	r3, [sp, #0]
  402278:	f000 fcd4 	bl	402c24 <memmove>
  40227c:	9b00      	ldr	r3, [sp, #0]
  40227e:	68a1      	ldr	r1, [r4, #8]
  402280:	6822      	ldr	r2, [r4, #0]
  402282:	1ac9      	subs	r1, r1, r3
  402284:	ebba 0a07 	subs.w	sl, sl, r7
  402288:	4413      	add	r3, r2
  40228a:	60a1      	str	r1, [r4, #8]
  40228c:	6023      	str	r3, [r4, #0]
  40228e:	d1c4      	bne.n	40221a <__sfvwrite_r+0x15a>
  402290:	4648      	mov	r0, r9
  402292:	4621      	mov	r1, r4
  402294:	f7ff fce8 	bl	401c68 <_fflush_r>
  402298:	2800      	cmp	r0, #0
  40229a:	d18e      	bne.n	4021ba <__sfvwrite_r+0xfa>
  40229c:	f8cd a004 	str.w	sl, [sp, #4]
  4022a0:	e7bb      	b.n	40221a <__sfvwrite_r+0x15a>
  4022a2:	6820      	ldr	r0, [r4, #0]
  4022a4:	4647      	mov	r7, r8
  4022a6:	46c3      	mov	fp, r8
  4022a8:	e75d      	b.n	402166 <__sfvwrite_r+0xa6>
  4022aa:	4658      	mov	r0, fp
  4022ac:	210a      	movs	r1, #10
  4022ae:	4642      	mov	r2, r8
  4022b0:	f000 fbd6 	bl	402a60 <memchr>
  4022b4:	2800      	cmp	r0, #0
  4022b6:	d07f      	beq.n	4023b8 <__sfvwrite_r+0x2f8>
  4022b8:	f100 0a01 	add.w	sl, r0, #1
  4022bc:	2701      	movs	r7, #1
  4022be:	ebcb 0a0a 	rsb	sl, fp, sl
  4022c2:	9701      	str	r7, [sp, #4]
  4022c4:	e78c      	b.n	4021e0 <__sfvwrite_r+0x120>
  4022c6:	6822      	ldr	r2, [r4, #0]
  4022c8:	6921      	ldr	r1, [r4, #16]
  4022ca:	6967      	ldr	r7, [r4, #20]
  4022cc:	ebc1 0c02 	rsb	ip, r1, r2
  4022d0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
  4022d4:	f10c 0201 	add.w	r2, ip, #1
  4022d8:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
  4022dc:	4442      	add	r2, r8
  4022de:	107f      	asrs	r7, r7, #1
  4022e0:	4297      	cmp	r7, r2
  4022e2:	bf34      	ite	cc
  4022e4:	4617      	movcc	r7, r2
  4022e6:	463a      	movcs	r2, r7
  4022e8:	055b      	lsls	r3, r3, #21
  4022ea:	d54f      	bpl.n	40238c <__sfvwrite_r+0x2cc>
  4022ec:	4611      	mov	r1, r2
  4022ee:	4648      	mov	r0, r9
  4022f0:	f8cd c000 	str.w	ip, [sp]
  4022f4:	f000 f918 	bl	402528 <_malloc_r>
  4022f8:	f8dd c000 	ldr.w	ip, [sp]
  4022fc:	4683      	mov	fp, r0
  4022fe:	2800      	cmp	r0, #0
  402300:	d062      	beq.n	4023c8 <__sfvwrite_r+0x308>
  402302:	4662      	mov	r2, ip
  402304:	6921      	ldr	r1, [r4, #16]
  402306:	f8cd c000 	str.w	ip, [sp]
  40230a:	f000 fbf1 	bl	402af0 <memcpy>
  40230e:	89a2      	ldrh	r2, [r4, #12]
  402310:	f8dd c000 	ldr.w	ip, [sp]
  402314:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  402318:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  40231c:	81a2      	strh	r2, [r4, #12]
  40231e:	eb0b 000c 	add.w	r0, fp, ip
  402322:	ebcc 0207 	rsb	r2, ip, r7
  402326:	f8c4 b010 	str.w	fp, [r4, #16]
  40232a:	6167      	str	r7, [r4, #20]
  40232c:	6020      	str	r0, [r4, #0]
  40232e:	60a2      	str	r2, [r4, #8]
  402330:	4647      	mov	r7, r8
  402332:	46c3      	mov	fp, r8
  402334:	e717      	b.n	402166 <__sfvwrite_r+0xa6>
  402336:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
  40233a:	4590      	cmp	r8, r2
  40233c:	bf38      	it	cc
  40233e:	4642      	movcc	r2, r8
  402340:	fb92 f2f3 	sdiv	r2, r2, r3
  402344:	fb02 f303 	mul.w	r3, r2, r3
  402348:	6a67      	ldr	r7, [r4, #36]	; 0x24
  40234a:	69e1      	ldr	r1, [r4, #28]
  40234c:	4648      	mov	r0, r9
  40234e:	4652      	mov	r2, sl
  402350:	47b8      	blx	r7
  402352:	2800      	cmp	r0, #0
  402354:	f77f af31 	ble.w	4021ba <__sfvwrite_r+0xfa>
  402358:	4602      	mov	r2, r0
  40235a:	e710      	b.n	40217e <__sfvwrite_r+0xbe>
  40235c:	4662      	mov	r2, ip
  40235e:	4659      	mov	r1, fp
  402360:	f8cd c000 	str.w	ip, [sp]
  402364:	f000 fc5e 	bl	402c24 <memmove>
  402368:	f8dd c000 	ldr.w	ip, [sp]
  40236c:	6823      	ldr	r3, [r4, #0]
  40236e:	4463      	add	r3, ip
  402370:	6023      	str	r3, [r4, #0]
  402372:	4648      	mov	r0, r9
  402374:	4621      	mov	r1, r4
  402376:	f8cd c000 	str.w	ip, [sp]
  40237a:	f7ff fc75 	bl	401c68 <_fflush_r>
  40237e:	f8dd c000 	ldr.w	ip, [sp]
  402382:	2800      	cmp	r0, #0
  402384:	f47f af19 	bne.w	4021ba <__sfvwrite_r+0xfa>
  402388:	4667      	mov	r7, ip
  40238a:	e743      	b.n	402214 <__sfvwrite_r+0x154>
  40238c:	4648      	mov	r0, r9
  40238e:	f8cd c000 	str.w	ip, [sp]
  402392:	f000 fcab 	bl	402cec <_realloc_r>
  402396:	f8dd c000 	ldr.w	ip, [sp]
  40239a:	4683      	mov	fp, r0
  40239c:	2800      	cmp	r0, #0
  40239e:	d1be      	bne.n	40231e <__sfvwrite_r+0x25e>
  4023a0:	4648      	mov	r0, r9
  4023a2:	6921      	ldr	r1, [r4, #16]
  4023a4:	f7ff fdbe 	bl	401f24 <_free_r>
  4023a8:	89a3      	ldrh	r3, [r4, #12]
  4023aa:	220c      	movs	r2, #12
  4023ac:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  4023b0:	b29b      	uxth	r3, r3
  4023b2:	f8c9 2000 	str.w	r2, [r9]
  4023b6:	e701      	b.n	4021bc <__sfvwrite_r+0xfc>
  4023b8:	2701      	movs	r7, #1
  4023ba:	f108 0a01 	add.w	sl, r8, #1
  4023be:	9701      	str	r7, [sp, #4]
  4023c0:	e70e      	b.n	4021e0 <__sfvwrite_r+0x120>
  4023c2:	f04f 30ff 	mov.w	r0, #4294967295
  4023c6:	e6aa      	b.n	40211e <__sfvwrite_r+0x5e>
  4023c8:	230c      	movs	r3, #12
  4023ca:	f8c9 3000 	str.w	r3, [r9]
  4023ce:	89a3      	ldrh	r3, [r4, #12]
  4023d0:	e6f4      	b.n	4021bc <__sfvwrite_r+0xfc>
  4023d2:	bf00      	nop
  4023d4:	7ffffc00 	.word	0x7ffffc00

004023d8 <_fwalk>:
  4023d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4023dc:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  4023e0:	4688      	mov	r8, r1
  4023e2:	d01a      	beq.n	40241a <_fwalk+0x42>
  4023e4:	2600      	movs	r6, #0
  4023e6:	687d      	ldr	r5, [r7, #4]
  4023e8:	68bc      	ldr	r4, [r7, #8]
  4023ea:	3d01      	subs	r5, #1
  4023ec:	d40f      	bmi.n	40240e <_fwalk+0x36>
  4023ee:	89a3      	ldrh	r3, [r4, #12]
  4023f0:	2b01      	cmp	r3, #1
  4023f2:	f105 35ff 	add.w	r5, r5, #4294967295
  4023f6:	d906      	bls.n	402406 <_fwalk+0x2e>
  4023f8:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  4023fc:	3301      	adds	r3, #1
  4023fe:	4620      	mov	r0, r4
  402400:	d001      	beq.n	402406 <_fwalk+0x2e>
  402402:	47c0      	blx	r8
  402404:	4306      	orrs	r6, r0
  402406:	1c6b      	adds	r3, r5, #1
  402408:	f104 0468 	add.w	r4, r4, #104	; 0x68
  40240c:	d1ef      	bne.n	4023ee <_fwalk+0x16>
  40240e:	683f      	ldr	r7, [r7, #0]
  402410:	2f00      	cmp	r7, #0
  402412:	d1e8      	bne.n	4023e6 <_fwalk+0xe>
  402414:	4630      	mov	r0, r6
  402416:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40241a:	463e      	mov	r6, r7
  40241c:	4630      	mov	r0, r6
  40241e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402422:	bf00      	nop

00402424 <__locale_charset>:
  402424:	4800      	ldr	r0, [pc, #0]	; (402428 <__locale_charset+0x4>)
  402426:	4770      	bx	lr
  402428:	20000434 	.word	0x20000434

0040242c <__locale_mb_cur_max>:
  40242c:	4b01      	ldr	r3, [pc, #4]	; (402434 <__locale_mb_cur_max+0x8>)
  40242e:	6818      	ldr	r0, [r3, #0]
  402430:	4770      	bx	lr
  402432:	bf00      	nop
  402434:	20000454 	.word	0x20000454

00402438 <__smakebuf_r>:
  402438:	b5f0      	push	{r4, r5, r6, r7, lr}
  40243a:	898b      	ldrh	r3, [r1, #12]
  40243c:	b29a      	uxth	r2, r3
  40243e:	0796      	lsls	r6, r2, #30
  402440:	b091      	sub	sp, #68	; 0x44
  402442:	460c      	mov	r4, r1
  402444:	4605      	mov	r5, r0
  402446:	d437      	bmi.n	4024b8 <__smakebuf_r+0x80>
  402448:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40244c:	2900      	cmp	r1, #0
  40244e:	db17      	blt.n	402480 <__smakebuf_r+0x48>
  402450:	aa01      	add	r2, sp, #4
  402452:	f000 ffd1 	bl	4033f8 <_fstat_r>
  402456:	2800      	cmp	r0, #0
  402458:	db10      	blt.n	40247c <__smakebuf_r+0x44>
  40245a:	9b02      	ldr	r3, [sp, #8]
  40245c:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  402460:	f5b3 5100 	subs.w	r1, r3, #8192	; 0x2000
  402464:	424f      	negs	r7, r1
  402466:	414f      	adcs	r7, r1
  402468:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
  40246c:	d02c      	beq.n	4024c8 <__smakebuf_r+0x90>
  40246e:	89a3      	ldrh	r3, [r4, #12]
  402470:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  402474:	81a3      	strh	r3, [r4, #12]
  402476:	f44f 6680 	mov.w	r6, #1024	; 0x400
  40247a:	e00b      	b.n	402494 <__smakebuf_r+0x5c>
  40247c:	89a3      	ldrh	r3, [r4, #12]
  40247e:	b29a      	uxth	r2, r3
  402480:	f012 0f80 	tst.w	r2, #128	; 0x80
  402484:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  402488:	81a3      	strh	r3, [r4, #12]
  40248a:	bf14      	ite	ne
  40248c:	2640      	movne	r6, #64	; 0x40
  40248e:	f44f 6680 	moveq.w	r6, #1024	; 0x400
  402492:	2700      	movs	r7, #0
  402494:	4628      	mov	r0, r5
  402496:	4631      	mov	r1, r6
  402498:	f000 f846 	bl	402528 <_malloc_r>
  40249c:	89a3      	ldrh	r3, [r4, #12]
  40249e:	2800      	cmp	r0, #0
  4024a0:	d029      	beq.n	4024f6 <__smakebuf_r+0xbe>
  4024a2:	4a1b      	ldr	r2, [pc, #108]	; (402510 <__smakebuf_r+0xd8>)
  4024a4:	63ea      	str	r2, [r5, #60]	; 0x3c
  4024a6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4024aa:	81a3      	strh	r3, [r4, #12]
  4024ac:	6020      	str	r0, [r4, #0]
  4024ae:	6120      	str	r0, [r4, #16]
  4024b0:	6166      	str	r6, [r4, #20]
  4024b2:	b9a7      	cbnz	r7, 4024de <__smakebuf_r+0xa6>
  4024b4:	b011      	add	sp, #68	; 0x44
  4024b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4024b8:	f101 0343 	add.w	r3, r1, #67	; 0x43
  4024bc:	2201      	movs	r2, #1
  4024be:	600b      	str	r3, [r1, #0]
  4024c0:	610b      	str	r3, [r1, #16]
  4024c2:	614a      	str	r2, [r1, #20]
  4024c4:	b011      	add	sp, #68	; 0x44
  4024c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4024c8:	4a12      	ldr	r2, [pc, #72]	; (402514 <__smakebuf_r+0xdc>)
  4024ca:	6aa3      	ldr	r3, [r4, #40]	; 0x28
  4024cc:	4293      	cmp	r3, r2
  4024ce:	d1ce      	bne.n	40246e <__smakebuf_r+0x36>
  4024d0:	89a3      	ldrh	r3, [r4, #12]
  4024d2:	f44f 6680 	mov.w	r6, #1024	; 0x400
  4024d6:	4333      	orrs	r3, r6
  4024d8:	81a3      	strh	r3, [r4, #12]
  4024da:	64e6      	str	r6, [r4, #76]	; 0x4c
  4024dc:	e7da      	b.n	402494 <__smakebuf_r+0x5c>
  4024de:	4628      	mov	r0, r5
  4024e0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  4024e4:	f000 ff9c 	bl	403420 <_isatty_r>
  4024e8:	2800      	cmp	r0, #0
  4024ea:	d0e3      	beq.n	4024b4 <__smakebuf_r+0x7c>
  4024ec:	89a3      	ldrh	r3, [r4, #12]
  4024ee:	f043 0301 	orr.w	r3, r3, #1
  4024f2:	81a3      	strh	r3, [r4, #12]
  4024f4:	e7de      	b.n	4024b4 <__smakebuf_r+0x7c>
  4024f6:	059a      	lsls	r2, r3, #22
  4024f8:	d4dc      	bmi.n	4024b4 <__smakebuf_r+0x7c>
  4024fa:	f104 0243 	add.w	r2, r4, #67	; 0x43
  4024fe:	f043 0302 	orr.w	r3, r3, #2
  402502:	2101      	movs	r1, #1
  402504:	81a3      	strh	r3, [r4, #12]
  402506:	6022      	str	r2, [r4, #0]
  402508:	6122      	str	r2, [r4, #16]
  40250a:	6161      	str	r1, [r4, #20]
  40250c:	e7d2      	b.n	4024b4 <__smakebuf_r+0x7c>
  40250e:	bf00      	nop
  402510:	00401c95 	.word	0x00401c95
  402514:	00403139 	.word	0x00403139

00402518 <malloc>:
  402518:	4b02      	ldr	r3, [pc, #8]	; (402524 <malloc+0xc>)
  40251a:	4601      	mov	r1, r0
  40251c:	6818      	ldr	r0, [r3, #0]
  40251e:	f000 b803 	b.w	402528 <_malloc_r>
  402522:	bf00      	nop
  402524:	20000430 	.word	0x20000430

00402528 <_malloc_r>:
  402528:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40252c:	f101 050b 	add.w	r5, r1, #11
  402530:	2d16      	cmp	r5, #22
  402532:	b083      	sub	sp, #12
  402534:	4606      	mov	r6, r0
  402536:	d927      	bls.n	402588 <_malloc_r+0x60>
  402538:	f035 0507 	bics.w	r5, r5, #7
  40253c:	d427      	bmi.n	40258e <_malloc_r+0x66>
  40253e:	42a9      	cmp	r1, r5
  402540:	d825      	bhi.n	40258e <_malloc_r+0x66>
  402542:	4630      	mov	r0, r6
  402544:	f000 fbce 	bl	402ce4 <__malloc_lock>
  402548:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
  40254c:	d226      	bcs.n	40259c <_malloc_r+0x74>
  40254e:	4fc1      	ldr	r7, [pc, #772]	; (402854 <_malloc_r+0x32c>)
  402550:	ea4f 0cd5 	mov.w	ip, r5, lsr #3
  402554:	eb07 03cc 	add.w	r3, r7, ip, lsl #3
  402558:	68dc      	ldr	r4, [r3, #12]
  40255a:	429c      	cmp	r4, r3
  40255c:	f000 81d2 	beq.w	402904 <_malloc_r+0x3dc>
  402560:	6863      	ldr	r3, [r4, #4]
  402562:	68e2      	ldr	r2, [r4, #12]
  402564:	68a1      	ldr	r1, [r4, #8]
  402566:	f023 0303 	bic.w	r3, r3, #3
  40256a:	4423      	add	r3, r4
  40256c:	4630      	mov	r0, r6
  40256e:	685d      	ldr	r5, [r3, #4]
  402570:	60ca      	str	r2, [r1, #12]
  402572:	f045 0501 	orr.w	r5, r5, #1
  402576:	6091      	str	r1, [r2, #8]
  402578:	605d      	str	r5, [r3, #4]
  40257a:	f000 fbb5 	bl	402ce8 <__malloc_unlock>
  40257e:	3408      	adds	r4, #8
  402580:	4620      	mov	r0, r4
  402582:	b003      	add	sp, #12
  402584:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402588:	2510      	movs	r5, #16
  40258a:	42a9      	cmp	r1, r5
  40258c:	d9d9      	bls.n	402542 <_malloc_r+0x1a>
  40258e:	2400      	movs	r4, #0
  402590:	230c      	movs	r3, #12
  402592:	4620      	mov	r0, r4
  402594:	6033      	str	r3, [r6, #0]
  402596:	b003      	add	sp, #12
  402598:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40259c:	ea5f 2c55 	movs.w	ip, r5, lsr #9
  4025a0:	f000 808a 	beq.w	4026b8 <_malloc_r+0x190>
  4025a4:	f1bc 0f04 	cmp.w	ip, #4
  4025a8:	f200 8160 	bhi.w	40286c <_malloc_r+0x344>
  4025ac:	ea4f 1c95 	mov.w	ip, r5, lsr #6
  4025b0:	f10c 0c38 	add.w	ip, ip, #56	; 0x38
  4025b4:	ea4f 014c 	mov.w	r1, ip, lsl #1
  4025b8:	4fa6      	ldr	r7, [pc, #664]	; (402854 <_malloc_r+0x32c>)
  4025ba:	eb07 0181 	add.w	r1, r7, r1, lsl #2
  4025be:	68cc      	ldr	r4, [r1, #12]
  4025c0:	42a1      	cmp	r1, r4
  4025c2:	d105      	bne.n	4025d0 <_malloc_r+0xa8>
  4025c4:	e00c      	b.n	4025e0 <_malloc_r+0xb8>
  4025c6:	2b00      	cmp	r3, #0
  4025c8:	da7a      	bge.n	4026c0 <_malloc_r+0x198>
  4025ca:	68e4      	ldr	r4, [r4, #12]
  4025cc:	42a1      	cmp	r1, r4
  4025ce:	d007      	beq.n	4025e0 <_malloc_r+0xb8>
  4025d0:	6862      	ldr	r2, [r4, #4]
  4025d2:	f022 0203 	bic.w	r2, r2, #3
  4025d6:	1b53      	subs	r3, r2, r5
  4025d8:	2b0f      	cmp	r3, #15
  4025da:	ddf4      	ble.n	4025c6 <_malloc_r+0x9e>
  4025dc:	f10c 3cff 	add.w	ip, ip, #4294967295
  4025e0:	f10c 0c01 	add.w	ip, ip, #1
  4025e4:	4b9b      	ldr	r3, [pc, #620]	; (402854 <_malloc_r+0x32c>)
  4025e6:	693c      	ldr	r4, [r7, #16]
  4025e8:	f103 0e08 	add.w	lr, r3, #8
  4025ec:	4574      	cmp	r4, lr
  4025ee:	f000 817e 	beq.w	4028ee <_malloc_r+0x3c6>
  4025f2:	6861      	ldr	r1, [r4, #4]
  4025f4:	f021 0103 	bic.w	r1, r1, #3
  4025f8:	1b4a      	subs	r2, r1, r5
  4025fa:	2a0f      	cmp	r2, #15
  4025fc:	f300 8164 	bgt.w	4028c8 <_malloc_r+0x3a0>
  402600:	2a00      	cmp	r2, #0
  402602:	f8c3 e014 	str.w	lr, [r3, #20]
  402606:	f8c3 e010 	str.w	lr, [r3, #16]
  40260a:	da6a      	bge.n	4026e2 <_malloc_r+0x1ba>
  40260c:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
  402610:	f080 813a 	bcs.w	402888 <_malloc_r+0x360>
  402614:	08c9      	lsrs	r1, r1, #3
  402616:	eb03 00c1 	add.w	r0, r3, r1, lsl #3
  40261a:	ea4f 08a1 	mov.w	r8, r1, asr #2
  40261e:	685a      	ldr	r2, [r3, #4]
  402620:	6881      	ldr	r1, [r0, #8]
  402622:	60a1      	str	r1, [r4, #8]
  402624:	f04f 0901 	mov.w	r9, #1
  402628:	fa09 f808 	lsl.w	r8, r9, r8
  40262c:	ea48 0202 	orr.w	r2, r8, r2
  402630:	60e0      	str	r0, [r4, #12]
  402632:	605a      	str	r2, [r3, #4]
  402634:	6084      	str	r4, [r0, #8]
  402636:	60cc      	str	r4, [r1, #12]
  402638:	ea4f 03ac 	mov.w	r3, ip, asr #2
  40263c:	2001      	movs	r0, #1
  40263e:	4098      	lsls	r0, r3
  402640:	4290      	cmp	r0, r2
  402642:	d85b      	bhi.n	4026fc <_malloc_r+0x1d4>
  402644:	4202      	tst	r2, r0
  402646:	d106      	bne.n	402656 <_malloc_r+0x12e>
  402648:	f02c 0c03 	bic.w	ip, ip, #3
  40264c:	0040      	lsls	r0, r0, #1
  40264e:	4202      	tst	r2, r0
  402650:	f10c 0c04 	add.w	ip, ip, #4
  402654:	d0fa      	beq.n	40264c <_malloc_r+0x124>
  402656:	eb07 08cc 	add.w	r8, r7, ip, lsl #3
  40265a:	4644      	mov	r4, r8
  40265c:	46e1      	mov	r9, ip
  40265e:	68e3      	ldr	r3, [r4, #12]
  402660:	429c      	cmp	r4, r3
  402662:	d107      	bne.n	402674 <_malloc_r+0x14c>
  402664:	e145      	b.n	4028f2 <_malloc_r+0x3ca>
  402666:	2a00      	cmp	r2, #0
  402668:	f280 8156 	bge.w	402918 <_malloc_r+0x3f0>
  40266c:	68db      	ldr	r3, [r3, #12]
  40266e:	429c      	cmp	r4, r3
  402670:	f000 813f 	beq.w	4028f2 <_malloc_r+0x3ca>
  402674:	6859      	ldr	r1, [r3, #4]
  402676:	f021 0103 	bic.w	r1, r1, #3
  40267a:	1b4a      	subs	r2, r1, r5
  40267c:	2a0f      	cmp	r2, #15
  40267e:	ddf2      	ble.n	402666 <_malloc_r+0x13e>
  402680:	461c      	mov	r4, r3
  402682:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  402686:	f854 8f08 	ldr.w	r8, [r4, #8]!
  40268a:	1959      	adds	r1, r3, r5
  40268c:	f045 0901 	orr.w	r9, r5, #1
  402690:	f042 0501 	orr.w	r5, r2, #1
  402694:	f8c3 9004 	str.w	r9, [r3, #4]
  402698:	4630      	mov	r0, r6
  40269a:	f8c8 c00c 	str.w	ip, [r8, #12]
  40269e:	f8cc 8008 	str.w	r8, [ip, #8]
  4026a2:	6179      	str	r1, [r7, #20]
  4026a4:	6139      	str	r1, [r7, #16]
  4026a6:	f8c1 e00c 	str.w	lr, [r1, #12]
  4026aa:	f8c1 e008 	str.w	lr, [r1, #8]
  4026ae:	604d      	str	r5, [r1, #4]
  4026b0:	508a      	str	r2, [r1, r2]
  4026b2:	f000 fb19 	bl	402ce8 <__malloc_unlock>
  4026b6:	e763      	b.n	402580 <_malloc_r+0x58>
  4026b8:	217e      	movs	r1, #126	; 0x7e
  4026ba:	f04f 0c3f 	mov.w	ip, #63	; 0x3f
  4026be:	e77b      	b.n	4025b8 <_malloc_r+0x90>
  4026c0:	4422      	add	r2, r4
  4026c2:	68e3      	ldr	r3, [r4, #12]
  4026c4:	6850      	ldr	r0, [r2, #4]
  4026c6:	68a1      	ldr	r1, [r4, #8]
  4026c8:	f040 0501 	orr.w	r5, r0, #1
  4026cc:	60cb      	str	r3, [r1, #12]
  4026ce:	4630      	mov	r0, r6
  4026d0:	6099      	str	r1, [r3, #8]
  4026d2:	6055      	str	r5, [r2, #4]
  4026d4:	f000 fb08 	bl	402ce8 <__malloc_unlock>
  4026d8:	3408      	adds	r4, #8
  4026da:	4620      	mov	r0, r4
  4026dc:	b003      	add	sp, #12
  4026de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4026e2:	4421      	add	r1, r4
  4026e4:	4630      	mov	r0, r6
  4026e6:	684b      	ldr	r3, [r1, #4]
  4026e8:	f043 0301 	orr.w	r3, r3, #1
  4026ec:	604b      	str	r3, [r1, #4]
  4026ee:	f000 fafb 	bl	402ce8 <__malloc_unlock>
  4026f2:	3408      	adds	r4, #8
  4026f4:	4620      	mov	r0, r4
  4026f6:	b003      	add	sp, #12
  4026f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4026fc:	68bc      	ldr	r4, [r7, #8]
  4026fe:	6863      	ldr	r3, [r4, #4]
  402700:	f023 0903 	bic.w	r9, r3, #3
  402704:	45a9      	cmp	r9, r5
  402706:	d304      	bcc.n	402712 <_malloc_r+0x1ea>
  402708:	ebc5 0309 	rsb	r3, r5, r9
  40270c:	2b0f      	cmp	r3, #15
  40270e:	f300 8091 	bgt.w	402834 <_malloc_r+0x30c>
  402712:	4b51      	ldr	r3, [pc, #324]	; (402858 <_malloc_r+0x330>)
  402714:	4a51      	ldr	r2, [pc, #324]	; (40285c <_malloc_r+0x334>)
  402716:	6819      	ldr	r1, [r3, #0]
  402718:	6813      	ldr	r3, [r2, #0]
  40271a:	3301      	adds	r3, #1
  40271c:	eb05 0a01 	add.w	sl, r5, r1
  402720:	eb04 0b09 	add.w	fp, r4, r9
  402724:	f000 8161 	beq.w	4029ea <_malloc_r+0x4c2>
  402728:	f50a 5a80 	add.w	sl, sl, #4096	; 0x1000
  40272c:	f10a 0a0f 	add.w	sl, sl, #15
  402730:	f42a 6a7f 	bic.w	sl, sl, #4080	; 0xff0
  402734:	f02a 0a0f 	bic.w	sl, sl, #15
  402738:	4630      	mov	r0, r6
  40273a:	4651      	mov	r1, sl
  40273c:	9201      	str	r2, [sp, #4]
  40273e:	f000 fcbb 	bl	4030b8 <_sbrk_r>
  402742:	f1b0 3fff 	cmp.w	r0, #4294967295
  402746:	4680      	mov	r8, r0
  402748:	9a01      	ldr	r2, [sp, #4]
  40274a:	f000 8100 	beq.w	40294e <_malloc_r+0x426>
  40274e:	4583      	cmp	fp, r0
  402750:	f200 80fa 	bhi.w	402948 <_malloc_r+0x420>
  402754:	f8df c110 	ldr.w	ip, [pc, #272]	; 402868 <_malloc_r+0x340>
  402758:	f8dc 3000 	ldr.w	r3, [ip]
  40275c:	45c3      	cmp	fp, r8
  40275e:	4453      	add	r3, sl
  402760:	f8cc 3000 	str.w	r3, [ip]
  402764:	f000 814a 	beq.w	4029fc <_malloc_r+0x4d4>
  402768:	6812      	ldr	r2, [r2, #0]
  40276a:	493c      	ldr	r1, [pc, #240]	; (40285c <_malloc_r+0x334>)
  40276c:	3201      	adds	r2, #1
  40276e:	bf1b      	ittet	ne
  402770:	ebcb 0b08 	rsbne	fp, fp, r8
  402774:	445b      	addne	r3, fp
  402776:	f8c1 8000 	streq.w	r8, [r1]
  40277a:	f8cc 3000 	strne.w	r3, [ip]
  40277e:	f018 0307 	ands.w	r3, r8, #7
  402782:	f000 8113 	beq.w	4029ac <_malloc_r+0x484>
  402786:	f1c3 0208 	rsb	r2, r3, #8
  40278a:	f5c3 5380 	rsb	r3, r3, #4096	; 0x1000
  40278e:	4490      	add	r8, r2
  402790:	3308      	adds	r3, #8
  402792:	44c2      	add	sl, r8
  402794:	f3ca 0a0b 	ubfx	sl, sl, #0, #12
  402798:	ebca 0a03 	rsb	sl, sl, r3
  40279c:	4651      	mov	r1, sl
  40279e:	4630      	mov	r0, r6
  4027a0:	f8cd c004 	str.w	ip, [sp, #4]
  4027a4:	f000 fc88 	bl	4030b8 <_sbrk_r>
  4027a8:	1c43      	adds	r3, r0, #1
  4027aa:	f8dd c004 	ldr.w	ip, [sp, #4]
  4027ae:	f000 8135 	beq.w	402a1c <_malloc_r+0x4f4>
  4027b2:	ebc8 0200 	rsb	r2, r8, r0
  4027b6:	4452      	add	r2, sl
  4027b8:	f042 0201 	orr.w	r2, r2, #1
  4027bc:	f8dc 3000 	ldr.w	r3, [ip]
  4027c0:	f8c7 8008 	str.w	r8, [r7, #8]
  4027c4:	4453      	add	r3, sl
  4027c6:	42bc      	cmp	r4, r7
  4027c8:	f8c8 2004 	str.w	r2, [r8, #4]
  4027cc:	f8cc 3000 	str.w	r3, [ip]
  4027d0:	f8df a094 	ldr.w	sl, [pc, #148]	; 402868 <_malloc_r+0x340>
  4027d4:	d015      	beq.n	402802 <_malloc_r+0x2da>
  4027d6:	f1b9 0f0f 	cmp.w	r9, #15
  4027da:	f240 80ea 	bls.w	4029b2 <_malloc_r+0x48a>
  4027de:	6861      	ldr	r1, [r4, #4]
  4027e0:	f1a9 020c 	sub.w	r2, r9, #12
  4027e4:	f022 0207 	bic.w	r2, r2, #7
  4027e8:	f001 0e01 	and.w	lr, r1, #1
  4027ec:	18a1      	adds	r1, r4, r2
  4027ee:	2005      	movs	r0, #5
  4027f0:	ea42 0e0e 	orr.w	lr, r2, lr
  4027f4:	2a0f      	cmp	r2, #15
  4027f6:	f8c4 e004 	str.w	lr, [r4, #4]
  4027fa:	6048      	str	r0, [r1, #4]
  4027fc:	6088      	str	r0, [r1, #8]
  4027fe:	f200 8111 	bhi.w	402a24 <_malloc_r+0x4fc>
  402802:	4a17      	ldr	r2, [pc, #92]	; (402860 <_malloc_r+0x338>)
  402804:	68bc      	ldr	r4, [r7, #8]
  402806:	6811      	ldr	r1, [r2, #0]
  402808:	428b      	cmp	r3, r1
  40280a:	bf88      	it	hi
  40280c:	6013      	strhi	r3, [r2, #0]
  40280e:	4a15      	ldr	r2, [pc, #84]	; (402864 <_malloc_r+0x33c>)
  402810:	6811      	ldr	r1, [r2, #0]
  402812:	428b      	cmp	r3, r1
  402814:	bf88      	it	hi
  402816:	6013      	strhi	r3, [r2, #0]
  402818:	6862      	ldr	r2, [r4, #4]
  40281a:	f022 0203 	bic.w	r2, r2, #3
  40281e:	4295      	cmp	r5, r2
  402820:	ebc5 0302 	rsb	r3, r5, r2
  402824:	d801      	bhi.n	40282a <_malloc_r+0x302>
  402826:	2b0f      	cmp	r3, #15
  402828:	dc04      	bgt.n	402834 <_malloc_r+0x30c>
  40282a:	4630      	mov	r0, r6
  40282c:	f000 fa5c 	bl	402ce8 <__malloc_unlock>
  402830:	2400      	movs	r4, #0
  402832:	e6a5      	b.n	402580 <_malloc_r+0x58>
  402834:	1962      	adds	r2, r4, r5
  402836:	f043 0301 	orr.w	r3, r3, #1
  40283a:	f045 0501 	orr.w	r5, r5, #1
  40283e:	6065      	str	r5, [r4, #4]
  402840:	4630      	mov	r0, r6
  402842:	60ba      	str	r2, [r7, #8]
  402844:	6053      	str	r3, [r2, #4]
  402846:	f000 fa4f 	bl	402ce8 <__malloc_unlock>
  40284a:	3408      	adds	r4, #8
  40284c:	4620      	mov	r0, r4
  40284e:	b003      	add	sp, #12
  402850:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402854:	20000458 	.word	0x20000458
  402858:	20000894 	.word	0x20000894
  40285c:	20000864 	.word	0x20000864
  402860:	20000890 	.word	0x20000890
  402864:	2000088c 	.word	0x2000088c
  402868:	20000898 	.word	0x20000898
  40286c:	f1bc 0f14 	cmp.w	ip, #20
  402870:	d961      	bls.n	402936 <_malloc_r+0x40e>
  402872:	f1bc 0f54 	cmp.w	ip, #84	; 0x54
  402876:	f200 808f 	bhi.w	402998 <_malloc_r+0x470>
  40287a:	ea4f 3c15 	mov.w	ip, r5, lsr #12
  40287e:	f10c 0c6e 	add.w	ip, ip, #110	; 0x6e
  402882:	ea4f 014c 	mov.w	r1, ip, lsl #1
  402886:	e697      	b.n	4025b8 <_malloc_r+0x90>
  402888:	0a4b      	lsrs	r3, r1, #9
  40288a:	2b04      	cmp	r3, #4
  40288c:	d958      	bls.n	402940 <_malloc_r+0x418>
  40288e:	2b14      	cmp	r3, #20
  402890:	f200 80ae 	bhi.w	4029f0 <_malloc_r+0x4c8>
  402894:	f103 025b 	add.w	r2, r3, #91	; 0x5b
  402898:	0050      	lsls	r0, r2, #1
  40289a:	eb07 0080 	add.w	r0, r7, r0, lsl #2
  40289e:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 402a5c <_malloc_r+0x534>
  4028a2:	6883      	ldr	r3, [r0, #8]
  4028a4:	4283      	cmp	r3, r0
  4028a6:	f000 808a 	beq.w	4029be <_malloc_r+0x496>
  4028aa:	685a      	ldr	r2, [r3, #4]
  4028ac:	f022 0203 	bic.w	r2, r2, #3
  4028b0:	4291      	cmp	r1, r2
  4028b2:	d202      	bcs.n	4028ba <_malloc_r+0x392>
  4028b4:	689b      	ldr	r3, [r3, #8]
  4028b6:	4298      	cmp	r0, r3
  4028b8:	d1f7      	bne.n	4028aa <_malloc_r+0x382>
  4028ba:	68d9      	ldr	r1, [r3, #12]
  4028bc:	687a      	ldr	r2, [r7, #4]
  4028be:	60e1      	str	r1, [r4, #12]
  4028c0:	60a3      	str	r3, [r4, #8]
  4028c2:	608c      	str	r4, [r1, #8]
  4028c4:	60dc      	str	r4, [r3, #12]
  4028c6:	e6b7      	b.n	402638 <_malloc_r+0x110>
  4028c8:	1961      	adds	r1, r4, r5
  4028ca:	f042 0701 	orr.w	r7, r2, #1
  4028ce:	f045 0501 	orr.w	r5, r5, #1
  4028d2:	6065      	str	r5, [r4, #4]
  4028d4:	4630      	mov	r0, r6
  4028d6:	6159      	str	r1, [r3, #20]
  4028d8:	6119      	str	r1, [r3, #16]
  4028da:	f8c1 e00c 	str.w	lr, [r1, #12]
  4028de:	f8c1 e008 	str.w	lr, [r1, #8]
  4028e2:	604f      	str	r7, [r1, #4]
  4028e4:	508a      	str	r2, [r1, r2]
  4028e6:	3408      	adds	r4, #8
  4028e8:	f000 f9fe 	bl	402ce8 <__malloc_unlock>
  4028ec:	e648      	b.n	402580 <_malloc_r+0x58>
  4028ee:	685a      	ldr	r2, [r3, #4]
  4028f0:	e6a2      	b.n	402638 <_malloc_r+0x110>
  4028f2:	f109 0901 	add.w	r9, r9, #1
  4028f6:	f019 0f03 	tst.w	r9, #3
  4028fa:	f104 0408 	add.w	r4, r4, #8
  4028fe:	f47f aeae 	bne.w	40265e <_malloc_r+0x136>
  402902:	e02d      	b.n	402960 <_malloc_r+0x438>
  402904:	f104 0308 	add.w	r3, r4, #8
  402908:	6964      	ldr	r4, [r4, #20]
  40290a:	42a3      	cmp	r3, r4
  40290c:	bf08      	it	eq
  40290e:	f10c 0c02 	addeq.w	ip, ip, #2
  402912:	f43f ae67 	beq.w	4025e4 <_malloc_r+0xbc>
  402916:	e623      	b.n	402560 <_malloc_r+0x38>
  402918:	4419      	add	r1, r3
  40291a:	461c      	mov	r4, r3
  40291c:	6848      	ldr	r0, [r1, #4]
  40291e:	68db      	ldr	r3, [r3, #12]
  402920:	f854 2f08 	ldr.w	r2, [r4, #8]!
  402924:	f040 0501 	orr.w	r5, r0, #1
  402928:	604d      	str	r5, [r1, #4]
  40292a:	4630      	mov	r0, r6
  40292c:	60d3      	str	r3, [r2, #12]
  40292e:	609a      	str	r2, [r3, #8]
  402930:	f000 f9da 	bl	402ce8 <__malloc_unlock>
  402934:	e624      	b.n	402580 <_malloc_r+0x58>
  402936:	f10c 0c5b 	add.w	ip, ip, #91	; 0x5b
  40293a:	ea4f 014c 	mov.w	r1, ip, lsl #1
  40293e:	e63b      	b.n	4025b8 <_malloc_r+0x90>
  402940:	098a      	lsrs	r2, r1, #6
  402942:	3238      	adds	r2, #56	; 0x38
  402944:	0050      	lsls	r0, r2, #1
  402946:	e7a8      	b.n	40289a <_malloc_r+0x372>
  402948:	42bc      	cmp	r4, r7
  40294a:	f43f af03 	beq.w	402754 <_malloc_r+0x22c>
  40294e:	68bc      	ldr	r4, [r7, #8]
  402950:	6862      	ldr	r2, [r4, #4]
  402952:	f022 0203 	bic.w	r2, r2, #3
  402956:	e762      	b.n	40281e <_malloc_r+0x2f6>
  402958:	f8d8 8000 	ldr.w	r8, [r8]
  40295c:	4598      	cmp	r8, r3
  40295e:	d17b      	bne.n	402a58 <_malloc_r+0x530>
  402960:	f01c 0f03 	tst.w	ip, #3
  402964:	f1a8 0308 	sub.w	r3, r8, #8
  402968:	f10c 3cff 	add.w	ip, ip, #4294967295
  40296c:	d1f4      	bne.n	402958 <_malloc_r+0x430>
  40296e:	687b      	ldr	r3, [r7, #4]
  402970:	ea23 0300 	bic.w	r3, r3, r0
  402974:	607b      	str	r3, [r7, #4]
  402976:	0040      	lsls	r0, r0, #1
  402978:	4298      	cmp	r0, r3
  40297a:	f63f aebf 	bhi.w	4026fc <_malloc_r+0x1d4>
  40297e:	2800      	cmp	r0, #0
  402980:	f43f aebc 	beq.w	4026fc <_malloc_r+0x1d4>
  402984:	4203      	tst	r3, r0
  402986:	46cc      	mov	ip, r9
  402988:	f47f ae65 	bne.w	402656 <_malloc_r+0x12e>
  40298c:	0040      	lsls	r0, r0, #1
  40298e:	4203      	tst	r3, r0
  402990:	f10c 0c04 	add.w	ip, ip, #4
  402994:	d0fa      	beq.n	40298c <_malloc_r+0x464>
  402996:	e65e      	b.n	402656 <_malloc_r+0x12e>
  402998:	f5bc 7faa 	cmp.w	ip, #340	; 0x154
  40299c:	d81a      	bhi.n	4029d4 <_malloc_r+0x4ac>
  40299e:	ea4f 3cd5 	mov.w	ip, r5, lsr #15
  4029a2:	f10c 0c77 	add.w	ip, ip, #119	; 0x77
  4029a6:	ea4f 014c 	mov.w	r1, ip, lsl #1
  4029aa:	e605      	b.n	4025b8 <_malloc_r+0x90>
  4029ac:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  4029b0:	e6ef      	b.n	402792 <_malloc_r+0x26a>
  4029b2:	2301      	movs	r3, #1
  4029b4:	f8c8 3004 	str.w	r3, [r8, #4]
  4029b8:	4644      	mov	r4, r8
  4029ba:	2200      	movs	r2, #0
  4029bc:	e72f      	b.n	40281e <_malloc_r+0x2f6>
  4029be:	1091      	asrs	r1, r2, #2
  4029c0:	2001      	movs	r0, #1
  4029c2:	f8d8 2004 	ldr.w	r2, [r8, #4]
  4029c6:	fa00 f101 	lsl.w	r1, r0, r1
  4029ca:	430a      	orrs	r2, r1
  4029cc:	f8c8 2004 	str.w	r2, [r8, #4]
  4029d0:	4619      	mov	r1, r3
  4029d2:	e774      	b.n	4028be <_malloc_r+0x396>
  4029d4:	f240 5354 	movw	r3, #1364	; 0x554
  4029d8:	459c      	cmp	ip, r3
  4029da:	d81b      	bhi.n	402a14 <_malloc_r+0x4ec>
  4029dc:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  4029e0:	f10c 0c7c 	add.w	ip, ip, #124	; 0x7c
  4029e4:	ea4f 014c 	mov.w	r1, ip, lsl #1
  4029e8:	e5e6      	b.n	4025b8 <_malloc_r+0x90>
  4029ea:	f10a 0a10 	add.w	sl, sl, #16
  4029ee:	e6a3      	b.n	402738 <_malloc_r+0x210>
  4029f0:	2b54      	cmp	r3, #84	; 0x54
  4029f2:	d81f      	bhi.n	402a34 <_malloc_r+0x50c>
  4029f4:	0b0a      	lsrs	r2, r1, #12
  4029f6:	326e      	adds	r2, #110	; 0x6e
  4029f8:	0050      	lsls	r0, r2, #1
  4029fa:	e74e      	b.n	40289a <_malloc_r+0x372>
  4029fc:	f3cb 010b 	ubfx	r1, fp, #0, #12
  402a00:	2900      	cmp	r1, #0
  402a02:	f47f aeb1 	bne.w	402768 <_malloc_r+0x240>
  402a06:	eb0a 0109 	add.w	r1, sl, r9
  402a0a:	68ba      	ldr	r2, [r7, #8]
  402a0c:	f041 0101 	orr.w	r1, r1, #1
  402a10:	6051      	str	r1, [r2, #4]
  402a12:	e6f6      	b.n	402802 <_malloc_r+0x2da>
  402a14:	21fc      	movs	r1, #252	; 0xfc
  402a16:	f04f 0c7e 	mov.w	ip, #126	; 0x7e
  402a1a:	e5cd      	b.n	4025b8 <_malloc_r+0x90>
  402a1c:	2201      	movs	r2, #1
  402a1e:	f04f 0a00 	mov.w	sl, #0
  402a22:	e6cb      	b.n	4027bc <_malloc_r+0x294>
  402a24:	f104 0108 	add.w	r1, r4, #8
  402a28:	4630      	mov	r0, r6
  402a2a:	f7ff fa7b 	bl	401f24 <_free_r>
  402a2e:	f8da 3000 	ldr.w	r3, [sl]
  402a32:	e6e6      	b.n	402802 <_malloc_r+0x2da>
  402a34:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  402a38:	d803      	bhi.n	402a42 <_malloc_r+0x51a>
  402a3a:	0bca      	lsrs	r2, r1, #15
  402a3c:	3277      	adds	r2, #119	; 0x77
  402a3e:	0050      	lsls	r0, r2, #1
  402a40:	e72b      	b.n	40289a <_malloc_r+0x372>
  402a42:	f240 5254 	movw	r2, #1364	; 0x554
  402a46:	4293      	cmp	r3, r2
  402a48:	d803      	bhi.n	402a52 <_malloc_r+0x52a>
  402a4a:	0c8a      	lsrs	r2, r1, #18
  402a4c:	327c      	adds	r2, #124	; 0x7c
  402a4e:	0050      	lsls	r0, r2, #1
  402a50:	e723      	b.n	40289a <_malloc_r+0x372>
  402a52:	20fc      	movs	r0, #252	; 0xfc
  402a54:	227e      	movs	r2, #126	; 0x7e
  402a56:	e720      	b.n	40289a <_malloc_r+0x372>
  402a58:	687b      	ldr	r3, [r7, #4]
  402a5a:	e78c      	b.n	402976 <_malloc_r+0x44e>
  402a5c:	20000458 	.word	0x20000458

00402a60 <memchr>:
  402a60:	0783      	lsls	r3, r0, #30
  402a62:	b470      	push	{r4, r5, r6}
  402a64:	b2c9      	uxtb	r1, r1
  402a66:	d03f      	beq.n	402ae8 <memchr+0x88>
  402a68:	1e54      	subs	r4, r2, #1
  402a6a:	b32a      	cbz	r2, 402ab8 <memchr+0x58>
  402a6c:	7803      	ldrb	r3, [r0, #0]
  402a6e:	428b      	cmp	r3, r1
  402a70:	d023      	beq.n	402aba <memchr+0x5a>
  402a72:	1c43      	adds	r3, r0, #1
  402a74:	e004      	b.n	402a80 <memchr+0x20>
  402a76:	b1fc      	cbz	r4, 402ab8 <memchr+0x58>
  402a78:	7804      	ldrb	r4, [r0, #0]
  402a7a:	428c      	cmp	r4, r1
  402a7c:	d01d      	beq.n	402aba <memchr+0x5a>
  402a7e:	4614      	mov	r4, r2
  402a80:	f013 0f03 	tst.w	r3, #3
  402a84:	4618      	mov	r0, r3
  402a86:	f104 32ff 	add.w	r2, r4, #4294967295
  402a8a:	f103 0301 	add.w	r3, r3, #1
  402a8e:	d1f2      	bne.n	402a76 <memchr+0x16>
  402a90:	2c03      	cmp	r4, #3
  402a92:	d814      	bhi.n	402abe <memchr+0x5e>
  402a94:	1e65      	subs	r5, r4, #1
  402a96:	b34c      	cbz	r4, 402aec <memchr+0x8c>
  402a98:	7803      	ldrb	r3, [r0, #0]
  402a9a:	428b      	cmp	r3, r1
  402a9c:	d00d      	beq.n	402aba <memchr+0x5a>
  402a9e:	1c42      	adds	r2, r0, #1
  402aa0:	2300      	movs	r3, #0
  402aa2:	e002      	b.n	402aaa <memchr+0x4a>
  402aa4:	7804      	ldrb	r4, [r0, #0]
  402aa6:	428c      	cmp	r4, r1
  402aa8:	d007      	beq.n	402aba <memchr+0x5a>
  402aaa:	42ab      	cmp	r3, r5
  402aac:	4610      	mov	r0, r2
  402aae:	f103 0301 	add.w	r3, r3, #1
  402ab2:	f102 0201 	add.w	r2, r2, #1
  402ab6:	d1f5      	bne.n	402aa4 <memchr+0x44>
  402ab8:	2000      	movs	r0, #0
  402aba:	bc70      	pop	{r4, r5, r6}
  402abc:	4770      	bx	lr
  402abe:	ea41 2601 	orr.w	r6, r1, r1, lsl #8
  402ac2:	4603      	mov	r3, r0
  402ac4:	ea46 4606 	orr.w	r6, r6, r6, lsl #16
  402ac8:	4618      	mov	r0, r3
  402aca:	3304      	adds	r3, #4
  402acc:	6802      	ldr	r2, [r0, #0]
  402ace:	4072      	eors	r2, r6
  402ad0:	f1a2 3501 	sub.w	r5, r2, #16843009	; 0x1010101
  402ad4:	ea25 0202 	bic.w	r2, r5, r2
  402ad8:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  402adc:	d1da      	bne.n	402a94 <memchr+0x34>
  402ade:	3c04      	subs	r4, #4
  402ae0:	2c03      	cmp	r4, #3
  402ae2:	4618      	mov	r0, r3
  402ae4:	d8f0      	bhi.n	402ac8 <memchr+0x68>
  402ae6:	e7d5      	b.n	402a94 <memchr+0x34>
  402ae8:	4614      	mov	r4, r2
  402aea:	e7d1      	b.n	402a90 <memchr+0x30>
  402aec:	4620      	mov	r0, r4
  402aee:	e7e4      	b.n	402aba <memchr+0x5a>

00402af0 <memcpy>:
  402af0:	4684      	mov	ip, r0
  402af2:	ea41 0300 	orr.w	r3, r1, r0
  402af6:	f013 0303 	ands.w	r3, r3, #3
  402afa:	d16d      	bne.n	402bd8 <memcpy+0xe8>
  402afc:	3a40      	subs	r2, #64	; 0x40
  402afe:	d341      	bcc.n	402b84 <memcpy+0x94>
  402b00:	f851 3b04 	ldr.w	r3, [r1], #4
  402b04:	f840 3b04 	str.w	r3, [r0], #4
  402b08:	f851 3b04 	ldr.w	r3, [r1], #4
  402b0c:	f840 3b04 	str.w	r3, [r0], #4
  402b10:	f851 3b04 	ldr.w	r3, [r1], #4
  402b14:	f840 3b04 	str.w	r3, [r0], #4
  402b18:	f851 3b04 	ldr.w	r3, [r1], #4
  402b1c:	f840 3b04 	str.w	r3, [r0], #4
  402b20:	f851 3b04 	ldr.w	r3, [r1], #4
  402b24:	f840 3b04 	str.w	r3, [r0], #4
  402b28:	f851 3b04 	ldr.w	r3, [r1], #4
  402b2c:	f840 3b04 	str.w	r3, [r0], #4
  402b30:	f851 3b04 	ldr.w	r3, [r1], #4
  402b34:	f840 3b04 	str.w	r3, [r0], #4
  402b38:	f851 3b04 	ldr.w	r3, [r1], #4
  402b3c:	f840 3b04 	str.w	r3, [r0], #4
  402b40:	f851 3b04 	ldr.w	r3, [r1], #4
  402b44:	f840 3b04 	str.w	r3, [r0], #4
  402b48:	f851 3b04 	ldr.w	r3, [r1], #4
  402b4c:	f840 3b04 	str.w	r3, [r0], #4
  402b50:	f851 3b04 	ldr.w	r3, [r1], #4
  402b54:	f840 3b04 	str.w	r3, [r0], #4
  402b58:	f851 3b04 	ldr.w	r3, [r1], #4
  402b5c:	f840 3b04 	str.w	r3, [r0], #4
  402b60:	f851 3b04 	ldr.w	r3, [r1], #4
  402b64:	f840 3b04 	str.w	r3, [r0], #4
  402b68:	f851 3b04 	ldr.w	r3, [r1], #4
  402b6c:	f840 3b04 	str.w	r3, [r0], #4
  402b70:	f851 3b04 	ldr.w	r3, [r1], #4
  402b74:	f840 3b04 	str.w	r3, [r0], #4
  402b78:	f851 3b04 	ldr.w	r3, [r1], #4
  402b7c:	f840 3b04 	str.w	r3, [r0], #4
  402b80:	3a40      	subs	r2, #64	; 0x40
  402b82:	d2bd      	bcs.n	402b00 <memcpy+0x10>
  402b84:	3230      	adds	r2, #48	; 0x30
  402b86:	d311      	bcc.n	402bac <memcpy+0xbc>
  402b88:	f851 3b04 	ldr.w	r3, [r1], #4
  402b8c:	f840 3b04 	str.w	r3, [r0], #4
  402b90:	f851 3b04 	ldr.w	r3, [r1], #4
  402b94:	f840 3b04 	str.w	r3, [r0], #4
  402b98:	f851 3b04 	ldr.w	r3, [r1], #4
  402b9c:	f840 3b04 	str.w	r3, [r0], #4
  402ba0:	f851 3b04 	ldr.w	r3, [r1], #4
  402ba4:	f840 3b04 	str.w	r3, [r0], #4
  402ba8:	3a10      	subs	r2, #16
  402baa:	d2ed      	bcs.n	402b88 <memcpy+0x98>
  402bac:	320c      	adds	r2, #12
  402bae:	d305      	bcc.n	402bbc <memcpy+0xcc>
  402bb0:	f851 3b04 	ldr.w	r3, [r1], #4
  402bb4:	f840 3b04 	str.w	r3, [r0], #4
  402bb8:	3a04      	subs	r2, #4
  402bba:	d2f9      	bcs.n	402bb0 <memcpy+0xc0>
  402bbc:	3204      	adds	r2, #4
  402bbe:	d008      	beq.n	402bd2 <memcpy+0xe2>
  402bc0:	07d2      	lsls	r2, r2, #31
  402bc2:	bf1c      	itt	ne
  402bc4:	f811 3b01 	ldrbne.w	r3, [r1], #1
  402bc8:	f800 3b01 	strbne.w	r3, [r0], #1
  402bcc:	d301      	bcc.n	402bd2 <memcpy+0xe2>
  402bce:	880b      	ldrh	r3, [r1, #0]
  402bd0:	8003      	strh	r3, [r0, #0]
  402bd2:	4660      	mov	r0, ip
  402bd4:	4770      	bx	lr
  402bd6:	bf00      	nop
  402bd8:	2a08      	cmp	r2, #8
  402bda:	d313      	bcc.n	402c04 <memcpy+0x114>
  402bdc:	078b      	lsls	r3, r1, #30
  402bde:	d08d      	beq.n	402afc <memcpy+0xc>
  402be0:	f010 0303 	ands.w	r3, r0, #3
  402be4:	d08a      	beq.n	402afc <memcpy+0xc>
  402be6:	f1c3 0304 	rsb	r3, r3, #4
  402bea:	1ad2      	subs	r2, r2, r3
  402bec:	07db      	lsls	r3, r3, #31
  402bee:	bf1c      	itt	ne
  402bf0:	f811 3b01 	ldrbne.w	r3, [r1], #1
  402bf4:	f800 3b01 	strbne.w	r3, [r0], #1
  402bf8:	d380      	bcc.n	402afc <memcpy+0xc>
  402bfa:	f831 3b02 	ldrh.w	r3, [r1], #2
  402bfe:	f820 3b02 	strh.w	r3, [r0], #2
  402c02:	e77b      	b.n	402afc <memcpy+0xc>
  402c04:	3a04      	subs	r2, #4
  402c06:	d3d9      	bcc.n	402bbc <memcpy+0xcc>
  402c08:	3a01      	subs	r2, #1
  402c0a:	f811 3b01 	ldrb.w	r3, [r1], #1
  402c0e:	f800 3b01 	strb.w	r3, [r0], #1
  402c12:	d2f9      	bcs.n	402c08 <memcpy+0x118>
  402c14:	780b      	ldrb	r3, [r1, #0]
  402c16:	7003      	strb	r3, [r0, #0]
  402c18:	784b      	ldrb	r3, [r1, #1]
  402c1a:	7043      	strb	r3, [r0, #1]
  402c1c:	788b      	ldrb	r3, [r1, #2]
  402c1e:	7083      	strb	r3, [r0, #2]
  402c20:	4660      	mov	r0, ip
  402c22:	4770      	bx	lr

00402c24 <memmove>:
  402c24:	4288      	cmp	r0, r1
  402c26:	b4f0      	push	{r4, r5, r6, r7}
  402c28:	d910      	bls.n	402c4c <memmove+0x28>
  402c2a:	188c      	adds	r4, r1, r2
  402c2c:	42a0      	cmp	r0, r4
  402c2e:	d20d      	bcs.n	402c4c <memmove+0x28>
  402c30:	1885      	adds	r5, r0, r2
  402c32:	1e53      	subs	r3, r2, #1
  402c34:	b142      	cbz	r2, 402c48 <memmove+0x24>
  402c36:	4621      	mov	r1, r4
  402c38:	462a      	mov	r2, r5
  402c3a:	f811 4d01 	ldrb.w	r4, [r1, #-1]!
  402c3e:	f802 4d01 	strb.w	r4, [r2, #-1]!
  402c42:	3b01      	subs	r3, #1
  402c44:	1c5c      	adds	r4, r3, #1
  402c46:	d1f8      	bne.n	402c3a <memmove+0x16>
  402c48:	bcf0      	pop	{r4, r5, r6, r7}
  402c4a:	4770      	bx	lr
  402c4c:	2a0f      	cmp	r2, #15
  402c4e:	d93f      	bls.n	402cd0 <memmove+0xac>
  402c50:	ea40 0301 	orr.w	r3, r0, r1
  402c54:	079b      	lsls	r3, r3, #30
  402c56:	d13f      	bne.n	402cd8 <memmove+0xb4>
  402c58:	f1a2 0710 	sub.w	r7, r2, #16
  402c5c:	093f      	lsrs	r7, r7, #4
  402c5e:	eb00 1607 	add.w	r6, r0, r7, lsl #4
  402c62:	3610      	adds	r6, #16
  402c64:	460c      	mov	r4, r1
  402c66:	4603      	mov	r3, r0
  402c68:	6825      	ldr	r5, [r4, #0]
  402c6a:	601d      	str	r5, [r3, #0]
  402c6c:	6865      	ldr	r5, [r4, #4]
  402c6e:	605d      	str	r5, [r3, #4]
  402c70:	68a5      	ldr	r5, [r4, #8]
  402c72:	609d      	str	r5, [r3, #8]
  402c74:	68e5      	ldr	r5, [r4, #12]
  402c76:	60dd      	str	r5, [r3, #12]
  402c78:	3310      	adds	r3, #16
  402c7a:	42b3      	cmp	r3, r6
  402c7c:	f104 0410 	add.w	r4, r4, #16
  402c80:	d1f2      	bne.n	402c68 <memmove+0x44>
  402c82:	1c7b      	adds	r3, r7, #1
  402c84:	f002 0c0f 	and.w	ip, r2, #15
  402c88:	011b      	lsls	r3, r3, #4
  402c8a:	f1bc 0f03 	cmp.w	ip, #3
  402c8e:	4419      	add	r1, r3
  402c90:	4403      	add	r3, r0
  402c92:	d923      	bls.n	402cdc <memmove+0xb8>
  402c94:	460e      	mov	r6, r1
  402c96:	461d      	mov	r5, r3
  402c98:	4664      	mov	r4, ip
  402c9a:	3c04      	subs	r4, #4
  402c9c:	f856 7b04 	ldr.w	r7, [r6], #4
  402ca0:	f845 7b04 	str.w	r7, [r5], #4
  402ca4:	2c03      	cmp	r4, #3
  402ca6:	d8f8      	bhi.n	402c9a <memmove+0x76>
  402ca8:	f1ac 0404 	sub.w	r4, ip, #4
  402cac:	f024 0403 	bic.w	r4, r4, #3
  402cb0:	3404      	adds	r4, #4
  402cb2:	f002 0203 	and.w	r2, r2, #3
  402cb6:	4423      	add	r3, r4
  402cb8:	4421      	add	r1, r4
  402cba:	2a00      	cmp	r2, #0
  402cbc:	d0c4      	beq.n	402c48 <memmove+0x24>
  402cbe:	441a      	add	r2, r3
  402cc0:	f811 4b01 	ldrb.w	r4, [r1], #1
  402cc4:	f803 4b01 	strb.w	r4, [r3], #1
  402cc8:	4293      	cmp	r3, r2
  402cca:	d1f9      	bne.n	402cc0 <memmove+0x9c>
  402ccc:	bcf0      	pop	{r4, r5, r6, r7}
  402cce:	4770      	bx	lr
  402cd0:	4603      	mov	r3, r0
  402cd2:	2a00      	cmp	r2, #0
  402cd4:	d1f3      	bne.n	402cbe <memmove+0x9a>
  402cd6:	e7b7      	b.n	402c48 <memmove+0x24>
  402cd8:	4603      	mov	r3, r0
  402cda:	e7f0      	b.n	402cbe <memmove+0x9a>
  402cdc:	4662      	mov	r2, ip
  402cde:	2a00      	cmp	r2, #0
  402ce0:	d1ed      	bne.n	402cbe <memmove+0x9a>
  402ce2:	e7b1      	b.n	402c48 <memmove+0x24>

00402ce4 <__malloc_lock>:
  402ce4:	4770      	bx	lr
  402ce6:	bf00      	nop

00402ce8 <__malloc_unlock>:
  402ce8:	4770      	bx	lr
  402cea:	bf00      	nop

00402cec <_realloc_r>:
  402cec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402cf0:	460c      	mov	r4, r1
  402cf2:	b083      	sub	sp, #12
  402cf4:	4690      	mov	r8, r2
  402cf6:	4681      	mov	r9, r0
  402cf8:	2900      	cmp	r1, #0
  402cfa:	f000 80e2 	beq.w	402ec2 <_realloc_r+0x1d6>
  402cfe:	f7ff fff1 	bl	402ce4 <__malloc_lock>
  402d02:	f108 060b 	add.w	r6, r8, #11
  402d06:	f854 3c04 	ldr.w	r3, [r4, #-4]
  402d0a:	2e16      	cmp	r6, #22
  402d0c:	f023 0503 	bic.w	r5, r3, #3
  402d10:	f1a4 0708 	sub.w	r7, r4, #8
  402d14:	d84b      	bhi.n	402dae <_realloc_r+0xc2>
  402d16:	2110      	movs	r1, #16
  402d18:	460e      	mov	r6, r1
  402d1a:	45b0      	cmp	r8, r6
  402d1c:	d84c      	bhi.n	402db8 <_realloc_r+0xcc>
  402d1e:	428d      	cmp	r5, r1
  402d20:	da78      	bge.n	402e14 <_realloc_r+0x128>
  402d22:	f8df b390 	ldr.w	fp, [pc, #912]	; 4030b4 <_realloc_r+0x3c8>
  402d26:	f8db e008 	ldr.w	lr, [fp, #8]
  402d2a:	1978      	adds	r0, r7, r5
  402d2c:	4586      	cmp	lr, r0
  402d2e:	f000 80ce 	beq.w	402ece <_realloc_r+0x1e2>
  402d32:	6842      	ldr	r2, [r0, #4]
  402d34:	f022 0c01 	bic.w	ip, r2, #1
  402d38:	4484      	add	ip, r0
  402d3a:	f8dc c004 	ldr.w	ip, [ip, #4]
  402d3e:	f01c 0f01 	tst.w	ip, #1
  402d42:	d07a      	beq.n	402e3a <_realloc_r+0x14e>
  402d44:	2200      	movs	r2, #0
  402d46:	4610      	mov	r0, r2
  402d48:	07db      	lsls	r3, r3, #31
  402d4a:	f100 8092 	bmi.w	402e72 <_realloc_r+0x186>
  402d4e:	f854 3c08 	ldr.w	r3, [r4, #-8]
  402d52:	ebc3 0a07 	rsb	sl, r3, r7
  402d56:	f8da 3004 	ldr.w	r3, [sl, #4]
  402d5a:	f023 0303 	bic.w	r3, r3, #3
  402d5e:	442b      	add	r3, r5
  402d60:	b388      	cbz	r0, 402dc6 <_realloc_r+0xda>
  402d62:	4570      	cmp	r0, lr
  402d64:	f000 80ed 	beq.w	402f42 <_realloc_r+0x256>
  402d68:	eb02 0e03 	add.w	lr, r2, r3
  402d6c:	458e      	cmp	lr, r1
  402d6e:	db2a      	blt.n	402dc6 <_realloc_r+0xda>
  402d70:	68c3      	ldr	r3, [r0, #12]
  402d72:	6882      	ldr	r2, [r0, #8]
  402d74:	4657      	mov	r7, sl
  402d76:	60d3      	str	r3, [r2, #12]
  402d78:	609a      	str	r2, [r3, #8]
  402d7a:	f857 1f08 	ldr.w	r1, [r7, #8]!
  402d7e:	f8da 300c 	ldr.w	r3, [sl, #12]
  402d82:	60cb      	str	r3, [r1, #12]
  402d84:	1f2a      	subs	r2, r5, #4
  402d86:	2a24      	cmp	r2, #36	; 0x24
  402d88:	6099      	str	r1, [r3, #8]
  402d8a:	f200 8126 	bhi.w	402fda <_realloc_r+0x2ee>
  402d8e:	2a13      	cmp	r2, #19
  402d90:	f240 80b3 	bls.w	402efa <_realloc_r+0x20e>
  402d94:	6823      	ldr	r3, [r4, #0]
  402d96:	f8ca 3008 	str.w	r3, [sl, #8]
  402d9a:	6863      	ldr	r3, [r4, #4]
  402d9c:	f8ca 300c 	str.w	r3, [sl, #12]
  402da0:	2a1b      	cmp	r2, #27
  402da2:	f200 8130 	bhi.w	403006 <_realloc_r+0x31a>
  402da6:	3408      	adds	r4, #8
  402da8:	f10a 0310 	add.w	r3, sl, #16
  402dac:	e0a6      	b.n	402efc <_realloc_r+0x210>
  402dae:	f026 0607 	bic.w	r6, r6, #7
  402db2:	2e00      	cmp	r6, #0
  402db4:	4631      	mov	r1, r6
  402db6:	dab0      	bge.n	402d1a <_realloc_r+0x2e>
  402db8:	230c      	movs	r3, #12
  402dba:	2000      	movs	r0, #0
  402dbc:	f8c9 3000 	str.w	r3, [r9]
  402dc0:	b003      	add	sp, #12
  402dc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402dc6:	428b      	cmp	r3, r1
  402dc8:	db53      	blt.n	402e72 <_realloc_r+0x186>
  402dca:	4657      	mov	r7, sl
  402dcc:	f8da 100c 	ldr.w	r1, [sl, #12]
  402dd0:	f857 0f08 	ldr.w	r0, [r7, #8]!
  402dd4:	1f2a      	subs	r2, r5, #4
  402dd6:	2a24      	cmp	r2, #36	; 0x24
  402dd8:	60c1      	str	r1, [r0, #12]
  402dda:	6088      	str	r0, [r1, #8]
  402ddc:	f200 8109 	bhi.w	402ff2 <_realloc_r+0x306>
  402de0:	2a13      	cmp	r2, #19
  402de2:	f240 8104 	bls.w	402fee <_realloc_r+0x302>
  402de6:	6821      	ldr	r1, [r4, #0]
  402de8:	f8ca 1008 	str.w	r1, [sl, #8]
  402dec:	6861      	ldr	r1, [r4, #4]
  402dee:	f8ca 100c 	str.w	r1, [sl, #12]
  402df2:	2a1b      	cmp	r2, #27
  402df4:	f200 811c 	bhi.w	403030 <_realloc_r+0x344>
  402df8:	3408      	adds	r4, #8
  402dfa:	f10a 0210 	add.w	r2, sl, #16
  402dfe:	6821      	ldr	r1, [r4, #0]
  402e00:	6011      	str	r1, [r2, #0]
  402e02:	6861      	ldr	r1, [r4, #4]
  402e04:	6051      	str	r1, [r2, #4]
  402e06:	68a1      	ldr	r1, [r4, #8]
  402e08:	6091      	str	r1, [r2, #8]
  402e0a:	461d      	mov	r5, r3
  402e0c:	f8da 3004 	ldr.w	r3, [sl, #4]
  402e10:	463c      	mov	r4, r7
  402e12:	4657      	mov	r7, sl
  402e14:	1baa      	subs	r2, r5, r6
  402e16:	2a0f      	cmp	r2, #15
  402e18:	f003 0301 	and.w	r3, r3, #1
  402e1c:	d819      	bhi.n	402e52 <_realloc_r+0x166>
  402e1e:	432b      	orrs	r3, r5
  402e20:	443d      	add	r5, r7
  402e22:	607b      	str	r3, [r7, #4]
  402e24:	686b      	ldr	r3, [r5, #4]
  402e26:	f043 0301 	orr.w	r3, r3, #1
  402e2a:	606b      	str	r3, [r5, #4]
  402e2c:	4648      	mov	r0, r9
  402e2e:	f7ff ff5b 	bl	402ce8 <__malloc_unlock>
  402e32:	4620      	mov	r0, r4
  402e34:	b003      	add	sp, #12
  402e36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402e3a:	f022 0203 	bic.w	r2, r2, #3
  402e3e:	eb02 0c05 	add.w	ip, r2, r5
  402e42:	458c      	cmp	ip, r1
  402e44:	db80      	blt.n	402d48 <_realloc_r+0x5c>
  402e46:	68c2      	ldr	r2, [r0, #12]
  402e48:	6881      	ldr	r1, [r0, #8]
  402e4a:	4665      	mov	r5, ip
  402e4c:	60ca      	str	r2, [r1, #12]
  402e4e:	6091      	str	r1, [r2, #8]
  402e50:	e7e0      	b.n	402e14 <_realloc_r+0x128>
  402e52:	19b9      	adds	r1, r7, r6
  402e54:	f042 0001 	orr.w	r0, r2, #1
  402e58:	431e      	orrs	r6, r3
  402e5a:	440a      	add	r2, r1
  402e5c:	607e      	str	r6, [r7, #4]
  402e5e:	6048      	str	r0, [r1, #4]
  402e60:	6853      	ldr	r3, [r2, #4]
  402e62:	f043 0301 	orr.w	r3, r3, #1
  402e66:	3108      	adds	r1, #8
  402e68:	6053      	str	r3, [r2, #4]
  402e6a:	4648      	mov	r0, r9
  402e6c:	f7ff f85a 	bl	401f24 <_free_r>
  402e70:	e7dc      	b.n	402e2c <_realloc_r+0x140>
  402e72:	4641      	mov	r1, r8
  402e74:	4648      	mov	r0, r9
  402e76:	f7ff fb57 	bl	402528 <_malloc_r>
  402e7a:	4680      	mov	r8, r0
  402e7c:	b1d0      	cbz	r0, 402eb4 <_realloc_r+0x1c8>
  402e7e:	f854 3c04 	ldr.w	r3, [r4, #-4]
  402e82:	f023 0201 	bic.w	r2, r3, #1
  402e86:	443a      	add	r2, r7
  402e88:	f1a0 0108 	sub.w	r1, r0, #8
  402e8c:	4291      	cmp	r1, r2
  402e8e:	f000 809e 	beq.w	402fce <_realloc_r+0x2e2>
  402e92:	1f2a      	subs	r2, r5, #4
  402e94:	2a24      	cmp	r2, #36	; 0x24
  402e96:	d850      	bhi.n	402f3a <_realloc_r+0x24e>
  402e98:	2a13      	cmp	r2, #19
  402e9a:	d823      	bhi.n	402ee4 <_realloc_r+0x1f8>
  402e9c:	4603      	mov	r3, r0
  402e9e:	4622      	mov	r2, r4
  402ea0:	6811      	ldr	r1, [r2, #0]
  402ea2:	6019      	str	r1, [r3, #0]
  402ea4:	6851      	ldr	r1, [r2, #4]
  402ea6:	6059      	str	r1, [r3, #4]
  402ea8:	6892      	ldr	r2, [r2, #8]
  402eaa:	609a      	str	r2, [r3, #8]
  402eac:	4621      	mov	r1, r4
  402eae:	4648      	mov	r0, r9
  402eb0:	f7ff f838 	bl	401f24 <_free_r>
  402eb4:	4648      	mov	r0, r9
  402eb6:	f7ff ff17 	bl	402ce8 <__malloc_unlock>
  402eba:	4640      	mov	r0, r8
  402ebc:	b003      	add	sp, #12
  402ebe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402ec2:	4611      	mov	r1, r2
  402ec4:	b003      	add	sp, #12
  402ec6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402eca:	f7ff bb2d 	b.w	402528 <_malloc_r>
  402ece:	f8de 2004 	ldr.w	r2, [lr, #4]
  402ed2:	f022 0203 	bic.w	r2, r2, #3
  402ed6:	1950      	adds	r0, r2, r5
  402ed8:	f106 0c10 	add.w	ip, r6, #16
  402edc:	4560      	cmp	r0, ip
  402ede:	da19      	bge.n	402f14 <_realloc_r+0x228>
  402ee0:	4670      	mov	r0, lr
  402ee2:	e731      	b.n	402d48 <_realloc_r+0x5c>
  402ee4:	6823      	ldr	r3, [r4, #0]
  402ee6:	6003      	str	r3, [r0, #0]
  402ee8:	6863      	ldr	r3, [r4, #4]
  402eea:	6043      	str	r3, [r0, #4]
  402eec:	2a1b      	cmp	r2, #27
  402eee:	d863      	bhi.n	402fb8 <_realloc_r+0x2cc>
  402ef0:	f100 0308 	add.w	r3, r0, #8
  402ef4:	f104 0208 	add.w	r2, r4, #8
  402ef8:	e7d2      	b.n	402ea0 <_realloc_r+0x1b4>
  402efa:	463b      	mov	r3, r7
  402efc:	6822      	ldr	r2, [r4, #0]
  402efe:	601a      	str	r2, [r3, #0]
  402f00:	6862      	ldr	r2, [r4, #4]
  402f02:	605a      	str	r2, [r3, #4]
  402f04:	68a2      	ldr	r2, [r4, #8]
  402f06:	609a      	str	r2, [r3, #8]
  402f08:	463c      	mov	r4, r7
  402f0a:	4675      	mov	r5, lr
  402f0c:	f8da 3004 	ldr.w	r3, [sl, #4]
  402f10:	4657      	mov	r7, sl
  402f12:	e77f      	b.n	402e14 <_realloc_r+0x128>
  402f14:	4437      	add	r7, r6
  402f16:	1b83      	subs	r3, r0, r6
  402f18:	f043 0301 	orr.w	r3, r3, #1
  402f1c:	f8cb 7008 	str.w	r7, [fp, #8]
  402f20:	607b      	str	r3, [r7, #4]
  402f22:	f854 3c04 	ldr.w	r3, [r4, #-4]
  402f26:	f003 0301 	and.w	r3, r3, #1
  402f2a:	431e      	orrs	r6, r3
  402f2c:	4648      	mov	r0, r9
  402f2e:	f844 6c04 	str.w	r6, [r4, #-4]
  402f32:	f7ff fed9 	bl	402ce8 <__malloc_unlock>
  402f36:	4620      	mov	r0, r4
  402f38:	e77c      	b.n	402e34 <_realloc_r+0x148>
  402f3a:	4621      	mov	r1, r4
  402f3c:	f7ff fe72 	bl	402c24 <memmove>
  402f40:	e7b4      	b.n	402eac <_realloc_r+0x1c0>
  402f42:	eb02 0c03 	add.w	ip, r2, r3
  402f46:	f106 0210 	add.w	r2, r6, #16
  402f4a:	4594      	cmp	ip, r2
  402f4c:	f6ff af3b 	blt.w	402dc6 <_realloc_r+0xda>
  402f50:	4657      	mov	r7, sl
  402f52:	f8da 300c 	ldr.w	r3, [sl, #12]
  402f56:	f857 1f08 	ldr.w	r1, [r7, #8]!
  402f5a:	1f2a      	subs	r2, r5, #4
  402f5c:	2a24      	cmp	r2, #36	; 0x24
  402f5e:	60cb      	str	r3, [r1, #12]
  402f60:	6099      	str	r1, [r3, #8]
  402f62:	f200 8087 	bhi.w	403074 <_realloc_r+0x388>
  402f66:	2a13      	cmp	r2, #19
  402f68:	d978      	bls.n	40305c <_realloc_r+0x370>
  402f6a:	6823      	ldr	r3, [r4, #0]
  402f6c:	f8ca 3008 	str.w	r3, [sl, #8]
  402f70:	6863      	ldr	r3, [r4, #4]
  402f72:	f8ca 300c 	str.w	r3, [sl, #12]
  402f76:	2a1b      	cmp	r2, #27
  402f78:	f200 8085 	bhi.w	403086 <_realloc_r+0x39a>
  402f7c:	3408      	adds	r4, #8
  402f7e:	f10a 0310 	add.w	r3, sl, #16
  402f82:	6822      	ldr	r2, [r4, #0]
  402f84:	601a      	str	r2, [r3, #0]
  402f86:	6862      	ldr	r2, [r4, #4]
  402f88:	605a      	str	r2, [r3, #4]
  402f8a:	68a2      	ldr	r2, [r4, #8]
  402f8c:	609a      	str	r2, [r3, #8]
  402f8e:	eb0a 0306 	add.w	r3, sl, r6
  402f92:	ebc6 020c 	rsb	r2, r6, ip
  402f96:	f042 0201 	orr.w	r2, r2, #1
  402f9a:	f8cb 3008 	str.w	r3, [fp, #8]
  402f9e:	605a      	str	r2, [r3, #4]
  402fa0:	f8da 3004 	ldr.w	r3, [sl, #4]
  402fa4:	f003 0301 	and.w	r3, r3, #1
  402fa8:	431e      	orrs	r6, r3
  402faa:	4648      	mov	r0, r9
  402fac:	f8ca 6004 	str.w	r6, [sl, #4]
  402fb0:	f7ff fe9a 	bl	402ce8 <__malloc_unlock>
  402fb4:	4638      	mov	r0, r7
  402fb6:	e73d      	b.n	402e34 <_realloc_r+0x148>
  402fb8:	68a3      	ldr	r3, [r4, #8]
  402fba:	6083      	str	r3, [r0, #8]
  402fbc:	68e3      	ldr	r3, [r4, #12]
  402fbe:	60c3      	str	r3, [r0, #12]
  402fc0:	2a24      	cmp	r2, #36	; 0x24
  402fc2:	d02c      	beq.n	40301e <_realloc_r+0x332>
  402fc4:	f100 0310 	add.w	r3, r0, #16
  402fc8:	f104 0210 	add.w	r2, r4, #16
  402fcc:	e768      	b.n	402ea0 <_realloc_r+0x1b4>
  402fce:	f850 2c04 	ldr.w	r2, [r0, #-4]
  402fd2:	f022 0203 	bic.w	r2, r2, #3
  402fd6:	4415      	add	r5, r2
  402fd8:	e71c      	b.n	402e14 <_realloc_r+0x128>
  402fda:	4621      	mov	r1, r4
  402fdc:	4638      	mov	r0, r7
  402fde:	4675      	mov	r5, lr
  402fe0:	463c      	mov	r4, r7
  402fe2:	f7ff fe1f 	bl	402c24 <memmove>
  402fe6:	4657      	mov	r7, sl
  402fe8:	f8da 3004 	ldr.w	r3, [sl, #4]
  402fec:	e712      	b.n	402e14 <_realloc_r+0x128>
  402fee:	463a      	mov	r2, r7
  402ff0:	e705      	b.n	402dfe <_realloc_r+0x112>
  402ff2:	4621      	mov	r1, r4
  402ff4:	4638      	mov	r0, r7
  402ff6:	461d      	mov	r5, r3
  402ff8:	463c      	mov	r4, r7
  402ffa:	f7ff fe13 	bl	402c24 <memmove>
  402ffe:	4657      	mov	r7, sl
  403000:	f8da 3004 	ldr.w	r3, [sl, #4]
  403004:	e706      	b.n	402e14 <_realloc_r+0x128>
  403006:	68a3      	ldr	r3, [r4, #8]
  403008:	f8ca 3010 	str.w	r3, [sl, #16]
  40300c:	68e3      	ldr	r3, [r4, #12]
  40300e:	f8ca 3014 	str.w	r3, [sl, #20]
  403012:	2a24      	cmp	r2, #36	; 0x24
  403014:	d018      	beq.n	403048 <_realloc_r+0x35c>
  403016:	3410      	adds	r4, #16
  403018:	f10a 0318 	add.w	r3, sl, #24
  40301c:	e76e      	b.n	402efc <_realloc_r+0x210>
  40301e:	6923      	ldr	r3, [r4, #16]
  403020:	6103      	str	r3, [r0, #16]
  403022:	6963      	ldr	r3, [r4, #20]
  403024:	6143      	str	r3, [r0, #20]
  403026:	f104 0218 	add.w	r2, r4, #24
  40302a:	f100 0318 	add.w	r3, r0, #24
  40302e:	e737      	b.n	402ea0 <_realloc_r+0x1b4>
  403030:	68a1      	ldr	r1, [r4, #8]
  403032:	f8ca 1010 	str.w	r1, [sl, #16]
  403036:	68e1      	ldr	r1, [r4, #12]
  403038:	f8ca 1014 	str.w	r1, [sl, #20]
  40303c:	2a24      	cmp	r2, #36	; 0x24
  40303e:	d00f      	beq.n	403060 <_realloc_r+0x374>
  403040:	3410      	adds	r4, #16
  403042:	f10a 0218 	add.w	r2, sl, #24
  403046:	e6da      	b.n	402dfe <_realloc_r+0x112>
  403048:	6923      	ldr	r3, [r4, #16]
  40304a:	f8ca 3018 	str.w	r3, [sl, #24]
  40304e:	6963      	ldr	r3, [r4, #20]
  403050:	f8ca 301c 	str.w	r3, [sl, #28]
  403054:	3418      	adds	r4, #24
  403056:	f10a 0320 	add.w	r3, sl, #32
  40305a:	e74f      	b.n	402efc <_realloc_r+0x210>
  40305c:	463b      	mov	r3, r7
  40305e:	e790      	b.n	402f82 <_realloc_r+0x296>
  403060:	6922      	ldr	r2, [r4, #16]
  403062:	f8ca 2018 	str.w	r2, [sl, #24]
  403066:	6962      	ldr	r2, [r4, #20]
  403068:	f8ca 201c 	str.w	r2, [sl, #28]
  40306c:	3418      	adds	r4, #24
  40306e:	f10a 0220 	add.w	r2, sl, #32
  403072:	e6c4      	b.n	402dfe <_realloc_r+0x112>
  403074:	4621      	mov	r1, r4
  403076:	4638      	mov	r0, r7
  403078:	f8cd c004 	str.w	ip, [sp, #4]
  40307c:	f7ff fdd2 	bl	402c24 <memmove>
  403080:	f8dd c004 	ldr.w	ip, [sp, #4]
  403084:	e783      	b.n	402f8e <_realloc_r+0x2a2>
  403086:	68a3      	ldr	r3, [r4, #8]
  403088:	f8ca 3010 	str.w	r3, [sl, #16]
  40308c:	68e3      	ldr	r3, [r4, #12]
  40308e:	f8ca 3014 	str.w	r3, [sl, #20]
  403092:	2a24      	cmp	r2, #36	; 0x24
  403094:	d003      	beq.n	40309e <_realloc_r+0x3b2>
  403096:	3410      	adds	r4, #16
  403098:	f10a 0318 	add.w	r3, sl, #24
  40309c:	e771      	b.n	402f82 <_realloc_r+0x296>
  40309e:	6923      	ldr	r3, [r4, #16]
  4030a0:	f8ca 3018 	str.w	r3, [sl, #24]
  4030a4:	6963      	ldr	r3, [r4, #20]
  4030a6:	f8ca 301c 	str.w	r3, [sl, #28]
  4030aa:	3418      	adds	r4, #24
  4030ac:	f10a 0320 	add.w	r3, sl, #32
  4030b0:	e767      	b.n	402f82 <_realloc_r+0x296>
  4030b2:	bf00      	nop
  4030b4:	20000458 	.word	0x20000458

004030b8 <_sbrk_r>:
  4030b8:	b538      	push	{r3, r4, r5, lr}
  4030ba:	4c07      	ldr	r4, [pc, #28]	; (4030d8 <_sbrk_r+0x20>)
  4030bc:	2300      	movs	r3, #0
  4030be:	4605      	mov	r5, r0
  4030c0:	4608      	mov	r0, r1
  4030c2:	6023      	str	r3, [r4, #0]
  4030c4:	f7fd faee 	bl	4006a4 <_sbrk>
  4030c8:	1c43      	adds	r3, r0, #1
  4030ca:	d000      	beq.n	4030ce <_sbrk_r+0x16>
  4030cc:	bd38      	pop	{r3, r4, r5, pc}
  4030ce:	6823      	ldr	r3, [r4, #0]
  4030d0:	2b00      	cmp	r3, #0
  4030d2:	d0fb      	beq.n	4030cc <_sbrk_r+0x14>
  4030d4:	602b      	str	r3, [r5, #0]
  4030d6:	bd38      	pop	{r3, r4, r5, pc}
  4030d8:	20000ad4 	.word	0x20000ad4

004030dc <__sread>:
  4030dc:	b510      	push	{r4, lr}
  4030de:	460c      	mov	r4, r1
  4030e0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4030e4:	f000 f9c2 	bl	40346c <_read_r>
  4030e8:	2800      	cmp	r0, #0
  4030ea:	db03      	blt.n	4030f4 <__sread+0x18>
  4030ec:	6d23      	ldr	r3, [r4, #80]	; 0x50
  4030ee:	4403      	add	r3, r0
  4030f0:	6523      	str	r3, [r4, #80]	; 0x50
  4030f2:	bd10      	pop	{r4, pc}
  4030f4:	89a3      	ldrh	r3, [r4, #12]
  4030f6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  4030fa:	81a3      	strh	r3, [r4, #12]
  4030fc:	bd10      	pop	{r4, pc}
  4030fe:	bf00      	nop

00403100 <__swrite>:
  403100:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  403104:	460c      	mov	r4, r1
  403106:	8989      	ldrh	r1, [r1, #12]
  403108:	461d      	mov	r5, r3
  40310a:	05cb      	lsls	r3, r1, #23
  40310c:	4616      	mov	r6, r2
  40310e:	4607      	mov	r7, r0
  403110:	d506      	bpl.n	403120 <__swrite+0x20>
  403112:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  403116:	2200      	movs	r2, #0
  403118:	2302      	movs	r3, #2
  40311a:	f000 f993 	bl	403444 <_lseek_r>
  40311e:	89a1      	ldrh	r1, [r4, #12]
  403120:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
  403124:	81a1      	strh	r1, [r4, #12]
  403126:	4638      	mov	r0, r7
  403128:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  40312c:	4632      	mov	r2, r6
  40312e:	462b      	mov	r3, r5
  403130:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  403134:	f000 b89e 	b.w	403274 <_write_r>

00403138 <__sseek>:
  403138:	b510      	push	{r4, lr}
  40313a:	460c      	mov	r4, r1
  40313c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  403140:	f000 f980 	bl	403444 <_lseek_r>
  403144:	89a3      	ldrh	r3, [r4, #12]
  403146:	1c42      	adds	r2, r0, #1
  403148:	bf0e      	itee	eq
  40314a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  40314e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  403152:	6520      	strne	r0, [r4, #80]	; 0x50
  403154:	81a3      	strh	r3, [r4, #12]
  403156:	bd10      	pop	{r4, pc}

00403158 <__sclose>:
  403158:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  40315c:	f000 b8f2 	b.w	403344 <_close_r>

00403160 <__swbuf_r>:
  403160:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  403162:	460d      	mov	r5, r1
  403164:	4614      	mov	r4, r2
  403166:	4607      	mov	r7, r0
  403168:	b110      	cbz	r0, 403170 <__swbuf_r+0x10>
  40316a:	6b83      	ldr	r3, [r0, #56]	; 0x38
  40316c:	2b00      	cmp	r3, #0
  40316e:	d048      	beq.n	403202 <__swbuf_r+0xa2>
  403170:	89a2      	ldrh	r2, [r4, #12]
  403172:	69a3      	ldr	r3, [r4, #24]
  403174:	60a3      	str	r3, [r4, #8]
  403176:	b293      	uxth	r3, r2
  403178:	0718      	lsls	r0, r3, #28
  40317a:	d538      	bpl.n	4031ee <__swbuf_r+0x8e>
  40317c:	6926      	ldr	r6, [r4, #16]
  40317e:	2e00      	cmp	r6, #0
  403180:	d035      	beq.n	4031ee <__swbuf_r+0x8e>
  403182:	0499      	lsls	r1, r3, #18
  403184:	b2ed      	uxtb	r5, r5
  403186:	d515      	bpl.n	4031b4 <__swbuf_r+0x54>
  403188:	6823      	ldr	r3, [r4, #0]
  40318a:	6962      	ldr	r2, [r4, #20]
  40318c:	1b9e      	subs	r6, r3, r6
  40318e:	4296      	cmp	r6, r2
  403190:	da1c      	bge.n	4031cc <__swbuf_r+0x6c>
  403192:	3601      	adds	r6, #1
  403194:	68a2      	ldr	r2, [r4, #8]
  403196:	1c59      	adds	r1, r3, #1
  403198:	3a01      	subs	r2, #1
  40319a:	60a2      	str	r2, [r4, #8]
  40319c:	6021      	str	r1, [r4, #0]
  40319e:	701d      	strb	r5, [r3, #0]
  4031a0:	6963      	ldr	r3, [r4, #20]
  4031a2:	42b3      	cmp	r3, r6
  4031a4:	d01a      	beq.n	4031dc <__swbuf_r+0x7c>
  4031a6:	89a3      	ldrh	r3, [r4, #12]
  4031a8:	07db      	lsls	r3, r3, #31
  4031aa:	d501      	bpl.n	4031b0 <__swbuf_r+0x50>
  4031ac:	2d0a      	cmp	r5, #10
  4031ae:	d015      	beq.n	4031dc <__swbuf_r+0x7c>
  4031b0:	4628      	mov	r0, r5
  4031b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4031b4:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4031b6:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  4031ba:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
  4031be:	6663      	str	r3, [r4, #100]	; 0x64
  4031c0:	6823      	ldr	r3, [r4, #0]
  4031c2:	81a2      	strh	r2, [r4, #12]
  4031c4:	6962      	ldr	r2, [r4, #20]
  4031c6:	1b9e      	subs	r6, r3, r6
  4031c8:	4296      	cmp	r6, r2
  4031ca:	dbe2      	blt.n	403192 <__swbuf_r+0x32>
  4031cc:	4638      	mov	r0, r7
  4031ce:	4621      	mov	r1, r4
  4031d0:	f7fe fd4a 	bl	401c68 <_fflush_r>
  4031d4:	b940      	cbnz	r0, 4031e8 <__swbuf_r+0x88>
  4031d6:	6823      	ldr	r3, [r4, #0]
  4031d8:	2601      	movs	r6, #1
  4031da:	e7db      	b.n	403194 <__swbuf_r+0x34>
  4031dc:	4638      	mov	r0, r7
  4031de:	4621      	mov	r1, r4
  4031e0:	f7fe fd42 	bl	401c68 <_fflush_r>
  4031e4:	2800      	cmp	r0, #0
  4031e6:	d0e3      	beq.n	4031b0 <__swbuf_r+0x50>
  4031e8:	f04f 30ff 	mov.w	r0, #4294967295
  4031ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4031ee:	4638      	mov	r0, r7
  4031f0:	4621      	mov	r1, r4
  4031f2:	f7fe fc1d 	bl	401a30 <__swsetup_r>
  4031f6:	2800      	cmp	r0, #0
  4031f8:	d1f6      	bne.n	4031e8 <__swbuf_r+0x88>
  4031fa:	89a2      	ldrh	r2, [r4, #12]
  4031fc:	6926      	ldr	r6, [r4, #16]
  4031fe:	b293      	uxth	r3, r2
  403200:	e7bf      	b.n	403182 <__swbuf_r+0x22>
  403202:	f7fe fd4d 	bl	401ca0 <__sinit>
  403206:	e7b3      	b.n	403170 <__swbuf_r+0x10>

00403208 <_wcrtomb_r>:
  403208:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40320c:	461e      	mov	r6, r3
  40320e:	b086      	sub	sp, #24
  403210:	460c      	mov	r4, r1
  403212:	4605      	mov	r5, r0
  403214:	4617      	mov	r7, r2
  403216:	4b0f      	ldr	r3, [pc, #60]	; (403254 <_wcrtomb_r+0x4c>)
  403218:	b191      	cbz	r1, 403240 <_wcrtomb_r+0x38>
  40321a:	f8d3 8000 	ldr.w	r8, [r3]
  40321e:	f7ff f901 	bl	402424 <__locale_charset>
  403222:	9600      	str	r6, [sp, #0]
  403224:	4603      	mov	r3, r0
  403226:	4621      	mov	r1, r4
  403228:	463a      	mov	r2, r7
  40322a:	4628      	mov	r0, r5
  40322c:	47c0      	blx	r8
  40322e:	1c43      	adds	r3, r0, #1
  403230:	d103      	bne.n	40323a <_wcrtomb_r+0x32>
  403232:	2200      	movs	r2, #0
  403234:	238a      	movs	r3, #138	; 0x8a
  403236:	6032      	str	r2, [r6, #0]
  403238:	602b      	str	r3, [r5, #0]
  40323a:	b006      	add	sp, #24
  40323c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  403240:	681f      	ldr	r7, [r3, #0]
  403242:	f7ff f8ef 	bl	402424 <__locale_charset>
  403246:	9600      	str	r6, [sp, #0]
  403248:	4603      	mov	r3, r0
  40324a:	4622      	mov	r2, r4
  40324c:	4628      	mov	r0, r5
  40324e:	a903      	add	r1, sp, #12
  403250:	47b8      	blx	r7
  403252:	e7ec      	b.n	40322e <_wcrtomb_r+0x26>
  403254:	20000868 	.word	0x20000868

00403258 <__ascii_wctomb>:
  403258:	b121      	cbz	r1, 403264 <__ascii_wctomb+0xc>
  40325a:	2aff      	cmp	r2, #255	; 0xff
  40325c:	d804      	bhi.n	403268 <__ascii_wctomb+0x10>
  40325e:	700a      	strb	r2, [r1, #0]
  403260:	2001      	movs	r0, #1
  403262:	4770      	bx	lr
  403264:	4608      	mov	r0, r1
  403266:	4770      	bx	lr
  403268:	238a      	movs	r3, #138	; 0x8a
  40326a:	6003      	str	r3, [r0, #0]
  40326c:	f04f 30ff 	mov.w	r0, #4294967295
  403270:	4770      	bx	lr
  403272:	bf00      	nop

00403274 <_write_r>:
  403274:	b570      	push	{r4, r5, r6, lr}
  403276:	4c08      	ldr	r4, [pc, #32]	; (403298 <_write_r+0x24>)
  403278:	4606      	mov	r6, r0
  40327a:	2500      	movs	r5, #0
  40327c:	4608      	mov	r0, r1
  40327e:	4611      	mov	r1, r2
  403280:	461a      	mov	r2, r3
  403282:	6025      	str	r5, [r4, #0]
  403284:	f7fc ffb6 	bl	4001f4 <_write>
  403288:	1c43      	adds	r3, r0, #1
  40328a:	d000      	beq.n	40328e <_write_r+0x1a>
  40328c:	bd70      	pop	{r4, r5, r6, pc}
  40328e:	6823      	ldr	r3, [r4, #0]
  403290:	2b00      	cmp	r3, #0
  403292:	d0fb      	beq.n	40328c <_write_r+0x18>
  403294:	6033      	str	r3, [r6, #0]
  403296:	bd70      	pop	{r4, r5, r6, pc}
  403298:	20000ad4 	.word	0x20000ad4

0040329c <__register_exitproc>:
  40329c:	b5f0      	push	{r4, r5, r6, r7, lr}
  40329e:	4c27      	ldr	r4, [pc, #156]	; (40333c <__register_exitproc+0xa0>)
  4032a0:	6826      	ldr	r6, [r4, #0]
  4032a2:	f8d6 4148 	ldr.w	r4, [r6, #328]	; 0x148
  4032a6:	b085      	sub	sp, #20
  4032a8:	4607      	mov	r7, r0
  4032aa:	2c00      	cmp	r4, #0
  4032ac:	d041      	beq.n	403332 <__register_exitproc+0x96>
  4032ae:	6865      	ldr	r5, [r4, #4]
  4032b0:	2d1f      	cmp	r5, #31
  4032b2:	dd1e      	ble.n	4032f2 <__register_exitproc+0x56>
  4032b4:	4822      	ldr	r0, [pc, #136]	; (403340 <__register_exitproc+0xa4>)
  4032b6:	b918      	cbnz	r0, 4032c0 <__register_exitproc+0x24>
  4032b8:	f04f 30ff 	mov.w	r0, #4294967295
  4032bc:	b005      	add	sp, #20
  4032be:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4032c0:	f44f 70c8 	mov.w	r0, #400	; 0x190
  4032c4:	9103      	str	r1, [sp, #12]
  4032c6:	9202      	str	r2, [sp, #8]
  4032c8:	9301      	str	r3, [sp, #4]
  4032ca:	f7ff f925 	bl	402518 <malloc>
  4032ce:	9903      	ldr	r1, [sp, #12]
  4032d0:	9a02      	ldr	r2, [sp, #8]
  4032d2:	9b01      	ldr	r3, [sp, #4]
  4032d4:	4604      	mov	r4, r0
  4032d6:	2800      	cmp	r0, #0
  4032d8:	d0ee      	beq.n	4032b8 <__register_exitproc+0x1c>
  4032da:	f8d6 5148 	ldr.w	r5, [r6, #328]	; 0x148
  4032de:	6025      	str	r5, [r4, #0]
  4032e0:	2000      	movs	r0, #0
  4032e2:	6060      	str	r0, [r4, #4]
  4032e4:	4605      	mov	r5, r0
  4032e6:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
  4032ea:	f8c4 0188 	str.w	r0, [r4, #392]	; 0x188
  4032ee:	f8c4 018c 	str.w	r0, [r4, #396]	; 0x18c
  4032f2:	b93f      	cbnz	r7, 403304 <__register_exitproc+0x68>
  4032f4:	1cab      	adds	r3, r5, #2
  4032f6:	2000      	movs	r0, #0
  4032f8:	3501      	adds	r5, #1
  4032fa:	6065      	str	r5, [r4, #4]
  4032fc:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
  403300:	b005      	add	sp, #20
  403302:	bdf0      	pop	{r4, r5, r6, r7, pc}
  403304:	eb04 0085 	add.w	r0, r4, r5, lsl #2
  403308:	f04f 0c01 	mov.w	ip, #1
  40330c:	f8c0 2088 	str.w	r2, [r0, #136]	; 0x88
  403310:	f8d4 6188 	ldr.w	r6, [r4, #392]	; 0x188
  403314:	fa0c f205 	lsl.w	r2, ip, r5
  403318:	4316      	orrs	r6, r2
  40331a:	2f02      	cmp	r7, #2
  40331c:	f8c4 6188 	str.w	r6, [r4, #392]	; 0x188
  403320:	f8c0 3108 	str.w	r3, [r0, #264]	; 0x108
  403324:	d1e6      	bne.n	4032f4 <__register_exitproc+0x58>
  403326:	f8d4 318c 	ldr.w	r3, [r4, #396]	; 0x18c
  40332a:	431a      	orrs	r2, r3
  40332c:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
  403330:	e7e0      	b.n	4032f4 <__register_exitproc+0x58>
  403332:	f506 74a6 	add.w	r4, r6, #332	; 0x14c
  403336:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
  40333a:	e7b8      	b.n	4032ae <__register_exitproc+0x12>
  40333c:	00403b00 	.word	0x00403b00
  403340:	00402519 	.word	0x00402519

00403344 <_close_r>:
  403344:	b538      	push	{r3, r4, r5, lr}
  403346:	4c07      	ldr	r4, [pc, #28]	; (403364 <_close_r+0x20>)
  403348:	2300      	movs	r3, #0
  40334a:	4605      	mov	r5, r0
  40334c:	4608      	mov	r0, r1
  40334e:	6023      	str	r3, [r4, #0]
  403350:	f7fd f9c2 	bl	4006d8 <_close>
  403354:	1c43      	adds	r3, r0, #1
  403356:	d000      	beq.n	40335a <_close_r+0x16>
  403358:	bd38      	pop	{r3, r4, r5, pc}
  40335a:	6823      	ldr	r3, [r4, #0]
  40335c:	2b00      	cmp	r3, #0
  40335e:	d0fb      	beq.n	403358 <_close_r+0x14>
  403360:	602b      	str	r3, [r5, #0]
  403362:	bd38      	pop	{r3, r4, r5, pc}
  403364:	20000ad4 	.word	0x20000ad4

00403368 <_fclose_r>:
  403368:	b570      	push	{r4, r5, r6, lr}
  40336a:	460c      	mov	r4, r1
  40336c:	4605      	mov	r5, r0
  40336e:	b131      	cbz	r1, 40337e <_fclose_r+0x16>
  403370:	b110      	cbz	r0, 403378 <_fclose_r+0x10>
  403372:	6b83      	ldr	r3, [r0, #56]	; 0x38
  403374:	2b00      	cmp	r3, #0
  403376:	d02f      	beq.n	4033d8 <_fclose_r+0x70>
  403378:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40337c:	b90b      	cbnz	r3, 403382 <_fclose_r+0x1a>
  40337e:	2000      	movs	r0, #0
  403380:	bd70      	pop	{r4, r5, r6, pc}
  403382:	4628      	mov	r0, r5
  403384:	4621      	mov	r1, r4
  403386:	f7fe fc6f 	bl	401c68 <_fflush_r>
  40338a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  40338c:	4606      	mov	r6, r0
  40338e:	b133      	cbz	r3, 40339e <_fclose_r+0x36>
  403390:	4628      	mov	r0, r5
  403392:	69e1      	ldr	r1, [r4, #28]
  403394:	4798      	blx	r3
  403396:	2800      	cmp	r0, #0
  403398:	bfb8      	it	lt
  40339a:	f04f 36ff 	movlt.w	r6, #4294967295
  40339e:	89a3      	ldrh	r3, [r4, #12]
  4033a0:	061b      	lsls	r3, r3, #24
  4033a2:	d41c      	bmi.n	4033de <_fclose_r+0x76>
  4033a4:	6b21      	ldr	r1, [r4, #48]	; 0x30
  4033a6:	b141      	cbz	r1, 4033ba <_fclose_r+0x52>
  4033a8:	f104 0340 	add.w	r3, r4, #64	; 0x40
  4033ac:	4299      	cmp	r1, r3
  4033ae:	d002      	beq.n	4033b6 <_fclose_r+0x4e>
  4033b0:	4628      	mov	r0, r5
  4033b2:	f7fe fdb7 	bl	401f24 <_free_r>
  4033b6:	2300      	movs	r3, #0
  4033b8:	6323      	str	r3, [r4, #48]	; 0x30
  4033ba:	6c61      	ldr	r1, [r4, #68]	; 0x44
  4033bc:	b121      	cbz	r1, 4033c8 <_fclose_r+0x60>
  4033be:	4628      	mov	r0, r5
  4033c0:	f7fe fdb0 	bl	401f24 <_free_r>
  4033c4:	2300      	movs	r3, #0
  4033c6:	6463      	str	r3, [r4, #68]	; 0x44
  4033c8:	f7fe fce4 	bl	401d94 <__sfp_lock_acquire>
  4033cc:	2300      	movs	r3, #0
  4033ce:	81a3      	strh	r3, [r4, #12]
  4033d0:	f7fe fce2 	bl	401d98 <__sfp_lock_release>
  4033d4:	4630      	mov	r0, r6
  4033d6:	bd70      	pop	{r4, r5, r6, pc}
  4033d8:	f7fe fc62 	bl	401ca0 <__sinit>
  4033dc:	e7cc      	b.n	403378 <_fclose_r+0x10>
  4033de:	4628      	mov	r0, r5
  4033e0:	6921      	ldr	r1, [r4, #16]
  4033e2:	f7fe fd9f 	bl	401f24 <_free_r>
  4033e6:	e7dd      	b.n	4033a4 <_fclose_r+0x3c>

004033e8 <fclose>:
  4033e8:	4b02      	ldr	r3, [pc, #8]	; (4033f4 <fclose+0xc>)
  4033ea:	4601      	mov	r1, r0
  4033ec:	6818      	ldr	r0, [r3, #0]
  4033ee:	f7ff bfbb 	b.w	403368 <_fclose_r>
  4033f2:	bf00      	nop
  4033f4:	20000430 	.word	0x20000430

004033f8 <_fstat_r>:
  4033f8:	b538      	push	{r3, r4, r5, lr}
  4033fa:	4c08      	ldr	r4, [pc, #32]	; (40341c <_fstat_r+0x24>)
  4033fc:	2300      	movs	r3, #0
  4033fe:	4605      	mov	r5, r0
  403400:	4608      	mov	r0, r1
  403402:	4611      	mov	r1, r2
  403404:	6023      	str	r3, [r4, #0]
  403406:	f7fd f96b 	bl	4006e0 <_fstat>
  40340a:	1c43      	adds	r3, r0, #1
  40340c:	d000      	beq.n	403410 <_fstat_r+0x18>
  40340e:	bd38      	pop	{r3, r4, r5, pc}
  403410:	6823      	ldr	r3, [r4, #0]
  403412:	2b00      	cmp	r3, #0
  403414:	d0fb      	beq.n	40340e <_fstat_r+0x16>
  403416:	602b      	str	r3, [r5, #0]
  403418:	bd38      	pop	{r3, r4, r5, pc}
  40341a:	bf00      	nop
  40341c:	20000ad4 	.word	0x20000ad4

00403420 <_isatty_r>:
  403420:	b538      	push	{r3, r4, r5, lr}
  403422:	4c07      	ldr	r4, [pc, #28]	; (403440 <_isatty_r+0x20>)
  403424:	2300      	movs	r3, #0
  403426:	4605      	mov	r5, r0
  403428:	4608      	mov	r0, r1
  40342a:	6023      	str	r3, [r4, #0]
  40342c:	f7fd f95e 	bl	4006ec <_isatty>
  403430:	1c43      	adds	r3, r0, #1
  403432:	d000      	beq.n	403436 <_isatty_r+0x16>
  403434:	bd38      	pop	{r3, r4, r5, pc}
  403436:	6823      	ldr	r3, [r4, #0]
  403438:	2b00      	cmp	r3, #0
  40343a:	d0fb      	beq.n	403434 <_isatty_r+0x14>
  40343c:	602b      	str	r3, [r5, #0]
  40343e:	bd38      	pop	{r3, r4, r5, pc}
  403440:	20000ad4 	.word	0x20000ad4

00403444 <_lseek_r>:
  403444:	b570      	push	{r4, r5, r6, lr}
  403446:	4c08      	ldr	r4, [pc, #32]	; (403468 <_lseek_r+0x24>)
  403448:	4606      	mov	r6, r0
  40344a:	2500      	movs	r5, #0
  40344c:	4608      	mov	r0, r1
  40344e:	4611      	mov	r1, r2
  403450:	461a      	mov	r2, r3
  403452:	6025      	str	r5, [r4, #0]
  403454:	f7fd f94c 	bl	4006f0 <_lseek>
  403458:	1c43      	adds	r3, r0, #1
  40345a:	d000      	beq.n	40345e <_lseek_r+0x1a>
  40345c:	bd70      	pop	{r4, r5, r6, pc}
  40345e:	6823      	ldr	r3, [r4, #0]
  403460:	2b00      	cmp	r3, #0
  403462:	d0fb      	beq.n	40345c <_lseek_r+0x18>
  403464:	6033      	str	r3, [r6, #0]
  403466:	bd70      	pop	{r4, r5, r6, pc}
  403468:	20000ad4 	.word	0x20000ad4

0040346c <_read_r>:
  40346c:	b570      	push	{r4, r5, r6, lr}
  40346e:	4c08      	ldr	r4, [pc, #32]	; (403490 <_read_r+0x24>)
  403470:	4606      	mov	r6, r0
  403472:	2500      	movs	r5, #0
  403474:	4608      	mov	r0, r1
  403476:	4611      	mov	r1, r2
  403478:	461a      	mov	r2, r3
  40347a:	6025      	str	r5, [r4, #0]
  40347c:	f7fc fe9a 	bl	4001b4 <_read>
  403480:	1c43      	adds	r3, r0, #1
  403482:	d000      	beq.n	403486 <_read_r+0x1a>
  403484:	bd70      	pop	{r4, r5, r6, pc}
  403486:	6823      	ldr	r3, [r4, #0]
  403488:	2b00      	cmp	r3, #0
  40348a:	d0fb      	beq.n	403484 <_read_r+0x18>
  40348c:	6033      	str	r3, [r6, #0]
  40348e:	bd70      	pop	{r4, r5, r6, pc}
  403490:	20000ad4 	.word	0x20000ad4

00403494 <__aeabi_uldivmod>:
  403494:	b94b      	cbnz	r3, 4034aa <__aeabi_uldivmod+0x16>
  403496:	b942      	cbnz	r2, 4034aa <__aeabi_uldivmod+0x16>
  403498:	2900      	cmp	r1, #0
  40349a:	bf08      	it	eq
  40349c:	2800      	cmpeq	r0, #0
  40349e:	d002      	beq.n	4034a6 <__aeabi_uldivmod+0x12>
  4034a0:	f04f 31ff 	mov.w	r1, #4294967295
  4034a4:	4608      	mov	r0, r1
  4034a6:	f000 b83b 	b.w	403520 <__aeabi_idiv0>
  4034aa:	b082      	sub	sp, #8
  4034ac:	46ec      	mov	ip, sp
  4034ae:	e92d 5000 	stmdb	sp!, {ip, lr}
  4034b2:	f000 f81d 	bl	4034f0 <__gnu_uldivmod_helper>
  4034b6:	f8dd e004 	ldr.w	lr, [sp, #4]
  4034ba:	b002      	add	sp, #8
  4034bc:	bc0c      	pop	{r2, r3}
  4034be:	4770      	bx	lr

004034c0 <__gnu_ldivmod_helper>:
  4034c0:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  4034c4:	9e06      	ldr	r6, [sp, #24]
  4034c6:	4614      	mov	r4, r2
  4034c8:	461d      	mov	r5, r3
  4034ca:	4680      	mov	r8, r0
  4034cc:	4689      	mov	r9, r1
  4034ce:	f000 f829 	bl	403524 <__divdi3>
  4034d2:	fb04 f301 	mul.w	r3, r4, r1
  4034d6:	fb00 3305 	mla	r3, r0, r5, r3
  4034da:	fba4 4500 	umull	r4, r5, r4, r0
  4034de:	441d      	add	r5, r3
  4034e0:	ebb8 0404 	subs.w	r4, r8, r4
  4034e4:	eb69 0505 	sbc.w	r5, r9, r5
  4034e8:	e9c6 4500 	strd	r4, r5, [r6]
  4034ec:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}

004034f0 <__gnu_uldivmod_helper>:
  4034f0:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  4034f4:	9e06      	ldr	r6, [sp, #24]
  4034f6:	4614      	mov	r4, r2
  4034f8:	4680      	mov	r8, r0
  4034fa:	4689      	mov	r9, r1
  4034fc:	461d      	mov	r5, r3
  4034fe:	f000 f95d 	bl	4037bc <__udivdi3>
  403502:	fb00 f505 	mul.w	r5, r0, r5
  403506:	fb04 5301 	mla	r3, r4, r1, r5
  40350a:	fba0 4504 	umull	r4, r5, r0, r4
  40350e:	441d      	add	r5, r3
  403510:	ebb8 0404 	subs.w	r4, r8, r4
  403514:	eb69 0505 	sbc.w	r5, r9, r5
  403518:	e9c6 4500 	strd	r4, r5, [r6]
  40351c:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}

00403520 <__aeabi_idiv0>:
  403520:	4770      	bx	lr
  403522:	bf00      	nop

00403524 <__divdi3>:
  403524:	2900      	cmp	r1, #0
  403526:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
  40352a:	f2c0 809f 	blt.w	40366c <__divdi3+0x148>
  40352e:	2400      	movs	r4, #0
  403530:	2b00      	cmp	r3, #0
  403532:	f2c0 8096 	blt.w	403662 <__divdi3+0x13e>
  403536:	4615      	mov	r5, r2
  403538:	4606      	mov	r6, r0
  40353a:	460f      	mov	r7, r1
  40353c:	2b00      	cmp	r3, #0
  40353e:	d13e      	bne.n	4035be <__divdi3+0x9a>
  403540:	428a      	cmp	r2, r1
  403542:	d957      	bls.n	4035f4 <__divdi3+0xd0>
  403544:	fab2 f382 	clz	r3, r2
  403548:	b14b      	cbz	r3, 40355e <__divdi3+0x3a>
  40354a:	f1c3 0220 	rsb	r2, r3, #32
  40354e:	fa01 f703 	lsl.w	r7, r1, r3
  403552:	fa20 f202 	lsr.w	r2, r0, r2
  403556:	409d      	lsls	r5, r3
  403558:	4317      	orrs	r7, r2
  40355a:	fa00 f603 	lsl.w	r6, r0, r3
  40355e:	0c29      	lsrs	r1, r5, #16
  403560:	fbb7 f2f1 	udiv	r2, r7, r1
  403564:	0c33      	lsrs	r3, r6, #16
  403566:	fb01 7c12 	mls	ip, r1, r2, r7
  40356a:	b2a8      	uxth	r0, r5
  40356c:	ea43 470c 	orr.w	r7, r3, ip, lsl #16
  403570:	fb00 f302 	mul.w	r3, r0, r2
  403574:	42bb      	cmp	r3, r7
  403576:	d909      	bls.n	40358c <__divdi3+0x68>
  403578:	197f      	adds	r7, r7, r5
  40357a:	f102 3cff 	add.w	ip, r2, #4294967295
  40357e:	f080 8101 	bcs.w	403784 <__divdi3+0x260>
  403582:	42bb      	cmp	r3, r7
  403584:	f240 80fe 	bls.w	403784 <__divdi3+0x260>
  403588:	3a02      	subs	r2, #2
  40358a:	442f      	add	r7, r5
  40358c:	1aff      	subs	r7, r7, r3
  40358e:	fbb7 f3f1 	udiv	r3, r7, r1
  403592:	b2b6      	uxth	r6, r6
  403594:	fb01 7113 	mls	r1, r1, r3, r7
  403598:	ea46 4101 	orr.w	r1, r6, r1, lsl #16
  40359c:	fb00 f003 	mul.w	r0, r0, r3
  4035a0:	4288      	cmp	r0, r1
  4035a2:	d908      	bls.n	4035b6 <__divdi3+0x92>
  4035a4:	1949      	adds	r1, r1, r5
  4035a6:	f103 37ff 	add.w	r7, r3, #4294967295
  4035aa:	f080 80ed 	bcs.w	403788 <__divdi3+0x264>
  4035ae:	4288      	cmp	r0, r1
  4035b0:	f240 80ea 	bls.w	403788 <__divdi3+0x264>
  4035b4:	3b02      	subs	r3, #2
  4035b6:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
  4035ba:	2300      	movs	r3, #0
  4035bc:	e003      	b.n	4035c6 <__divdi3+0xa2>
  4035be:	428b      	cmp	r3, r1
  4035c0:	d90a      	bls.n	4035d8 <__divdi3+0xb4>
  4035c2:	2300      	movs	r3, #0
  4035c4:	461a      	mov	r2, r3
  4035c6:	4610      	mov	r0, r2
  4035c8:	4619      	mov	r1, r3
  4035ca:	b114      	cbz	r4, 4035d2 <__divdi3+0xae>
  4035cc:	4240      	negs	r0, r0
  4035ce:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  4035d2:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
  4035d6:	4770      	bx	lr
  4035d8:	fab3 f883 	clz	r8, r3
  4035dc:	f1b8 0f00 	cmp.w	r8, #0
  4035e0:	f040 8084 	bne.w	4036ec <__divdi3+0x1c8>
  4035e4:	428b      	cmp	r3, r1
  4035e6:	d302      	bcc.n	4035ee <__divdi3+0xca>
  4035e8:	4282      	cmp	r2, r0
  4035ea:	f200 80de 	bhi.w	4037aa <__divdi3+0x286>
  4035ee:	2300      	movs	r3, #0
  4035f0:	2201      	movs	r2, #1
  4035f2:	e7e8      	b.n	4035c6 <__divdi3+0xa2>
  4035f4:	b912      	cbnz	r2, 4035fc <__divdi3+0xd8>
  4035f6:	2301      	movs	r3, #1
  4035f8:	fbb3 f5f2 	udiv	r5, r3, r2
  4035fc:	fab5 f285 	clz	r2, r5
  403600:	2a00      	cmp	r2, #0
  403602:	d139      	bne.n	403678 <__divdi3+0x154>
  403604:	1b7f      	subs	r7, r7, r5
  403606:	0c28      	lsrs	r0, r5, #16
  403608:	fa1f fc85 	uxth.w	ip, r5
  40360c:	2301      	movs	r3, #1
  40360e:	fbb7 f1f0 	udiv	r1, r7, r0
  403612:	0c32      	lsrs	r2, r6, #16
  403614:	fb00 7711 	mls	r7, r0, r1, r7
  403618:	ea42 4707 	orr.w	r7, r2, r7, lsl #16
  40361c:	fb0c f201 	mul.w	r2, ip, r1
  403620:	42ba      	cmp	r2, r7
  403622:	d907      	bls.n	403634 <__divdi3+0x110>
  403624:	197f      	adds	r7, r7, r5
  403626:	f101 38ff 	add.w	r8, r1, #4294967295
  40362a:	d202      	bcs.n	403632 <__divdi3+0x10e>
  40362c:	42ba      	cmp	r2, r7
  40362e:	f200 80c1 	bhi.w	4037b4 <__divdi3+0x290>
  403632:	4641      	mov	r1, r8
  403634:	1abf      	subs	r7, r7, r2
  403636:	fbb7 f2f0 	udiv	r2, r7, r0
  40363a:	b2b6      	uxth	r6, r6
  40363c:	fb00 7012 	mls	r0, r0, r2, r7
  403640:	ea46 4000 	orr.w	r0, r6, r0, lsl #16
  403644:	fb0c fc02 	mul.w	ip, ip, r2
  403648:	4584      	cmp	ip, r0
  40364a:	d907      	bls.n	40365c <__divdi3+0x138>
  40364c:	1940      	adds	r0, r0, r5
  40364e:	f102 37ff 	add.w	r7, r2, #4294967295
  403652:	d202      	bcs.n	40365a <__divdi3+0x136>
  403654:	4584      	cmp	ip, r0
  403656:	f200 80ab 	bhi.w	4037b0 <__divdi3+0x28c>
  40365a:	463a      	mov	r2, r7
  40365c:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
  403660:	e7b1      	b.n	4035c6 <__divdi3+0xa2>
  403662:	43e4      	mvns	r4, r4
  403664:	4252      	negs	r2, r2
  403666:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  40366a:	e764      	b.n	403536 <__divdi3+0x12>
  40366c:	4240      	negs	r0, r0
  40366e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  403672:	f04f 34ff 	mov.w	r4, #4294967295
  403676:	e75b      	b.n	403530 <__divdi3+0xc>
  403678:	4095      	lsls	r5, r2
  40367a:	f1c2 0320 	rsb	r3, r2, #32
  40367e:	fa27 f103 	lsr.w	r1, r7, r3
  403682:	0c28      	lsrs	r0, r5, #16
  403684:	fa26 f303 	lsr.w	r3, r6, r3
  403688:	4097      	lsls	r7, r2
  40368a:	fbb1 f8f0 	udiv	r8, r1, r0
  40368e:	431f      	orrs	r7, r3
  403690:	0c3b      	lsrs	r3, r7, #16
  403692:	fb00 1118 	mls	r1, r0, r8, r1
  403696:	fa1f fc85 	uxth.w	ip, r5
  40369a:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
  40369e:	fb0c f308 	mul.w	r3, ip, r8
  4036a2:	428b      	cmp	r3, r1
  4036a4:	fa06 f602 	lsl.w	r6, r6, r2
  4036a8:	d908      	bls.n	4036bc <__divdi3+0x198>
  4036aa:	1949      	adds	r1, r1, r5
  4036ac:	f108 32ff 	add.w	r2, r8, #4294967295
  4036b0:	d279      	bcs.n	4037a6 <__divdi3+0x282>
  4036b2:	428b      	cmp	r3, r1
  4036b4:	d977      	bls.n	4037a6 <__divdi3+0x282>
  4036b6:	f1a8 0802 	sub.w	r8, r8, #2
  4036ba:	4429      	add	r1, r5
  4036bc:	1ac9      	subs	r1, r1, r3
  4036be:	fbb1 f3f0 	udiv	r3, r1, r0
  4036c2:	b2bf      	uxth	r7, r7
  4036c4:	fb00 1113 	mls	r1, r0, r3, r1
  4036c8:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
  4036cc:	fb0c f203 	mul.w	r2, ip, r3
  4036d0:	42ba      	cmp	r2, r7
  4036d2:	d907      	bls.n	4036e4 <__divdi3+0x1c0>
  4036d4:	197f      	adds	r7, r7, r5
  4036d6:	f103 31ff 	add.w	r1, r3, #4294967295
  4036da:	d260      	bcs.n	40379e <__divdi3+0x27a>
  4036dc:	42ba      	cmp	r2, r7
  4036de:	d95e      	bls.n	40379e <__divdi3+0x27a>
  4036e0:	3b02      	subs	r3, #2
  4036e2:	442f      	add	r7, r5
  4036e4:	1abf      	subs	r7, r7, r2
  4036e6:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
  4036ea:	e790      	b.n	40360e <__divdi3+0xea>
  4036ec:	f1c8 0220 	rsb	r2, r8, #32
  4036f0:	fa03 fc08 	lsl.w	ip, r3, r8
  4036f4:	fa25 f302 	lsr.w	r3, r5, r2
  4036f8:	ea43 0c0c 	orr.w	ip, r3, ip
  4036fc:	ea4f 491c 	mov.w	r9, ip, lsr #16
  403700:	fa21 f302 	lsr.w	r3, r1, r2
  403704:	fa01 f708 	lsl.w	r7, r1, r8
  403708:	fa20 f202 	lsr.w	r2, r0, r2
  40370c:	fbb3 f1f9 	udiv	r1, r3, r9
  403710:	4317      	orrs	r7, r2
  403712:	fb09 3311 	mls	r3, r9, r1, r3
  403716:	0c3a      	lsrs	r2, r7, #16
  403718:	fa1f fb8c 	uxth.w	fp, ip
  40371c:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
  403720:	fb0b fa01 	mul.w	sl, fp, r1
  403724:	459a      	cmp	sl, r3
  403726:	fa05 f008 	lsl.w	r0, r5, r8
  40372a:	d908      	bls.n	40373e <__divdi3+0x21a>
  40372c:	eb13 030c 	adds.w	r3, r3, ip
  403730:	f101 32ff 	add.w	r2, r1, #4294967295
  403734:	d235      	bcs.n	4037a2 <__divdi3+0x27e>
  403736:	459a      	cmp	sl, r3
  403738:	d933      	bls.n	4037a2 <__divdi3+0x27e>
  40373a:	3902      	subs	r1, #2
  40373c:	4463      	add	r3, ip
  40373e:	ebca 0303 	rsb	r3, sl, r3
  403742:	fbb3 f2f9 	udiv	r2, r3, r9
  403746:	fb09 3312 	mls	r3, r9, r2, r3
  40374a:	b2bf      	uxth	r7, r7
  40374c:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  403750:	fb0b f902 	mul.w	r9, fp, r2
  403754:	45b9      	cmp	r9, r7
  403756:	d908      	bls.n	40376a <__divdi3+0x246>
  403758:	eb17 070c 	adds.w	r7, r7, ip
  40375c:	f102 33ff 	add.w	r3, r2, #4294967295
  403760:	d21b      	bcs.n	40379a <__divdi3+0x276>
  403762:	45b9      	cmp	r9, r7
  403764:	d919      	bls.n	40379a <__divdi3+0x276>
  403766:	3a02      	subs	r2, #2
  403768:	4467      	add	r7, ip
  40376a:	ea42 4501 	orr.w	r5, r2, r1, lsl #16
  40376e:	fba5 0100 	umull	r0, r1, r5, r0
  403772:	ebc9 0707 	rsb	r7, r9, r7
  403776:	428f      	cmp	r7, r1
  403778:	f04f 0300 	mov.w	r3, #0
  40377c:	d30a      	bcc.n	403794 <__divdi3+0x270>
  40377e:	d005      	beq.n	40378c <__divdi3+0x268>
  403780:	462a      	mov	r2, r5
  403782:	e720      	b.n	4035c6 <__divdi3+0xa2>
  403784:	4662      	mov	r2, ip
  403786:	e701      	b.n	40358c <__divdi3+0x68>
  403788:	463b      	mov	r3, r7
  40378a:	e714      	b.n	4035b6 <__divdi3+0x92>
  40378c:	fa06 f608 	lsl.w	r6, r6, r8
  403790:	4286      	cmp	r6, r0
  403792:	d2f5      	bcs.n	403780 <__divdi3+0x25c>
  403794:	1e6a      	subs	r2, r5, #1
  403796:	2300      	movs	r3, #0
  403798:	e715      	b.n	4035c6 <__divdi3+0xa2>
  40379a:	461a      	mov	r2, r3
  40379c:	e7e5      	b.n	40376a <__divdi3+0x246>
  40379e:	460b      	mov	r3, r1
  4037a0:	e7a0      	b.n	4036e4 <__divdi3+0x1c0>
  4037a2:	4611      	mov	r1, r2
  4037a4:	e7cb      	b.n	40373e <__divdi3+0x21a>
  4037a6:	4690      	mov	r8, r2
  4037a8:	e788      	b.n	4036bc <__divdi3+0x198>
  4037aa:	4643      	mov	r3, r8
  4037ac:	4642      	mov	r2, r8
  4037ae:	e70a      	b.n	4035c6 <__divdi3+0xa2>
  4037b0:	3a02      	subs	r2, #2
  4037b2:	e753      	b.n	40365c <__divdi3+0x138>
  4037b4:	3902      	subs	r1, #2
  4037b6:	442f      	add	r7, r5
  4037b8:	e73c      	b.n	403634 <__divdi3+0x110>
  4037ba:	bf00      	nop

004037bc <__udivdi3>:
  4037bc:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
  4037c0:	4614      	mov	r4, r2
  4037c2:	4605      	mov	r5, r0
  4037c4:	460e      	mov	r6, r1
  4037c6:	2b00      	cmp	r3, #0
  4037c8:	d143      	bne.n	403852 <__udivdi3+0x96>
  4037ca:	428a      	cmp	r2, r1
  4037cc:	d953      	bls.n	403876 <__udivdi3+0xba>
  4037ce:	fab2 f782 	clz	r7, r2
  4037d2:	b157      	cbz	r7, 4037ea <__udivdi3+0x2e>
  4037d4:	f1c7 0620 	rsb	r6, r7, #32
  4037d8:	fa20 f606 	lsr.w	r6, r0, r6
  4037dc:	fa01 f307 	lsl.w	r3, r1, r7
  4037e0:	fa02 f407 	lsl.w	r4, r2, r7
  4037e4:	431e      	orrs	r6, r3
  4037e6:	fa00 f507 	lsl.w	r5, r0, r7
  4037ea:	0c21      	lsrs	r1, r4, #16
  4037ec:	fbb6 f2f1 	udiv	r2, r6, r1
  4037f0:	0c2b      	lsrs	r3, r5, #16
  4037f2:	fb01 6712 	mls	r7, r1, r2, r6
  4037f6:	b2a0      	uxth	r0, r4
  4037f8:	ea43 4607 	orr.w	r6, r3, r7, lsl #16
  4037fc:	fb00 f302 	mul.w	r3, r0, r2
  403800:	42b3      	cmp	r3, r6
  403802:	d909      	bls.n	403818 <__udivdi3+0x5c>
  403804:	1936      	adds	r6, r6, r4
  403806:	f102 37ff 	add.w	r7, r2, #4294967295
  40380a:	f080 80f6 	bcs.w	4039fa <__udivdi3+0x23e>
  40380e:	42b3      	cmp	r3, r6
  403810:	f240 80f3 	bls.w	4039fa <__udivdi3+0x23e>
  403814:	3a02      	subs	r2, #2
  403816:	4426      	add	r6, r4
  403818:	1af6      	subs	r6, r6, r3
  40381a:	fbb6 f3f1 	udiv	r3, r6, r1
  40381e:	b2ad      	uxth	r5, r5
  403820:	fb01 6113 	mls	r1, r1, r3, r6
  403824:	ea45 4101 	orr.w	r1, r5, r1, lsl #16
  403828:	fb00 f003 	mul.w	r0, r0, r3
  40382c:	4288      	cmp	r0, r1
  40382e:	d908      	bls.n	403842 <__udivdi3+0x86>
  403830:	1909      	adds	r1, r1, r4
  403832:	f103 36ff 	add.w	r6, r3, #4294967295
  403836:	f080 80e2 	bcs.w	4039fe <__udivdi3+0x242>
  40383a:	4288      	cmp	r0, r1
  40383c:	f240 80df 	bls.w	4039fe <__udivdi3+0x242>
  403840:	3b02      	subs	r3, #2
  403842:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
  403846:	2300      	movs	r3, #0
  403848:	4610      	mov	r0, r2
  40384a:	4619      	mov	r1, r3
  40384c:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
  403850:	4770      	bx	lr
  403852:	428b      	cmp	r3, r1
  403854:	d84a      	bhi.n	4038ec <__udivdi3+0x130>
  403856:	fab3 f683 	clz	r6, r3
  40385a:	2e00      	cmp	r6, #0
  40385c:	d14d      	bne.n	4038fa <__udivdi3+0x13e>
  40385e:	428b      	cmp	r3, r1
  403860:	d302      	bcc.n	403868 <__udivdi3+0xac>
  403862:	4282      	cmp	r2, r0
  403864:	f200 80d6 	bhi.w	403a14 <__udivdi3+0x258>
  403868:	2300      	movs	r3, #0
  40386a:	2201      	movs	r2, #1
  40386c:	4610      	mov	r0, r2
  40386e:	4619      	mov	r1, r3
  403870:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
  403874:	4770      	bx	lr
  403876:	b912      	cbnz	r2, 40387e <__udivdi3+0xc2>
  403878:	2401      	movs	r4, #1
  40387a:	fbb4 f4f2 	udiv	r4, r4, r2
  40387e:	fab4 f284 	clz	r2, r4
  403882:	2a00      	cmp	r2, #0
  403884:	d17c      	bne.n	403980 <__udivdi3+0x1c4>
  403886:	1b09      	subs	r1, r1, r4
  403888:	0c26      	lsrs	r6, r4, #16
  40388a:	b2a7      	uxth	r7, r4
  40388c:	2301      	movs	r3, #1
  40388e:	fbb1 f0f6 	udiv	r0, r1, r6
  403892:	0c2a      	lsrs	r2, r5, #16
  403894:	fb06 1110 	mls	r1, r6, r0, r1
  403898:	ea42 4101 	orr.w	r1, r2, r1, lsl #16
  40389c:	fb07 f200 	mul.w	r2, r7, r0
  4038a0:	428a      	cmp	r2, r1
  4038a2:	d907      	bls.n	4038b4 <__udivdi3+0xf8>
  4038a4:	1909      	adds	r1, r1, r4
  4038a6:	f100 3cff 	add.w	ip, r0, #4294967295
  4038aa:	d202      	bcs.n	4038b2 <__udivdi3+0xf6>
  4038ac:	428a      	cmp	r2, r1
  4038ae:	f200 80c3 	bhi.w	403a38 <__udivdi3+0x27c>
  4038b2:	4660      	mov	r0, ip
  4038b4:	1a89      	subs	r1, r1, r2
  4038b6:	fbb1 f2f6 	udiv	r2, r1, r6
  4038ba:	b2ad      	uxth	r5, r5
  4038bc:	fb06 1112 	mls	r1, r6, r2, r1
  4038c0:	ea45 4501 	orr.w	r5, r5, r1, lsl #16
  4038c4:	fb07 f702 	mul.w	r7, r7, r2
  4038c8:	42af      	cmp	r7, r5
  4038ca:	d908      	bls.n	4038de <__udivdi3+0x122>
  4038cc:	192c      	adds	r4, r5, r4
  4038ce:	f102 31ff 	add.w	r1, r2, #4294967295
  4038d2:	f080 8096 	bcs.w	403a02 <__udivdi3+0x246>
  4038d6:	42a7      	cmp	r7, r4
  4038d8:	f240 8093 	bls.w	403a02 <__udivdi3+0x246>
  4038dc:	3a02      	subs	r2, #2
  4038de:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
  4038e2:	4610      	mov	r0, r2
  4038e4:	4619      	mov	r1, r3
  4038e6:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
  4038ea:	4770      	bx	lr
  4038ec:	2300      	movs	r3, #0
  4038ee:	461a      	mov	r2, r3
  4038f0:	4610      	mov	r0, r2
  4038f2:	4619      	mov	r1, r3
  4038f4:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
  4038f8:	4770      	bx	lr
  4038fa:	f1c6 0520 	rsb	r5, r6, #32
  4038fe:	fa22 f405 	lsr.w	r4, r2, r5
  403902:	40b3      	lsls	r3, r6
  403904:	431c      	orrs	r4, r3
  403906:	ea4f 4814 	mov.w	r8, r4, lsr #16
  40390a:	fa21 f305 	lsr.w	r3, r1, r5
  40390e:	fa01 f706 	lsl.w	r7, r1, r6
  403912:	fa20 f505 	lsr.w	r5, r0, r5
  403916:	fbb3 fcf8 	udiv	ip, r3, r8
  40391a:	432f      	orrs	r7, r5
  40391c:	fb08 331c 	mls	r3, r8, ip, r3
  403920:	0c3d      	lsrs	r5, r7, #16
  403922:	fa1f fa84 	uxth.w	sl, r4
  403926:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
  40392a:	fb0a f90c 	mul.w	r9, sl, ip
  40392e:	4599      	cmp	r9, r3
  403930:	fa02 fb06 	lsl.w	fp, r2, r6
  403934:	d904      	bls.n	403940 <__udivdi3+0x184>
  403936:	191b      	adds	r3, r3, r4
  403938:	f10c 32ff 	add.w	r2, ip, #4294967295
  40393c:	d36d      	bcc.n	403a1a <__udivdi3+0x25e>
  40393e:	4694      	mov	ip, r2
  403940:	ebc9 0303 	rsb	r3, r9, r3
  403944:	fbb3 f5f8 	udiv	r5, r3, r8
  403948:	fb08 3315 	mls	r3, r8, r5, r3
  40394c:	b2bf      	uxth	r7, r7
  40394e:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  403952:	fb0a f805 	mul.w	r8, sl, r5
  403956:	45b8      	cmp	r8, r7
  403958:	d904      	bls.n	403964 <__udivdi3+0x1a8>
  40395a:	193f      	adds	r7, r7, r4
  40395c:	f105 33ff 	add.w	r3, r5, #4294967295
  403960:	d361      	bcc.n	403a26 <__udivdi3+0x26a>
  403962:	461d      	mov	r5, r3
  403964:	ea45 4c0c 	orr.w	ip, r5, ip, lsl #16
  403968:	fbac 230b 	umull	r2, r3, ip, fp
  40396c:	ebc8 0707 	rsb	r7, r8, r7
  403970:	429f      	cmp	r7, r3
  403972:	f04f 0500 	mov.w	r5, #0
  403976:	d349      	bcc.n	403a0c <__udivdi3+0x250>
  403978:	d045      	beq.n	403a06 <__udivdi3+0x24a>
  40397a:	4662      	mov	r2, ip
  40397c:	462b      	mov	r3, r5
  40397e:	e763      	b.n	403848 <__udivdi3+0x8c>
  403980:	4094      	lsls	r4, r2
  403982:	f1c2 0320 	rsb	r3, r2, #32
  403986:	fa21 fc03 	lsr.w	ip, r1, r3
  40398a:	0c26      	lsrs	r6, r4, #16
  40398c:	fa20 f303 	lsr.w	r3, r0, r3
  403990:	fa01 f502 	lsl.w	r5, r1, r2
  403994:	fbbc f8f6 	udiv	r8, ip, r6
  403998:	ea43 0105 	orr.w	r1, r3, r5
  40399c:	0c0b      	lsrs	r3, r1, #16
  40399e:	fb06 cc18 	mls	ip, r6, r8, ip
  4039a2:	b2a7      	uxth	r7, r4
  4039a4:	ea43 4c0c 	orr.w	ip, r3, ip, lsl #16
  4039a8:	fb07 f308 	mul.w	r3, r7, r8
  4039ac:	4563      	cmp	r3, ip
  4039ae:	fa00 f502 	lsl.w	r5, r0, r2
  4039b2:	d909      	bls.n	4039c8 <__udivdi3+0x20c>
  4039b4:	eb1c 0c04 	adds.w	ip, ip, r4
  4039b8:	f108 32ff 	add.w	r2, r8, #4294967295
  4039bc:	d23a      	bcs.n	403a34 <__udivdi3+0x278>
  4039be:	4563      	cmp	r3, ip
  4039c0:	d938      	bls.n	403a34 <__udivdi3+0x278>
  4039c2:	f1a8 0802 	sub.w	r8, r8, #2
  4039c6:	44a4      	add	ip, r4
  4039c8:	ebc3 0c0c 	rsb	ip, r3, ip
  4039cc:	fbbc f3f6 	udiv	r3, ip, r6
  4039d0:	b289      	uxth	r1, r1
  4039d2:	fb06 cc13 	mls	ip, r6, r3, ip
  4039d6:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
  4039da:	fb07 f203 	mul.w	r2, r7, r3
  4039de:	428a      	cmp	r2, r1
  4039e0:	d907      	bls.n	4039f2 <__udivdi3+0x236>
  4039e2:	1909      	adds	r1, r1, r4
  4039e4:	f103 30ff 	add.w	r0, r3, #4294967295
  4039e8:	d222      	bcs.n	403a30 <__udivdi3+0x274>
  4039ea:	428a      	cmp	r2, r1
  4039ec:	d920      	bls.n	403a30 <__udivdi3+0x274>
  4039ee:	3b02      	subs	r3, #2
  4039f0:	4421      	add	r1, r4
  4039f2:	1a89      	subs	r1, r1, r2
  4039f4:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
  4039f8:	e749      	b.n	40388e <__udivdi3+0xd2>
  4039fa:	463a      	mov	r2, r7
  4039fc:	e70c      	b.n	403818 <__udivdi3+0x5c>
  4039fe:	4633      	mov	r3, r6
  403a00:	e71f      	b.n	403842 <__udivdi3+0x86>
  403a02:	460a      	mov	r2, r1
  403a04:	e76b      	b.n	4038de <__udivdi3+0x122>
  403a06:	40b0      	lsls	r0, r6
  403a08:	4290      	cmp	r0, r2
  403a0a:	d2b6      	bcs.n	40397a <__udivdi3+0x1be>
  403a0c:	f10c 32ff 	add.w	r2, ip, #4294967295
  403a10:	2300      	movs	r3, #0
  403a12:	e719      	b.n	403848 <__udivdi3+0x8c>
  403a14:	4633      	mov	r3, r6
  403a16:	4632      	mov	r2, r6
  403a18:	e716      	b.n	403848 <__udivdi3+0x8c>
  403a1a:	4599      	cmp	r9, r3
  403a1c:	d98f      	bls.n	40393e <__udivdi3+0x182>
  403a1e:	f1ac 0c02 	sub.w	ip, ip, #2
  403a22:	4423      	add	r3, r4
  403a24:	e78c      	b.n	403940 <__udivdi3+0x184>
  403a26:	45b8      	cmp	r8, r7
  403a28:	d99b      	bls.n	403962 <__udivdi3+0x1a6>
  403a2a:	3d02      	subs	r5, #2
  403a2c:	4427      	add	r7, r4
  403a2e:	e799      	b.n	403964 <__udivdi3+0x1a8>
  403a30:	4603      	mov	r3, r0
  403a32:	e7de      	b.n	4039f2 <__udivdi3+0x236>
  403a34:	4690      	mov	r8, r2
  403a36:	e7c7      	b.n	4039c8 <__udivdi3+0x20c>
  403a38:	3802      	subs	r0, #2
  403a3a:	4421      	add	r1, r4
  403a3c:	e73a      	b.n	4038b4 <__udivdi3+0xf8>
  403a3e:	bf00      	nop
  403a40:	6e450a0a 	.word	0x6e450a0a
  403a44:	65726564 	.word	0x65726564
  403a48:	0a0a6f63 	.word	0x0a0a6f63
  403a4c:	00000000 	.word	0x00000000
  403a50:	656e6547 	.word	0x656e6547
  403a54:	206c6172 	.word	0x206c6172
  403a58:	6c6c6143 	.word	0x6c6c6143
  403a5c:	65725420 	.word	0x65725420
  403a60:	656d7461 	.word	0x656d7461
  403a64:	0d0a746e 	.word	0x0d0a746e
  403a68:	00000000 	.word	0x00000000
  403a6c:	20746f6e 	.word	0x20746f6e
  403a70:	61657274 	.word	0x61657274
  403a74:	00646574 	.word	0x00646574
  403a78:	57542d2d 	.word	0x57542d2d
  403a7c:	4c532049 	.word	0x4c532049
  403a80:	20455641 	.word	0x20455641
  403a84:	6d617845 	.word	0x6d617845
  403a88:	20656c70 	.word	0x20656c70
  403a8c:	0a0d2d2d 	.word	0x0a0d2d2d
  403a90:	53202d2d 	.word	0x53202d2d
  403a94:	35474d41 	.word	0x35474d41
  403a98:	50585f33 	.word	0x50585f33
  403a9c:	4e49414c 	.word	0x4e49414c
  403aa0:	505f4445 	.word	0x505f4445
  403aa4:	2d204f52 	.word	0x2d204f52
  403aa8:	2d0a0d2d 	.word	0x2d0a0d2d
  403aac:	6f43202d 	.word	0x6f43202d
  403ab0:	6c69706d 	.word	0x6c69706d
  403ab4:	203a6465 	.word	0x203a6465
  403ab8:	20766f4e 	.word	0x20766f4e
  403abc:	32203231 	.word	0x32203231
  403ac0:	20343130 	.word	0x20343130
  403ac4:	343a3132 	.word	0x343a3132
  403ac8:	35303a34 	.word	0x35303a34
  403acc:	0d2d2d20 	.word	0x0d2d2d20
  403ad0:	00000000 	.word	0x00000000
  403ad4:	202d492d 	.word	0x202d492d
  403ad8:	666e6f43 	.word	0x666e6f43
  403adc:	72756769 	.word	0x72756769
  403ae0:	20676e69 	.word	0x20676e69
  403ae4:	20656874 	.word	0x20656874
  403ae8:	20495754 	.word	0x20495754
  403aec:	73206e69 	.word	0x73206e69
  403af0:	6576616c 	.word	0x6576616c
  403af4:	646f6d20 	.word	0x646f6d20
  403af8:	000d0a65 	.word	0x000d0a65
  403afc:	00000043 	.word	0x00000043

00403b00 <_global_impure_ptr>:
  403b00:	20000008 0000000a 33323130 37363534     ... ....01234567
  403b10:	42413938 46454443 00000000 33323130     89ABCDEF....0123
  403b20:	37363534 62613938 66656463 00000000     456789abcdef....
  403b30:	6c756e28 0000296c                       (null)..

00403b38 <zeroes.6721>:
  403b38:	30303030 30303030 30303030 30303030     0000000000000000

00403b48 <blanks.6720>:
  403b48:	20202020 20202020 20202020 20202020                     

00403b58 <_init>:
  403b58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  403b5a:	bf00      	nop
  403b5c:	bcf8      	pop	{r3, r4, r5, r6, r7}
  403b5e:	bc08      	pop	{r3}
  403b60:	469e      	mov	lr, r3
  403b62:	4770      	bx	lr

00403b64 <__init_array_start>:
  403b64:	00401af5 	.word	0x00401af5

00403b68 <__frame_dummy_init_array_entry>:
  403b68:	00400121                                !.@.

00403b6c <_fini>:
  403b6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  403b6e:	bf00      	nop
  403b70:	bcf8      	pop	{r3, r4, r5, r6, r7}
  403b72:	bc08      	pop	{r3}
  403b74:	469e      	mov	lr, r3
  403b76:	4770      	bx	lr

00403b78 <__fini_array_start>:
  403b78:	004000fd 	.word	0x004000fd
